diff -pruN man-pages-ja-20100115.orig/manual/util-linux/man5/nfs.5 man-pages-ja-20100115/manual/util-linux/man5/nfs.5
--- man-pages-ja-20100115.orig/manual/util-linux/man5/nfs.5	2010-01-15 00:07:15.000000000 +0900
+++ man-pages-ja-20100115/manual/util-linux/man5/nfs.5	2014-06-02 12:45:02.000000000 +0900
@@ -197,9 +197,196 @@ TCP ¥×¥í¥È¥³¥ë¤òÍÑ¤¤¤ë¡£Â¿¤¯¤Î NFS ¥µ¡¼¥
 .I udp
 NFS ¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Î¥Þ¥¦¥ó¥È¤Ë UDP ¥×¥í¥È¥³¥ë¤òÍÑ¤¤¤ë¡£¤³¤Á¤é
 ¤¬¥Ç¥Õ¥©¥ë¥È¤Ç¤¢¤ë¡£
+.TP 1.5i
+.BI lookupcache= mode
+.\" Specifies how the kernel manages its cache of directory entries
+.\" for a given mount point.
+.\" .I mode
+.\" can be one of
+.\" .BR all ,
+.\" .BR none ,
+.\" .BR pos ,
+.\" or
+.\" .BR positive .
+Í¿¤¨¤é¤ì¤¿¥Þ¥¦¥ó¥È¥Ý¥¤¥ó¥È¤ËÂÐ¤¹¤ë¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤Î¥­¥ã¥Ã¥·¥å¤ò¥«¡¼¥Í¥ë¤¬¤É¤Î¤è¤¦¤Ë´ÉÍý¤¹¤ë¤«¤ò»ØÄê¤¹¤ë¡£
+.I mode
+¤Ë¤Ï
+.BR all , 
+.BR none , 
+.BR pos , 
+¤¢¤ë¤¤¤Ï
+.BR positive
+¤Î¤É¤ì¤«¤ò»ØÄê¤¹¤ë¡£
+.\" This option is supported in kernels 2.6.28 and later.
+¤³¤Î¥ª¥×¥·¥ç¥ó¤Ï¥«¡¼¥Í¥ë 2.6.28 °Ê¹ß¤Ç¥µ¥Ý¡¼¥È¤µ¤ì¤ë¡£
+.IP
+.\" The Linux NFS client caches the result of all NFS LOOKUP requests.
+.\" If the requested directory entry exists on the server,
+.\" the result is referred to as
+.\" .IR positive .
+.\" If the requested directory entry does not exist on the server,
+.\" the result is referred to as
+.\" .IR negative .
+Linux ¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢¤¹¤Ù¤Æ¤Î NFS LOOKUP ¥ê¥¯¥¨¥¹¥È¤Î·ë²Ì¤ò¥­¥ã¥Ã¥·¥å¤¹¤ë¡£
+Í×µá¤µ¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬¥µ¡¼¥Ð¡¼¾å¤ËÂ¸ºß¤¹¤ë¾ì¹ç¡¢
+.IR positive
+¤È¤µ¤ì¤ë¡£
+Í×µá¤µ¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬¥µ¡¼¥Ð¡¼¾å¤ËÂ¸ºß¤·¤Ê¤¤¾ì¹ç¡¢
+.IR negative
+¤È¤µ¤ì¤ë¡£
+.IP
+.\" If this option is not specified, or if
+.\" .B all
+.\" is specified, the client assumes both types of directory cache entries
+.\" are valid until their parent directory's cached attributes expire.
+¤³¤Î¥ª¥×¥·¥ç¥ó¤¬»ØÄê¤µ¤ì¤Ê¤¤¾ì¹ç¡¢ ¤â¤·¤¯¤Ï
+.B all
+¤¬»ØÄê¤µ¤ì¤¿¾ì¹ç¡¢ ¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢ ¿Æ¥Ç¥£¥ì¥¯¥È¥ê¤Î¥­¥ã¥Ã¥·¥å¤µ¤ì¤¿Â°À­¤¬
+´ü¸ÂÀÚ¤ì¤Ë¤Ê¤ë¤Þ¤Ç¡¢ ¤É¤Á¤é¤Î¥Ç¥£¥ì¥¯¥È¥ê¥­¥ã¥Ã¥·¥å¥¨¥ó¥È¥ê¡¼¤Î¼ïÎà¤È¤â
+Í­¸ú¤Ç¤¢¤ë¤È¸«¤Ê¤¹¡£
+.IP
+.\" If
+.\" .BR pos " or " positive
+.\" is specified, the client assumes positive entries are valid
+.\" until their parent directory's cached attributes expire, but
+.\" always revalidates nagative entries before an application
+.\" can use them.
+.BR pos " ¤¢¤ë¤¤¤Ï " positive
+¤¬»ØÄê¤µ¤ì¤¿¾ì¹ç¡¢ ¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢ ¿Æ¥Ç¥£¥ì¥¯¥È¥ê¤Î¥­¥ã¥Ã¥·¥å¤µ¤ì¤¿Â°À­¤¬
+´ü¸ÂÀÚ¤ì¤Ë¤Ê¤ë¤Þ¤Ç¡¢ positive ¥¨¥ó¥È¥ê¡¼¤¬Í­¸ú¤Ç¤¢¤ë¤È¸«¤Ê¤¹¤¬¡¢
+¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤¬»ÈÍÑ¤¹¤ëÁ°¤Ë¡¢ negative ¥¨¥ó¥È¥ê¡¼¤Ï¾ï¤ËºÆ³ÎÇ§¤¹¤ë¡£
+.IP
+.\" If
+.\" .B none
+.\" is specified,
+.\" the client revalidates both types of directory cache entries
+.\" before an application can use them.
+.\" This permits quick detection of files that were created or removed
+.\" by other clients, but can impact application and server performance.
+.B none
+¤¬»ØÄê¤µ¤ì¤¿¾ì¹ç¡¢ ¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤¬»ÈÍÑ¤¹¤ëÁ°¤Ë¡¢
+¤É¤Á¤é¤Î¥Ç¥£¥ì¥¯¥È¥ê¥­¥ã¥Ã¥·¥å¥¨¥ó¥È¥ê¡¼¤Î¼ïÎà¤È¤âºÆ³ÎÇ§¤¹¤ë¡£
+¤³¤ì¤ÏÂ¾¤Î¥¯¥é¥¤¥¢¥ó¥È¤Ë¤è¤Ã¤ÆºîÀ®¡¢¤¢¤ë¤¤¤Ïºï½ü¤µ¤ì¤¿¥Õ¥¡¥¤¥ë¤ò¿×Â®¤Ë
+¸¡½Ð¤¹¤ë¤³¤È¤ò²ÄÇ½¤Ë¤¹¤ë¤¬¡¢ ¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤ä¡¢ ¥µ¡¼¥Ð¡¼¤Î
+À­Ç½¤Ë±Æ¶Á¤¹¤ë²ÄÇ½À­¤¬¤¢¤ë¡£
+.IP
+.\" The DATA AND METADATA COHERENCE section contains a
+.\" detailed discussion of these trade-offs.
+¥Ç¡¼¥¿¤È¥á¥¿¥Ç¡¼¥¿¤Î°ì´ÓÀ­¤ÎÀá¤Ç¤Ï¤³¤ì¤é¤Î¥È¥ì¡¼¥É¥ª¥Õ¤Î¾ÜºÙ¤ÊÏÀ¹Í¤¬´Þ¤Þ¤ì¤ë¡£
 .P
 ¿ôÃÍ¤ò»ØÄê¤·¤Ê¤¤¥ª¥×¥·¥ç¥ó¤¹¤Ù¤Æ¤ËÂÐ¤·¤Æ¡¢¤½¤ì¤¾¤ì no ¤òÁ°ÃÖ¤·¤¿¥ª¥×¥·¥ç
 ¥ó¤¬Â¸ºß¤¹¤ë¡£Îã¤¨¤Ð¡¢ nointr ¤Ï¥Õ¥¡¥¤¥ëÁàºî¤ÎÃæÃÇ¤òµö²Ä¤·¤Ê¤¤¡£
+.\" .SH "DATA AND METADATA COHERENCE"
+.SH "¥Ç¡¼¥¿¤È¥á¥¿¥Ç¡¼¥¿¤Î°ì´ÓÀ­"
+.\" Some modern cluster file systems provide
+.\" perfect cache coherence among their clients.
+.\" Perfect cache coherence among disparate NFS clients
+.\" is expensive to achieve, especially on wide area networks.
+.\" As such, NFS settles for weaker cache coherence that
+.\" satisfies the requirements of most file sharing types.
+¤¤¤¯¤Ä¤«¤Î¥â¥À¥ó¤Ê¥¯¥é¥¹¥¿¡¼¥Õ¥¡¥¤¥ë¥·¥¹¥Æ¥à¤Ç¤Ï¡¢ ¥¯¥é¥¤¥¢¥ó¥È´Ö¤Î´°Á´¤Ê¥­¥ã¥Ã¥·¥å¤Î°ì´ÓÀ­¤òÄó¶¡¤¹¤ë¡£
+¼ì¤Î³°¡¢¥ï¥¤¥É¡¦¥¨¥ê¥¢¡¦¥Í¥Ã¥È¥ï¡¼¥¯¾å¤Ç¤Ï¡¢ °Û¼ï¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È´Ö¤Î´°Á´¤Ê¥­¥ã¥Ã¥·¥å¤Î°ì´ÓÀ­¤ò¼Â¸½¤¹¤ë¤Ë¤Ï¥³¥¹¥È¤¬¤«¤«¤ë¡£
+½¾¤Ã¤Æ¡¢ NFS ¤Ï¡¢ ÂçÉôÊ¬¤Î¥Õ¥¡¥¤¥ë¶¦Í­¥¿¥¤¥×¤ÎÍ×·ï¤òËþ¤¿¤¹¼å¤¤¥­¥ã¥Ã¥·¥å¤Î°ì´ÓÀ­¤ÇºÑ¤Þ¤»¤Æ¤¤¤ë¡£
+.\" .SS "Directory entry caching"
+.SS "¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤Î¥­¥ã¥Ã¥·¥å"
+.\" The Linux NFS client caches the result of all NFS LOOKUP requests.
+.\" If the requested directory entry exists on the server,
+.\" the result is referred to as a
+.\" .IR positive " lookup result.
+.\" If the requested directory entry does not exist on the server
+.\" (that is, the server returned ENOENT),
+.\" the result is referred to as
+.\" .IR negative " lookup result.
+Linux ¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢ ¤¹¤Ù¤Æ¤Î NFS LOOKUP ¥ê¥¯¥¨¥¹¥È¤Î·ë²Ì¤ò¥­¥ã¥Ã¥·¥å¤¹¤ë¡£
+Í×µá¤µ¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬¥µ¡¼¥Ð¡¼¾å¤ËÂ¸ºß¤¹¤ë¾ì¹ç¡¢·ë²Ì¤Ï
+.IR possitive " lookup result
+¤È¤µ¤ì¤ë¡£
+Í×µá¤µ¤ì¤¿¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬¥µ¡¼¥Ð¡¼¾å¤ËÂ¸ºß¤·¤Ê¤¤¾ì¹ç
+( ¤Ä¤Þ¤ê¡¢¥µ¡¼¥Ð¡¼¤¬ ENOENT ¤òÊÖ¤¹¾ì¹ç )¡¢ ·ë²Ì¤Ï
+.IR negative " lookup result
+¤È¤µ¤ì¤ë¡£
+.P
+.\" To detect when directory entries have been added or removed
+.\" on the server,
+.\" the Linux NFS client watches a directory's mtime.
+¥µ¡¼¥Ð¡¼¾å¤Ç¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬ÄÉ²Ã¡¢ ¤¢¤ë¤¤¤Ïºï½ü¤µ¤ì¤¿¤³¤È¤ò
+¸¡½Ð¤¹¤ë¤¿¤á¤Ë¡¢ Linux ¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È¤Ï¥Ç¥£¥ì¥¯¥È¥ê¤Î mtime
+¤ò´Æ»ë¤¹¤ë¡£
+.\" If the client detects a change in a directory's mtime,
+.\" the client drops all cached LOOKUP results for that directory.
+¥¯¥é¥¤¥¢¥ó¥È¤¬¥Ç¥£¥ì¥¯¥È¥ê¤Î mtime ¤ËÊÑ¹¹¤ò¸¡½Ð¤·¤¿¾ì¹ç¡¢
+¥¯¥é¥¤¥¢¥ó¥È¤Ï¤½¤Î¥Ç¥£¥ì¥¯¥È¥ê¤Î¤¹¤Ù¤Æ¤Î¥­¥ã¥Ã¥·¥å¤µ¤ì¤¿ LOOKUP
+¤Î·ë²Ì¤òÇË´þ¤¹¤ë¡£
+.\" Since the directory's mtime is a cached attribute, it may
+.\" take some time before a client notices it has changed.
+¥Ç¥£¥ì¥¯¥È¥ê¤Î mtime ¤Ï¡¢ ¥­¥ã¥Ã¥·¥å¤µ¤ì¤¿Â°À­¤Ç¤¢¤ë¤¿¤á¡¢
+¥¯¥é¥¤¥¢¥ó¥È¤¬¤½¤ÎÊÑ¹¹¤Ëµ¤¤Å¤¯¤Þ¤Ç¤Ë¤Ï»þ´Ö¤¬¤«¤«¤ë¤³¤È¤¬¤¢¤ë¡£
+.\" See the descriptions of the
+.\" .BR acdirmin ", " acdirmax ", and " noac
+.\" mount options for more information about
+.\" how long a directory's mtime is cached.
+¥Ç¥£¥ì¥¯¥È¥ê¤Î mtime ¤¬¥­¥ã¥Ã¥·¥å¤µ¤ì¤ë´ü´Ö¤Ë¤Ä¤¤¤Æ¤Î¾ðÊó¤Ï
+.BR acdirmin ", " acdirmax ", ¤½¤·¤Æ " noac
+¥Þ¥¦¥ó¥È¥ª¥×¥·¥ç¥ó¤ÎÀâÌÀ¤ò»²¾È¡£
+.P
+.\" Caching directory entries improves the performance of applications that
+.\" do not share files with applications on other clients.
+.\" Using cached information about directories can interfere
+.\" with applications that run concurrently on multiple clients and
+.\" need to detect the creation or removal of files quickly, however.
+¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤Î¥­¥ã¥Ã¥·¥å¤Ï¡¢ Â¾¤Î¥¯¥é¥¤¥¢¥ó¥È¾å¤Î
+¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤Ç¥Õ¥¡¥¤¥ë¤ò¶¦Í­¤·¤Ê¤¤¡¢ ¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤ÎÀ­Ç½¤ò¸þ¾å¤µ¤»¤ë¡£
+¤Þ¤¿°ìÊý¡¢ ¥Ç¥£¥ì¥¯¥È¥ê¤Ë´Ø¤¹¤ë¥­¥ã¥Ã¥·¥å¤µ¤ì¤¿¾ðÊó¤ÎÍøÍÑ¤Ï¡¢
+Ê£¿ô¤Î¥¯¥é¥¤¥¢¥ó¥È¾å¤Ç¡¢ Æ±»þ¤Ë¼Â¹Ô¤·¤Æ¥Õ¥¡¥¤¥ë¤ÎºîÀ®¤äºï½ü¤ò¼êÁá¤¯¸¡½Ð¤¹¤ëÉ¬Í×¤¬¤¢¤ë
+¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤Ë´³¾Ä¤¹¤ë²ÄÇ½À­¤¬¤¢¤ë¡£
+.\" The
+.\" .B lookupcache
+.\" mount option allows some tuning of directory entry caching behavior.
+.B lookupcache
+¥Þ¥¦¥ó¥È¥ª¥×¥·¥ç¥ó¤Ï¡¢ ¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¥­¥ã¥Ã¥·¥å¤ÎµóÆ°¤Î
+¥Á¥å¡¼¥Ë¥ó¥°¤ò²ÄÇ½¤Ë¤¹¤ë¡£
+.P
+.\" Before kernel release 2.6.28,
+.\" the Linux NFS client tracked only positive lookup results.
+.\" This permitted applications to detect new directory entries
+.\" created by other clients quickly while still providing some of the
+.\" performance benefits of caching.
+.\" If an application depends on the previous lookup caching behavior
+.\" of the Linux NFS client, you can use
+.\" .BR lookupcache=positive .
+¥«¡¼¥Í¥ë¥ê¥ê¡¼¥¹ 2.6.28 °ÊÁ°¤Ï¡¢ Linux ¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È¤Ï
+positive lookup result ¤À¤±¤òÄÉÀ×¤·¤Æ¤¤¤¿¡£
+¤³¤ì¤Ï¡¢ ¥­¥ã¥Ã¥·¥å¤¹¤ë¤³¤È¤ËÂÐ¤¹¤ëÀ­Ç½¤Ë¤Ä¤¤¤Æ¤Î¤¤¤¯¤Ä¤«¤ÎÍøÅÀ¤ò
+Äó¶¡¤·¤Ä¤Ä¡¢ Â¾¤Î¥¯¥é¥¤¥¢¥ó¥È¤Ë¤è¤Ã¤Æºî¤é¤ì¤¿
+¿·¤·¤¤¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤ò ¿×Â®¤Ë¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤¬¸¡½Ð¤¹¤ë¤³¤È¤ò²ÄÇ½¤Ë¤¹¤ë¡£
+¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤¬¡¢°ÊÁ°¤Î Linux ¤Î NFS ¥¯¥é¥¤¥¢¥ó¥È¤Î¥ë¥Ã¥¯¥¢¥Ã¥×¥­¥ã¥Ã¥·¥å¤ÎµóÆ°¤Ë
+°ÍÂ¸¤¹¤ë¾ì¹ç¡¢
+.BR lookupcache=positive
+¤ò»ÈÍÑ¤¹¤ë¤³¤È¤Ë¤Ê¤ë¡£
+.P
+.\" If the client ignores its cache and validates every application
+.\" lookup request with the server,
+.\" that client can immediately detect when a new directory
+.\" entry has been either created or removed by another client.
+.\" You can specify this behavior using
+.\" .BR lookupcache=none .
+.\" The extra NFS requests needed if the client does not
+.\" cache directory entries can exact a performance penalty.
+.\" Disabling lookup caching
+.\" should result in less of a performance penalty than using
+.\" .BR noac ,
+.\" and has no effect on how the NFS client caches the attributes of files.
+¥¯¥é¥¤¥¢¥ó¥È¤¬¤½¤Î¥­¥ã¥Ã¥·¥å¤òÌµ»ë¤·¡¢ ¥µ¡¼¥Ð¡¼¤Ç¥¢¥×¥ê¥±¡¼¥·¥ç¥ó¤Î¥ë¥Ã¥¯¥¢¥Ã¥×Í×µáËè¤Ë³ÎÇ§¤¹¤ë¾ì¹ç¡¢
+¤½¤Î¥¯¥é¥¤¥¢¥ó¥È¤Ï¡¢ ¿·¤·¤¤¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¡¼¤¬ºîÀ®¤¢¤ë¤¤¤ÏÊÌ¤Î¥¯¥é¥¤¥¢¥ó¥È¤Ë¤è¤Ã¤Æºï½ü¤µ¤ì¤¿»þ
+ÁáµÞ¤Ë¸¡½Ð¤¹¤ë¤³¤È¤¬¤Ç¤­¤ë¡£
+.BR lookupcache=none
+¤ò»È¤¦¤³¤È¤Ç¡¢ ¤³¤ÎµóÆ°¤ò»ØÄê¤Ç¤­¤ë¡£
+¥¯¥é¥¤¥¢¥ó¥È¤¬¥Ç¥£¥ì¥¯¥È¥ê¥¨¥ó¥È¥ê¤ò¥­¥ã¥Ã¥·¥å¤·¤Ê¤¤¾ì¹ç¤ËÉ¬Í×¤È¤Ê¤ëÄÉ²Ã¤Î NFS ¥ê¥¯¥¨¥¹¥È¤Ï¡¢
+À­Ç½¾å¤Î¥Ú¥Ê¥ë¥Æ¥£¤òÈ¯À¸¤µ¤»¤ë¡£
+¥ë¥Ã¥¯¥¢¥Ã¥×¥­¥ã¥Ã¥·¥å¤òÌµ¸ú¤Ë¤¹¤ë¤³¤È¤Ï¡¢
+.BR noac
+¤ò»È¤¦¤è¤ê¤âÀ­Ç½¾å¤Î¥Ú¥Ê¥ë¥Æ¥£¤Ï¾¯¤Ê¤¯¤Ê¤ë¤Ï¤º¤Ç¤¢¤ê¡¢ NFS ¥¯¥é¥¤¥¢¥ó¥È¤¬¤É¤Î¤è¤¦¤Ë¥Õ¥¡¥¤¥ë¤ÎÂ°À­¤ò
+¥­¥ã¥Ã¥·¥å¤¹¤ë¤«¤Ë±Æ¶Á¤òÍ¿¤¨¤Ê¤¤¡£
 .SH ¥Õ¥¡¥¤¥ë
 .I /etc/fstab
 .SH ´ØÏ¢¹àÌÜ
