.\" Translated Thu Apr  8 00:11:03 JST 1999
.\"    by FUJIWARA Teruyoshi <fujiwara@linux.or.jp>
.\" Corrected by
.\"       NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Fri Oct 20 03:54:55 JST 2000
.\"       Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\"
.TH MAKE 1L "22 August 1989" "GNU" "LOCAL USER COMMANDS"
.SH 名前
make \- プログラム群を管理するための GNU make ユーティリティ
.SH 書式
.B "make "
[
.B \-f
.I makefile
] [ option ] ...
target ...
.SH 注意
このオンラインマニュアルは、
.I GNU make
のドキュメントの一部を抜粋したものである。このファイルはあまり頻繁には
更新されない。というのも、GNU プロジェクトでは nroff が使われていない
からである。完全かつ最新の内容のドキュメントを見るには、info ファイル
.B make.info
を参照すること。これは texinfo のソースファイル
.BR make.texinfo
から生成される。
.SH 説明
.LP
.I make
ユーティリティの目的は、大きなプログラムの中の再コンパイルする必要があ
る部分を自動的に決定し、再コンパイルのためのコマンドを実行することであ
る。
このマニュアルでは、GNU が実装した
.IR make
の説明を行っている。これは Richard Stallman と Roland McGrath が書いた
ものである。
例としては C 言語のプログラムを用いているが、これは C 言語が最も一般的
だからである。
.I make
は、シェルコマンドからコンパイラを起動できるどんなプログラミング言語と
でも組み合わせて使用できる。
実際、
.I make
の利用対象はプログラムだけに限られない。
.I make
は、あるファイルを書き換えたら、その書き換えたファイルを元にして別のファ
イルも自動的に更新しなければならないような任意の作業で利用できる。
.LP
.IR make
を使う準備をするためには、まず
.I makefile
と呼ばれるファイルを書かなければならない。このファイルは、プログラムを
構成するファイル間の関係と各ファイルを更新するためのプログラムを記述し
たものである。プログラムの場合は普通、実行ファイルはオブジェクトファイ
ルによって更新され、このオブジェクトファイルもまたソースファイルのコン
パイルによって生成される。
.LP
適切な makefile さえあれば、ソースファイルを一部変更する度に
.sp 1
.RS
.B make
.RE
.sp 1
という簡単なシェルコマンドを実行するだけで、必要な再コンパイルが全て行
われる。
.I make
プログラムは、makefile データベースとファイルの最終更新時刻を用いて、
更新する必要があるファイルを見つける。このようなファイルに対して、
.I make
はデータベースに記録されているコマンドを実行する。
.LP
.I make
は
.I makefile
中のコマンドを実行して、1 つ以上のターゲット
.IR 名称
を更新する。この
.I 名称
は普通はプログラムである。
.B \-f
が無い場合、
.I make
は makefile として、
.IR GNUmakefile ,
.IR makefile ,
.IR Makefile
をこの順に参照する。
.LP
通常、ユーザが makefile として使うべきなのは、
.I makefile
または
.IR Makefile
である。
(筆者は
.I Makefile
を推奨する。なぜなら、この名前であれば常にディレクトリ表示の先頭近くに
現われるし、
.IR  README
のような他の重要ファイルのすぐ近くに来るからである。)
最初にチェックされる名前である
.IR GNUmakefile
は、大抵の場合は好ましくない。
この名前を使うべきなのは、GNU
.IR make
に特化しており、他のバージョンの
.IR make
では処理できない makefile を使う場合である。
.I makefile
が `\-' ならば、標準入力が読み込まれる。
.LP
.I make
がターゲットを更新するのは、ターゲットが依存している必要ファイルがター
ゲットより後に変更された場合と、ターゲットが存在しない場合である。
.SH オプション
.sp 1
.TP 0.5i
.B \-b
.TP 0.5i
.B \-m
これらのオプションは無視される。これらは他のバージョンの
.IR make
との互換性のためのものである。
.TP 0.5i
.BI "\-C " dir
makefile を読み込むなどの動作の前に、ディレクトリ
.I dir
に移動する。複数の
.B \-C
オプションが指定されている場合、それぞれは前の指定に対する相対パスと解
釈される。例えば、
.BR "\-C " /
.BR "\-C " etc
は
.BR "\-C " /etc
と同じ意味である。このオプションは通常、
.IR make
を再帰的に呼び出す時に使われる。
.TP 0.5i
.B \-d
通常の処理情報に加えて、デバッグ情報を出力する。デバッグ情報に含まれる
のは、再構築の対象となっているファイル、比較されるファイル時間とその結
果、実際に再構築する必要があるファイル、候補になっていたり実際に適用さ
れる暗黙のルールなど、
.I make
が動作を決めるために必要なもの全てである。
.TP 0.5i
.B \-e
環境変数から与える変数を指定する。これは makefile の変数よりも優先され
る。
.TP 0.5i
.BI "\-f " file
.I file
を makefile として使用する。
.TP 0.5i
.B \-i
ファイルの再構築時に実行したコマンドで起きたエラーを全て無視する。
.TP 0.5i
.BI "\-I " dir
インクルードする makefile を検索するディレクトリ
.I dir
を指定する。
複数の
.B \-I
オプションを使って複数のディレクトリを指定した場合、ディレクトリの検索
は指定した順で行われる。
.IR make
の他のフラグに対する引き数と異なり、
.B \-I
に与える引き数は、フラグの直後に記述できる。
つまり、
.BI \-I dir
という記述も
.BI "\-I " dir
と共に許される。
この記法を許すのは、C プリプロセッサの
.B \-I
フラグとの互換性のためである。
.TP 0.5i
.BI "\-j " jobs
同時に実行できるジョブ(コマンド)の数を指定する。
.B \-j
オプションが複数個指定された場合は、最後の指定が有効になる。引き数無しで
.B \-j
オプションが与えられた場合、
.IR make
は同時に実行できるジョブの数を制限しない。
.TP 0.5i
.B \-k
エラーが起きてもできる限り実行を継続しようとする。
失敗したターゲットとそのターゲットに依存しているファイルは再生成されな
いものの、そのターゲットに関する他の依存関係は処理することができる。
.TP 0.5i
.B \-l
.TP 0.5i
.BI "\-l " load
他のジョブが動作しており、ロードアベレージが少なくとも
.I load
(浮動小数)ならば、新しいジョブ(コマンド)を実行しないことを指定する。
引き数無しの場合には、以前に指定した負荷の制限が取り除かれる。
.TP 0.5i
.B \-n
実行するコマンドの表示だけを行い、実際の実行を行わない。
.TP 0.5i
.BI "\-o " file
.I file
が依存先のファイルより古い場合であっても再構築を行わなず、
.IR file
が変更されても他のファイルの再構築を一切行わない。本質的には、そのファ
イルは非常に古いものとして扱われ、規則が無視される。
.TP 0.5i
.B \-p
makefile を読み込んで得られたデータベース(規則と変数の値)を出力する。
特に指定しない限り、その後の動作は通常通りである。また、
.B \-v
オプションで得られるバージョン情報も出力する。
ファイルを全く再構築することなく、データベースの表示だけを行うには
.B make
.B \-p
.BI \-f /dev/nul
を用いること。
.TP 0.5i
.B \-q
「問い合わせモード」で動作する。
コマンドを全く実行せず、何も表示しない。ただ、指定されたターゲットが既
に最新ならば終了ステータス 0 を返し、そうでなければ 0 でないステータス
を返す。
.TP 0.5i
.B \-r
組み込みの暗黙的ルールを使用しない。
また、添字規則で使うデフォルトの添字のリストも全て消去する。
.TP 0.5i
.B \-s
静かに動作する。コマンドを実行する際に、コマンドの表示を行わない。
.TP 0.5i
.B \-S
.B \-k
オプションの影響を打ち消す。
このオプションが必要になるのは、
.I make
を再帰的に用いているために
.B \-k
オプションがトップレベルの
.I make
から MAKEFLAGS を通じて継承される場合や、環境変数 MAKEFLAGS で
.B \-k
を設定している場合だけである。
.TP 0.5i
.B \-t
コマンドを実行せずにファイルにタッチする(実際にはファイルを変更せず、
最新の印を付ける)。このオプションを使うと見かけ上コマンドが実行された
ことになり、後で起動する
.IR make
をだますことができる。
.TP 0.5i
.B \-v
.I make
プログラムのバージョンおよび著作権表示、作者のリスト、無保証であること
の宣言を出力する。
.TP 0.5i
.B \-w
他の処理を行う前後に、作業ディレクトリを表示する。
再帰的な
.I make
コマンドが複雑な入れ子になっている状況でエラーを追跡する際に便利である。
.TP 0.5i
.BI "\-W " file
ターゲット
.I file
が変更されたばかりのものとして動作する。
.B \-n
フラグを指定している場合、そのファイルを変更するとどうなるかが表示され
る。
.BR \-n
が指定されていない場合の動作は、
.IR make
の実行前に、指定されたファイルに対して
.I touch
を行った時とほぼ同じである。ただし、修正時刻が変更されるのは
.IR make
の内部だけである点が異なる。
.SH 関連項目
.I "The GNU Make Manual"
.SH バグ
.I "The GNU Make Manual"
の「問題点とバグ(Problems and Bugs)」の章を参照すること。
.SH 著者
このオンラインマニュアルはスタンフォード大学の Dennis Morse 氏が寄付し
たものである。その後 Roland McGrath が改訂している。

