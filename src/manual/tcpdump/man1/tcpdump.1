.\" @(#) $Header: /tcpdump/master/tcpdump/tcpdump.1,v 1.72.2.3 2000/07/13 05:53:47 guy Exp $ (LBL)
.\"
.\" Copyright (c) 1987, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 1996, 1997
.\"	The Regents of the University of California.  All rights reserved.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that: (1) source code distributions
.\" retain the above copyright notice and this paragraph in its entirety, (2)
.\" distributions including binary code include the above copyright notice and
.\" this paragraph in its entirety in the documentation or other materials
.\" provided with the distribution, and (3) all advertising materials mentioning
.\" features or use of this software display the following acknowledgement:
.\" ``This product includes software developed by the University of California,
.\" Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
.\" the University nor the names of its contributors may be used to endorse
.\" or promote products derived from this software without specific prior
.\" written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\" Japanese Version Copyright (c) 1998
.\"           MAEHARA Kohichi
.\"                  &
.\"           HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Tue Jan 6 00:00:00 JST 1998
.\"     by  MAEHARA Kouhichi <maeharak@kw.netlaputa.ne.jp>
.\"     by  HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.\" Updated Fri Sep 11 00:55:00 JST 2000
.\"	by  Kentaro Shirakata <argrath@ub32.org>
.\"
.TH TCPDUMP 1  "30 June 1997"
.SH 名前
tcpdump \- ネットワークのトラフィックをダンプする
.SH 書式
.na
.B tcpdump
[
.B \-adeflnNOpqRStvxX
] [
.B \-c
.I count
] [
.B \-F
.I file
]
.br
.ti +8
[
.B \-i
.I interface
]
[
.B \-m
.I module
]
[
.B \-r
.I file
]
.br
.ti +8
[
.B \-s
.I snaplen
]
[
.B \-T
.I type
]
[
.B \-w
.I file
]
.br
.ti +8
[
.I expression
]
.br
.ad
.SH 説明
.LP
\fItcpdump\fP は真偽値の \fI条件式\fP に一致するネットワークインターフェイス上のパケットのヘッダを表示する。
.LP
.B nit か bpf を用いる SunOSの場合:
.I tcpdump 
を動作させるためには 
.I /dev/nit 
か 
.I /dev/bpf* 
に読み込み権限を持っている必要がある。
.B dlpi を利用する Solaris の場合:
仮想ネットワークデバイス、たとえば 
.IR /dev/le
といったものに読み込み権限を持っている必要がある。
.B dlpi を利用する HP-UX の場合:
実行者が root であるか、または root に setuid してインストールされている必要がある。
.B snoop を用いる IRIX の場合:
実行者が root であるか、または root に setuid してインストールされている必要がある。
.B Linux の場合:
実行者が root であるか、または root に setuid してインストールされている必要がある。
.B Ultrix および Digital UNIX の場合:
まず、スーパーユーザが 
.IR pfconfig(8) 
を用いて無差別透過モード(promicuous-mode)を有効にする必要がある。
その後は一般ユーザが 
.BR tcpdump 
を実行可能である。
.B BSD の場合: 
.IR /dev/bpf* 
に対する読み込み権限が必要。
.SH オプション
.TP
.B \-a
ネットワークとブロードキャストアドレスを DNS 名に変換する。
.TP
.B \-c
\fIcount\fP 個のパケットを受信したのちに終了する。
.TP
.B \-d
コンパイルされたパケットマッチングコードを人間が読める形式で標準出力にダンプし、終了する。
.TP
.B \-dd
パケットマッチングコードを 
.B C
言語の一部として利用可能なかたちでダンプする。
.TP
.B \-ddd
パケットマッチングコードを 十進数でダンプする(count が先行する)。
.TP
.B \-e
各ダンプ行にリンクレベルヘッダを表示する。
.TP
.B \-f
「外部の」インターネットアドレスをシンボルではなくて数値で表示する
(このオプションは馬鹿な Sun の yp サービスを迂回することを意図している 
\(em Sun の yp サービスはローカルではないインターネットアドレスを変換しようとすると
永久に動作が停止してしまうバグがある)。
.TP
.B \-F
フィルター条件式の指示入力として \fIfile\fP を用いる。
この後ろにコマンドラインで条件式による指示が与えられても無視する。
.TP
.B \-i
\fIinterface\fP を監視する。
指示のない場合は tcpdump はシステムのインターフェイスのリストから
最も小さい番号で有効になっているもの(但しループバックは除く)を探し出す。
指示されたインターフェイスが存在しない場合はもっとも近いものが選択される。
.TP
.B \-l
標準出力をバッファリングする。データを蓄積しながら監視する場合に有効で
ある。使用例:
.br
``tcpdump\ \ \-l\ \ |\ \ tee dat'' or
``tcpdump\ \ \-l \ \ > dat\ \ &\ \ tail\ \ \-f\ \ dat''.
.TP
.B \-n
アドレス(ホストアドレス、ポート番号など)を名前に変換しない。
.TP
.B \-N
ホストのドメイン名を表示しない。
つまりこれを使用した場合 \fItcpdump\fP は``nic.ddn.mil'' と表示するかわりに ``nic'' と表示する。
.TP
.B \-m
SMI MIB モジュールをファイル \fImodule\fR から読み込む。
複数の MIB モジュールを読み込む目的で、
このオプションを複数回使用することも出来る。
.TP
.B \-O
パケットマッチングコードオプティマイザを停止する。
これはオプティマイザのバグを疑っている場合にのみ有益である。
.TP
.B \-p
無差別透過モードを \fI利用しない\fP。しかしながら、他の理由でインター
フェイスが無差別透過モードになってしまうこともあることに注意すること。
このため `-p' オプションは `ether host {loca-lw-addr} or ether broadcast' 
の省略形としては使用できない。
.TP
.B \-q
すばやい(というか静かな)出力。限定されたプロトコルの情報しか出力しないので、出力行は短いものとなる。
.TP
.B \-r
パケットを(-w オプションで作成した)\fIfile\fRから読み込む。
\fIfile\fRとして ``-'' を指定した場合には標準入力が利用される。
.TP
.B \-s
デフォルトの 68 バイト(SunOS の NIT では最小は実際には 96 バイト)に代わって \fIsnaplen\fP バイトをおのおののパケットから取り出し利用する。
IP, ICMP, TCP, UDP については 68 バイトあれば十分だが、ネームサーバや NFS の情報には足りないかもしれない(後述)。

snapshot 制限のために後ろが切り捨てられたパケットは出力時に``[|\fIproto\fP]'' の形式で示される。
ここで \fIproto\fP は切り捨ての生じたレベルに対応するプロトコルの名前である。
大きな snapshot を取ろうとするとパケットを処理する時間は増加し、またこちらのほうが重要だが、バッファに溜めることができる量が減少してしまう点に注意すること。
すなわちパケットが失なわれる可能性もある。プロトコルの情報が得られる必要最小限の \fIsnaplen\fP とすること。
.TP
.B \-T
"\fIexpression\fP"(条件式) で選択されたパケットに指示された \fItype\fR での翻訳を指示する。現在有効な type は 
\fBrpc\fR (Remote Procedure Call)、
\fBrtp\fR (Real-Time Applications protocol)、
\fBrtcp\fR (Real-Time Applications control protocol)、
\fBsnmp\fR (Simple Network Management Protocol),
\fBvat\fR (Visual Audio Tool)、
\fBwb\fR (distributed White Board)。
.TP
.B \-R
ESP/AH パケットが古い定義(RFC1825 〜 RFC1829)に従っていると仮定する。
このオプションが指定されると、\fItcpdump\fP は relplay prevention フィールドを表示しない。
ESP/AH の定義にはプロトコルバージョンフィールドがないので、
\fItcpdump\fP は ESP/AH プロトコルのバージョンを推論することが出来ない。
.TP
.B \-S
TCP シーケンス番号を相対値ではなくて絶対値で表示する。
.TP
.B \-t
ダンプ行に時間情報を表示\fIしない\fP。
.TP
.B \-tt
ダンプ行に表示する時間情報を整形しない。
.TP
.B \-v
(ちょっとだけ)詳細な出力。IP パケットにおける 生存時間(TTL) やサービスの種類の情報などを表示する。
.TP
.B \-vv
もっと詳細な出力。NFS応答パケットにおける付加フィールドなどを表示する。
.TP
.B \-vvv
さらに詳細な出力。
例えば、telnet \fBSB\fP ... \fBSE\fP オプションは全て表示される。
.B \-X
オプションも指定されると、telnet オプションは 16 進表示でも表示される。
.TP
.B \-w
パケットを解析、表示するかわりに生のまま \fIfile\fR に書き出す。
このファイルはあとで \-r オプションを用いれば表示することができる。
\fIfile\fR として `-' を指示すると標準出力を用いる。
.TP
.B \-x
(リンクレベルヘッダを除く)すべてのパケットを 16 進で表示する。パケット全体と 
.I snaplen 
バイトの小さい方だけを表示する。
.TP
.B \-X
16 進表示されるときに、 ASCII 文字も表示する。
従って、
.B \-x
オプションもセットされると、パケットは 16 進と ASCII 文字の両方で表示される。
これは新しいプロトコルを解析するときに非常に便利である。
.B \-x
オプションが設定されていなくても、
パケットの部分によっては 16 進と ASCII 文字の両方で表示されることもある。
.IP "\fI expression(条件式)\fP"
.RS
ダンプするパケットの種類を選択する。
\fIexpression\fP が与えられないときは、ネットワーク上のすべてのパケットをダンプする。
そうでなければ、\fIexpression\fP が`true'(真) となるパケットだけをダンプする。
.LP
\fIexpression\fPは一つ以上の
.IR primitive (要素)
から成る。要素は一つ以上の修飾子を先行する一個の 
.I id
(名前でも番号でもよい)である。修飾子には三つの種類がある:
.IP \fItype\fP
修飾子は id名または id 番号が指すものの種類を示す。利用可能なものは 
.BR host ,
.BR net ,
.B port 
である。例: `host foo'、`net 128.3'、`port 20'。
type 修飾子が無い場合は、
.B host 
が指示されているものとみなす。
.IP \fIdir\fP
修飾子は 
.I id 
に向けて、または 
.I id 
へ、のどちらかあるいは両方の通信方向を特定する。方向として指示できるのは 
.BR src ,
.BR dst ,
.BR "src or dst" ,
.B "src and dst"
である。例、 `src foo'、`dst net 128.3'、`src or dst port ftp-data'。
dir 修飾子が指定されない場合は 
.B "src or dst"
が指示されているものとみなす。`null' リンク層(すなわち slip のよう
なポイントツーポイントプロトコル)においては、方向を指定する修飾子として
.B inbound
と 
.B outbound 
も利用可能である。
.IP \fIproto\fP
修飾子は一致する特定のプロトコルに制限する。利用可能なプロトコルは以下の通り:
.BR ether ,
.BR fddi ,
.BR mopdl ,
.BR ip ,
.BR ip6 ,
.BR arp ,
.BR rarp ,
.BR decnet ,
.BR lat ,
.BR sca ,
.BR moprc ,
.BR mopdl ,
.BR icmp ,
.BR icmp6 ,
.BR tcp ,
.BR udp 。
例: `ether src foor'、`arp net 128.3'、`tcp port 21'。
proto 修飾子が指示されない場合は type と矛盾しない範囲で全てのプロトコ
ルが指示されているものとみなす。
例: `src foo' は `(ip or arp or rarp) src foo' 
(このような書き方は文法あやまりだが)を意味し、
`net bar' は `(ip or arp or rarp) net bar' を意味し、
また `port 53' は `(tcp or udp) port 53' を意味する。
.LP
[`fddi'は実際には `ether' の別名である;解析時に``特定のネットワー
クインターフェイスが利用するデータリンク層''として扱われる。FDDI ヘッ
ダーはイーサネット的なソースおよびディスティネーションアドレスを含み、ま
たイーサネット的なパケットタイプも含むので、これらの FDDI フィールドを 
イーサネットの同類として選別できる。FDDI ヘッダにはその他のフィールド
も含まれるが、これについてはフィルタの条件式で明示的に指示することはで
きない。]
.LP
上記に加えて、特別な`要素'を示すキーワードがある。
.BR gateway ,
.BR broadcast ,
.BR less ,
.B greater
とarithmtic expression(数値による条件式)である。これらについてはこのあとで記述する。
.LP
もっと複雑なフィルタ条件式は 
.BR and ,
.BR or ,
.B not 
と各要素の組合せで表現できる。
例:`host foo and not port ftp and not port ftp-data'。
明示的な修飾子は省略してタイプ数を減らすことができる。
例:`tcp dst port ftp or ftp-data or domain' は
`tcp dst prot ftp or tcp dst port ftp-data or tcp dst prot domain'と全く同じ意味である。
.LP
許容される要素の組み合わせは以下の通り。
.IP "\fBdst host \fIhost\fR"
パケットの IPv4/v6 ディスティネーションフィールドが \fIhost\fP であるとき真。アドレスでも名前でもよい
.IP "\fBsrc host \fIhost\fR"
パケットの IPv4/v6 ソースフィールドが \fIhost\fP であるとき真。
.IP "\fBhost \fIhost\fP
パケットの IPv4/v6 ソースまたは IP/v4/v6 ディスティネーションフィールドが \fIhost\fP であるとき真。
上記の各 host を示す条件式には \fBip\fP、\fBarp\fP、\fBrarp\fP、\fBip6\fP のいずれかを付加してもよい。
.in +.5i
.nf
\fBip host \fIhost\fR
.fi
.in -.5i
は下記と同じ。
.in +.5i
.nf
\fBether proto \fI\\ip\fB and host \fIhost\fR
.fi
.in -.5i
もし \fIhost\fP の名前が複数の IP アドレスを持つ時はそれぞれのアドレスに一致する。
.IP "\fBether dst \fIehost\fP
イーサネットディスティネーションアドレスが \fIehost\fP であるときに真。
\fIehost\fP は /etc/ethers か数値である(数値のフォーマットについては 
.IR ethers (3N)
を参照のこと)。
.IP "\fBether src \fIehost\fP
イーサネットソースアドレスが \fIehost\fP であるときに真。
.IP "\fBether host \fIehost\fP
イーサネットソースアドレスかディスティネーションアドレスが \fIehost\fP であるときに真。
.IP "\fBgateway\fP \fIhost\fP
パケットが \fIhost\fP をゲートウェイとしているときに真。
すなわち、イーサネットソース/ディスティネーションアドレスは \fIhost\fP であるが、
IP ソース/ディスティネーションアドレスは \fIhost\fP ではないときのこと。
\fPhost\fP は名前であり、また /etc/hosts と /etc/ethers の両方に記載されていなければならない
(この条件式は \fIhost / ehost\fP それぞれを名前か番号で記述する
.in +.5i
.nf
\fBether host \fIehost \fBand not host \fIhost\fR
.fi
.in -.5i
と同等である)。
この文法は今のところ IPv6 を有効にした設定では正しく動作しない。
.IP "\fBdst net \fInet\fR"
パケットの IPv4/v6 ディスティネーションアドレスが \fInet\fP ネットワークを
含んでいるときに真。\fInet\fP は/etc/networks に記載される名前かネット
ワーク番号である( \fInetworks(4)\fP を参照)。
.IP "\fBsrc net \fInet\fR"
パケットの IPv4/v6 ソースアドレスが \fInet\fP ネットワークのものであるときに真。
.IP "\fBnet \fInet\fR"
パケットの IPv4/v6 ソース/ディスティネーションアドレスが \fInet\fP ネットワークであるときに真。
.IP "\fBnet \fInet\fR \fBmask \fImask\fR"
IP アドレスが netmask でマスクして \fInet\fR に一致するときに真。\fBsrc\fR か \fBdst\fR で修飾してもよい。
この文法は \fInet\fR が IPv6 のときには不正であることに注意。
.IP "\fBnet \fInet\fR/\fIlen\fR"
IPv4/v6 アドレスが \fIlen\fR ビットのnetmask でマスクして \fInet\fR に一致するときに真。\fBsrc\fR か \fBdst\fR で修飾してもよい。
.IP "\fBdst port \fIport\fR"
パケットが ip/tcp か ip/udp か ipv6/tcp か ipv6/udp である場合で、
行き先の port 番号が \fIport\fP であるときに真。
\fIPort\fP は番号の数値か /etc/services による名前を利用できる(
.IR tcp (4P)
と 
.IR udp (4P)
を参照のこと)。名前が利用されている場合は port 番号と protocol の両方で照合される。
番号か多重に定義されている名前が利用されている場合は port 番号だけが照合される
(例: \fBdst port  513\fR は tcp/login と udp/who の両方の通信を表示するし、
\fBport domain\fR は tcp/domain と udp/domain の両方を表示する)。
.IP "\fBsrc port \fIport\fR"
パケットが \fIport\fP 番号のポートをソースにしているとき真。
.IP "\fBport \fIport\fR"
パケットのソースかディスティネーションポートが \fIport\fP であるとき真。
この port を指定する条件式は \fBtcp\fP と \fBudp\fP のキーワードを付加してもよい:
.in +.5i
.nf
\fBtcp src port \fIport\fR
.fi
.in -.5i
は \fIport\fP をソースとする tcp のパケットのみに一致する。
.IP "\fBless \fIlength\fR"
パケットが \fIlength\fP 以下のときに真。
これは下記と同じ:
.in +.5i
.nf
\fBlen <= \fIlength\fP.
.fi
.in -.5i
.IP "\fBgreater \fIlength\fR"
パケットが \fIlength\fP 以上のときに真。
これは下記と同じ:
.in +.5i
.nf
\fBlen >= \fIlength\fP.
.fi
.in -.5i
.IP "\fBip proto \fIprotocol\fR"
パケットが \fIprotocol\fP 型のプロトコルの IP パケット( 
.IR ip (4P)
を参照)のものであるとき真。
\fIprotocol\fP として利用できるのは数値と \fIicmp\fP、
\fIigrp\fP、\fIudp\fP、\fInd\fP、\fItcp\fP である。\fItcp\fP、\fIudp\fP、
\fIicmp\fP はキーワードでもあるので、バックスラッシュ(\\)でキーワード
として解釈されるのを回避する必要がある。C-Shell では \\\\ を使う。
この要素はプロトコルヘッダチェインを追跡しないことに注意。
.IP "\fBip6 proto \fIprotocol\fR"
パケットが\fIprotocol\fP型の IPv6 パケットであるときに真。
この要素はプロトコルヘッダチェインを追跡しないことに注意。
.IP "\fBip6 protochain \fIprotocol\fR"
パケットが IPv6 パケットであり、
そのプロトコルヘッダチェインの中に\fIprotocol\fR型のプロトコルヘッダがある場合に真。
例えば、
.in +.5i
.nf
.\fBip6 protochain 6\fR
.fi
.in -.5i
は プロトコルヘッダチェインに TCP プロトコルを持つ IPv6 パケットに一致する。
パケットには、例えば認証ヘッダ、ルーティングヘッダ、
hop-by-hopヘッダなどがIPv6 ヘッダと TCP ヘッダの間に含まれるかもしれない。
この要素が作り出す BPF コードは複雑で、
\fItcpdump\fPの BPF 最適化コードで最適化できない。
そのため、少し遅いかもしれない。
.IP "\fBip protochain \fIprotocol\fR"
\fBip6 protochain \fIprotocol\fR と同様だが、これは IPv4 のためのものである。
.IP "\fBether broadcast\fR"
パケットがイーサネットのブロードキャストであるとき真。\fIether\fP はなくてもよい。
.IP "\fBip broadcast\fR"
パケットが IP ブロードキャストパケットであるとき真。これは全て 0 と 全て 1 の両方のブロードキャスト形式に対応し、さらにサブネットマスクにも対応している。
.IP "\fBether multicast\fR"
パケットがイーサネットのマルチキャストであるとき真。\fIether\fP はなくて
もよい。これは `\fBether[0] & 1 != 0\fP'の省略記法である。
.IP "\fBip multicast\fR"
パケットが IP のマルチキャストであるとき真。
.IP "\fBip6 multicast\fR"
パケットが IPv6 マルチキャストパケットであるとき真。
.IP  "\fBether proto \fIprotocol\fR"
パケットが ether の \fIprotocol\fR 型のものであるとき真。
\fIprotocol\fP には番号か \fIip\fP、\fIip6\fP、\fIarp\fP、\fIrarp\fP の名前が利
用可能。これらの識別子はキーワードでもあるので、バックスラッシュ(\\)で
キーワードとして解釈されるのを回避する必要がある。
[ FDDI (たとえば `\fBfddi protocol arp\fR')の場合、プロトコルの識別方法は
802.2 Logical Link Control (LLC) ヘッダーによる。それは通常は
FDDI ヘッダーの先頭に置かれている。\fItcpdump\fP は プロトコル識別子で
フィルターする場合に、全ての FDDI パケットは LLC ヘッダーを持っていて、
その LLC ヘッダーは SNAP と呼ばれる形式になっているものとみなす。 ]
.IP "\fBdecnet src \fIhost\fR"
DECNET においてソースアドレスが``10.123''のようなアドレスや DECNETのホ
ストネームの形式で指示される 
.I host 
と一致するとき真。[DECNETのホストネーム形式は DECNETに接続された 
ultrix システムにおいてのみ利用可能である。]
.IP "\fBdecnet dst \fIhost\fR"
DECNETにおいてディスティネーションアドレスが 
.I host 
に一致するとき真。
.IP "\fBdecnet host \fIhost\fR"
DECNETにおいて、ソースまたはディスティネーションアドレスが 
.I host 
に一致するときに真。
.IP "\fBip\fR, \fBip6\fR, \fBarp\fR, \fBrarp\fR, \fBdecnet\fR"
下記において:
.in +.5i
.nf
\fBether proto \fIp\fR
.fi
.in -.5i
\fIp\fR をそのいずれかのプロトコルとするのと同等である。
.IP "\fBlat\fR, \fBmoprc\fR, \fBmopdl\fR"
下記において:
.in +.5i
.nf
\fBether proto \fIp\fR
.fi
.in -.5i
\fIp\fR をそのいずれかのプロトコルとするのと同等である。
\fItcpdump\fP はこれらのプロトコルの解析方法は正確には知らない点に注意
すること。
.IP  "\fBtcp\fR, \fBudp\fR, \fBicmp\fR"
下記において:
.in +.5i
.nf
\fBip proto \fIp\fR\fBip6 proto \fIp\fR
.fi
.in -.5i
\fIp\fR をそのいずれかのプロトコルとするのと同等である。
.IP  "\fIexpr relop expr\fR"
関係式が成り立てば真。\fIrelop\fR(演算子)は >、<、>=、<=、=、!= のいず
れか一つであり、\fIexpr\fR(表現) は整定数による数値表現 (表現方法は標準
的な C の文法にしたがう)、標準的な二項演算子[+、-、*、/、&、|]、長さ演算子、パ
ケットデータアクセス演算子のいずれか。パケット内のデータに対して適用するにはこのように記述する:
.in +.5i
.nf
\fIproto\fB [ \fIexpr\fB : \fIsize\fB ]\fR
.fi
.in -.5i
\fIproto\fR は \fBether、fddi、ip、arp、rarp、tcp、udp、icmp、ip6\fR のいずれかで
操作対象のプロトコル層を指示する。
\fItcp, udp\fR とその他の上位プロトコル層は IPv4 でのみ利用でき、
IPv6では利用できないことに注意。(これは将来修正されるだろう)
指示されたプロトコル層についてのバイトオフセットは \fIexpr\fR で指定する。
\fIsize\fR を指示する場合は注目するフィールドでのバイト数で指示するが、
それは one、two また four のいずれかを用いる。指示のない場合は one で
あるとみなす。長さ演算子はキーワード \fBlen\fP で示され、パケット長を与える。
たとえば、`\fBether[0] & 1 != 0\fP'という条件式はすべてのマルチキャスト
による通信をとらえる。`\fBip[0] & 0xf != 5\fP' という条件式はすべてのオ
プション付きの IP パケットをとらえる。`\fBip[6:2] & 0x1fff = 0\fP'はフラ
グメント化されていないデータグラムか 0 番の(最初の)フラグメントだけを表示する。
なお、この条件は \fBtcp\fP と \fBudp\fP への適用を暗示している。さら
に \fBtcp[0]\fP は TCP \fIヘッダ\fP の最初のバイトを意味するが、フラ
グメントの先頭のバイトではありえない。
.LP
要素を複合させて用いる場合:
.IP
括弧でグループ分けする要素と演算子(括弧はシェルにとっても特別な意味を持つのでたぶんエスケープしなければならないだろう)。
.IP
否定 (`\fB!\fP' or `\fBnot\fP').
.IP
結合 (`\fB&&\fP' or `\fBand\fP').
.IP
択一 (`\fB||\fP' or `\fBor\fP').
.LP
否定はもっとも高い優先度をもつ。択一と結合は同等の優先度を持ち、
左から右へ評価される。
結合は併記するだけでなく明示的な \fBand\fR トークンが必要なことに注意すること。
.LP
キーワードなしで識別子があらわれた場合、直前にあらわれたキーワードを
伴っているとみなされる。
たとえば、
.in +.5i
.nf
\fBnot host vs and ace\fR
.fi
.in -.5i
は
.in +.5i
.nf
\fBnot host vs and host ace\fR
.fi
.in -.5i
の省略であり、これは
.in +.5i
.nf
\fBnot ( host vs or ace )\fR
.fi
.in -.5i
とは違う。
.LP
tcpdump に渡す条件式は都合のよいように、単一としても複数としてもよい。
一般にシェルのメタキャラクタを含むような条件式の場合は単一のクオートした引数として渡すのがよい。
複数の引数は評価の直前に空白で結合される。
.SH 例
.LP
ホスト \fIsundown\fP にかかわる全ての入出力パケットを表示する:
.RS
.nf
\fBtcpdump host sundown\fP
.fi
.RE
.LP
ホスト \fIhelios\fR と \fIhot\fR あるいは \fIace\fR との通信を表示する:
.RS
.nf
\fBtcpdump host helios and \\( hot or ace \\)\fP
.fi
.RE
.LP
ホスト \fIace\fR と \fIhelios\fR を除く全てのホストとのIPパケットを表示する:
.RS
.nf
\fBtcpdump ip host ace and not helios\fP
.fi
.RE
.LP
ローカルネットのホスト群とネットワーク Berkeley のホスト群との通信を表示する:
.RS
.nf
.B
tcpdump net ucb-ether
.fi
.RE
.LP
インターネットへのゲートウェイの \fIsnup\fP を通過する全ての ftp 通信を表示する(条件式はシェルが括弧を(誤って)解釈するのを避けるためにクオートされている点に注意せよ):
.RS
.nf
.B
tcpdump 'gateway snup and (port ftp or ftp-data)'
.fi
.RE
.LP
ローカルホストへの入出力の通信を除外して表示する(他のネットワークへのゲートウェイであるとして、ローカルネットワークを除外する例):
.RS
.nf
.B
tcpdump ip and not net \fIlocalnet\fP
.fi
.RE
.LP
ローカルホスト以外が関わる TCP 通信の TCP スタートとエンドのパケット(SYN と FIN のパケット)を表示する:
.RS
.nf
.B
tcpdump 'tcp[13] & 3 != 0 and not src and dst net \fIlocalnet\fP'
.fi
.RE
.LP
ゲートウェイ \fIsnup\fP を通過する 576 バイト以上の IP パケットを表示する:
.RS
.nf
.B
tcpdump 'gateway snup and ip[2:2] > 576'
.fi
.RE
.LP
イーサネットのブロードキャストまたはマルチキャストを
.I 必要としない
IP のブロードキャストまたはマルチキャストを表示する:
.RS
.nf
.B
tcpdump 'ether[0] & 1 = 0 and ip[16] >= 224'
.fi
.RE
.LP
echo 要求/応答(つまり ping のパケット)以外のすべての ICMP パケットを表示する:
.RS
.nf
.B
tcpdump 'icmp[0] != 8 and icmp[0] != 0"
.fi
.RE
.SH 出力形式
.LP
\fItcpdump\fP の出力はプロトコルに依存する。下記は大部分の様式の簡単な解説と例である。
.de HD
.sp 1.5
.B
..
.HD
リンクレベルヘッダ
.LP
`-e' オプションが指示されている場合、リンクレベルヘッダが表示される。
イーサネットではソースおよびディスティネーションのアドレスとパケット長が表示される。
.LP
FDDI のネットワークにおいては '-e' オプションにより \fItcpdump\fP は、ソ
ースおよびディスティネーションのアドレスとパケット長からなるフレーム制御フィールドを表示する。(フレーム制御フィールドはパケットの残りの部分の解釈
の制御をおこなう)。(IP データグラムを含むような)通常のパケットは優先度 
0 から 7 を持つ`async' パケットである;たとえば `\fBasync 4\fR'。この
ようなパケットは 802.2 LLC を含むとみなされる。LLCヘッダはそれが ISO 
データグラムやいわゆる SNAP パケット \fIでない\fR ならば、表示される。
.LP
\fI(注:以下の記述は RFC-1144 による SLIP 圧縮アルゴリズムを理解しているものと
みなして記述してある)。\fP
.LP
SLIP 接続では、方向指示(``I''が入力、``O''が出力)、パケットタイプと圧縮情報が表示される。
最初にパケットタイプが表示される。
タイプには \fIip\fP、\fIutcp\fP、\fIctcp\fP の三種類がある。
\fIip\fR パケットについてこれ以上のリンク情報は表示されない。
TCPパケットは接続識別子が次に表示される。
パケットが圧縮されている場合はその符号化されたヘッダが表示される。
\fB*S+\fIn\fR、\fB*SA+\fIn\fR 
と表示される特別な状態もある。ここで \fIn\fR はシーケンス番号(またはシーケンス番号と ack)が何回変更されたかを示す。
特別な場合でなければ、ゼロかまたは変更の回数が出力される。
変更は U(urgent pointer)、W(windows)、A(ack)、S(sequence number)、I(packet ID)に差分(+n か -n)または新しい値(=n)の組合せで示される。
最後にパケットのデータすべてと圧縮されたヘッダの長さが表示される。
.LP
この例は明示された接続識別子をもつ出力される圧縮TCPパケットを示す。
ack は 6回更新され、シーケンス番号は 49であり パケットの IDは 6である;
3バイトのデータと6バイトの圧縮ヘッダを持つ
.RS
.nf
\fBO ctcp * A+6 S+49 I+6 3 (6)\fP
.fi
.RE
.HD
ARP/RARP パケット
.LP
arp/rarp 出力は要求のタイプとその引数を表示する。フォーマットそれ自体
が自身の内容の説明となる。この短い例はホスト \fIrtsg\fP から \fIcsam\fP への `rlogin' の開始時のものである。
.RS
.nf
.sp .5
\f(CWarp who-has csam tell rtsg
arp reply csam is-at CSAM\fR
.sp .5
.fi
.RE
一行目は rtsg が インターネットホスト csam のイーサネットアドレスを尋ねる arp パケットを送信した様子。csam はイーサネットアドレスを返信している(この例でイーサネットアドレスは大文字で、インターネットアドレスは小文字で表示されている)。
.LP
この例は \fBtcpdump \-n\fP で実行するとこのように簡略化される:
.RS
.nf
.sp .5
\f(CWarp who-has 128.3.254.6 tell 128.3.254.68
arp reply 128.3.254.6 is-at 02:07:01:00:01:c4\fP
.fi
.RE
.LP
\fBTcpdump \-e\fP で実行すると最初のパケットがブロードキャストで二番目は point-to-point であることが見てとれる:
.RS
.nf
.sp .5
\f(CWRTSG Broadcast 0806  64: arp who-has csam tell rtsg
CSAM RTSG 0806  64: arp reply csam is-at CSAM\fR
.sp .5
.fi
.RE
最初のパケットは source のイーサネットアドレスが RTSG で、
ディスティネーションがイーサネットのブロードキャストであり、
タイプフィールドは 16 進の 0806(ETHER_ARP)、全長が 64 バイトであることがわかる。
.HD
TCP パケット
.LP
\fI(注: 以下は RFC-793 で記述される TCPプロトコルを理解しているものと
みなして記述してある。もしこのプロトコルに通じていないようなら、この記
述だけでなく、tcpdump そのものも役に立たないだろうが。)\fP
.LP
一般的なフォーマットは下記の通り:
.RS
.nf
.sp .5
\fIsrc > dst: flags data-seqno ack window urgent options\fP
.sp .5
.fi
.RE
\fIsrc\fP と \fIdst\fP は ソースとディスティネーションとなる IPアドレスとポート番号である。
\fIflags\fP は S(SYN)、F(FIN)、P(PUSH)か R(RST) の組合せか一つの `.'(フラグなし)である。
\fIdata-seqno\fP はこのパケットに含まれるデータのシーケンス空間の一部を示す(下記の例を参照)。
\fIack\fP はこの接続における次の期待される応答データのシーケンス番号。
\fIwindow\fP はこの接続における応答に対して用意されているバッファ空間のバイト数。
\fIurg\fP はこのパケットに `urgent' データが含まれることを示す。
\fIoptions\fP は tcp のオプションで <>で囲まれる(例<mss 1024>)。
.LP
\fIsrc、dst\fP と \fIflags\fP はかならず表示される。他のフィールドはパケットの TCP プロトコルヘッダに依存するので必要な場合のみ表示される。
.LP
これはホスト \fIrtsg\fP から \fIcsam\fP へのrlogin の開始時の一部。
.RS
.nf
.sp .5
\s-2\f(CWrtsg.1023 > csam.login: S 768512:768512(0) win 4096 <mss 1024>
csam.login > rtsg.1023: S 947648:947648(0) ack 768513 win 4096 <mss 1024>
rtsg.1023 > csam.login: . ack 1 win 4096
rtsg.1023 > csam.login: P 1:2(1) ack 1 win 4096
csam.login > rtsg.1023: . ack 2 win 4096
rtsg.1023 > csam.login: P 2:21(19) ack 1 win 4096
csam.login > rtsg.1023: P 1:2(1) ack 21 win 4077
csam.login > rtsg.1023: P 2:3(1) ack 21 win 4077 urg 1
csam.login > rtsg.1023: P 3:4(1) ack 21 win 4077 urg 1\fR\s+2
.sp .5
.fi
.RE
一行目は rtsg の TCP ポート番号 1023 から csam の \fIlogin\fP ポートへ
の送信パケットの表示である。\fBS\fP は \fISYN\fP フラグがセットされているこ
とを示す。パケットのシーケンス番号は 768512 でこのパケットはデータを
含まない。(このように \fInbytes\fP バイトのユーザデータを含むシーケ
ンス番号 \fIfirst\fP から、\fIlast\fP (last は含まれない)を示すために 
`first:last(nbytes)'と表記する)。またこのパケットには ack は設定されて
おらず、受信 window は 4096 バイト、最大セグメントサイズ(mss)オプショ
ン が 1024 バイトに設定されていた。
.LP
これに対して、csam は rtsg の SYN に対する ack を含む他は同等の内容のパケットを返している。
そこで、rtsg は csam の SYN に ack 応答を返す。`.' はフラグがセットされていないことを示す。
このパケットにはデータが含まれないので、シーケンス番号もない。ack 応答のシーケンス番号は小さな整数 1 である点に注意すること。
最初に tcp の「会話」を見いだすと、\fBtcpdump\fP はそのパケットのシー
ケンス番号を出力する。その会話のパケットからは、そのシーケンス番号と
初期化されたシーケンス番号との差異が表示される。
これは最初以外のシーケンス番号はその会話のデータグラムにおける相対的な
バイト位置として解釈できることを意味する (各データグラムは 1 から始ま
る)。 '-S' オプションはこの機能を無視して、本来のシーケンス番号を出力する。
.LP
6 行目で rtsg は scam へ 19 バイト(rtsg から csam の方向へ、2 バイト目
から 20 バイト目まで)
のデータを送る。このパケットには PUSH フラグが設定されている。7 行目で、
csam は rtsg が送信したデータを受信した、と言っているが、これには 21 
バイト目は含まれない。csam の受信 window が 19 バイト小さくなっていることか
ら、このデータはソケットバッファに留まっていると推測される。csam はま
た 1バイトのデータを rtsg に送信する。8 行目と 9 行目とで csam は 
urgent および pushed 付きのパケット 2バイト をrtsg へ送信している。
.LP
もし、snapshot が小さすぎて \fBtcpdump\fP が TCP ヘッダの全てを捉えられなかった場合は、できるだけ
の解釈をして、その残りには解釈不能だったものがあることを示すために
``[|\fItcp\fP]''と表示する。ヘッダに意味不明なオプション(たとえば、小
さすぎたり、ヘッダよりも長かったりする length とか)が設定されていた場
合は、tcpdump は ``[\fIbad opt\fP]''と表示し、それ以上のオプション解析
を中止する(それがどこから始められるかわからないので)。
ヘッダ長がオプションを送信したことを示しているのに、
IP データグラム長はそこにオプションを含められないことを示す場合は tcpdump は ``[bad hdr length]''と表示する。
.HD
.B
UDP パケット
.LP
UDP はこの rwho のパケットで説明する:
.RS
.nf
.sp .5
\f(CWactinide.who > broadcast.who: udp 84\fP
.sp .5
.fi
.RE
これはホスト \fIactinide\fP の \fIwho\fP のポートから UDP データグラムが
ホスト \fIbroadcast\fP すなわちインターネットブロードキャストアドレスの
\fIwho\fP のポートへ送られたことを表示している。
パケットはユーザデータ 84 バイトを含んでいる。
.LP
いくつのかの UDP サービスに関しては(そのソースまたはディスネーション
のポート番号より)解釈することができ、より上位の層におけるプロトコル
情報を表示する。特にドメインネームサービス要求(RFC-1034/1035)や
NFS についての Sun RPC (RFC-1050)について出力される。
.HD
UDP ネームサービス要求
.LP
\fI(注:以下は RFC-1035 で記述される ドメインネームサービスプロトコルを
理解しているものとみなして記述している。
もしこのプロトコルに通じていないようなら、以下の記述はちんぷんかんぷんかもしれない。)
.LP
ネームサーバの要求は、
.RS
.nf
.sp .5
\fIsrc > dst: id op? flags qtype qclass name (len)\fP
.sp .5
\f(CWh2opolo.1538 > helios.domain: 3+ A? ucbvax.berkeley.edu. (37)\fR
.sp .5
.fi
のような形式である。
.RE
ホスト \fIh2opolo\fP は \fIhelios\fP のドメインネームサーバに対して、
\fIucb-bax.berkeley.edu.\fP という名前についてのアドレスレコード(qtype=A)を尋ねる。
問い合わせの id は `3'。`+'は再帰可能(\fIrecursion desired\fP)フラグが設定されていることを示す。
問い合わせは UDP と IP のヘッダは含まめずに 37バイトある。
問合せは標準的な \fIQuery\fP なので op フィールドは省略されている。
もし、op フィールドを持つなら、それがなんであれ、`3' と `+' の間に表示する。
また同様に、問合せクラス(qclass)も標準的な \fIC_IN\fP なので、省略されている。
ほかの問合せクラスの場合は `A' に続いて表示する。
.LP
例外的なものを検出した場合、追加のフィールドを[ ] で囲んで表示するだろ
う:もし問合せ(query)に回答、ネームサーバ、権威セクションが含まれる場合、
.IR ancount ,
.IR nscount ,
.I arcount
はそれぞれ\fIn\fP をカウント数として、
`[\fIn\fPa]'、`[\fIn\fPn]' か `[\fIn\fPau]' のように表示される。
もし、第二および第三バイトにいくつかの応答bitが設定されている(AA、RA か
または rcode)場合か、`must be zero' ビットが設定されている場合は
`[b2&3=\fIx\fP]'と表示する。ここで \fIx\fP はヘッダの第二および第三バイトの 16 進表現である。
.HD
UDP ネームサーバ応答
.LP
ネームサーバからの応答は、
.RS
.nf
.sp .5
\fIsrc > dst:  id op rcode flags a/n/au type class data (len)\fP
.sp .5
\f(CWhelios.domain > h2opolo.1538: 3 3/3/7 A 128.32.137.3 (273)
helios.domain > h2opolo.1537: 2 NXDomain* 0/1/0 (97)\fR
.sp .5
.fi
のような形式である。
.RE
最初の例では、\fIhelios\fP は \fIh2opolo\fP の id 3 の要求に三個の回答
レコード、三個のネームサーバレコードと七個の権威レコードを返答している。
最初の回答は A レコードで、このデータはインターネットアドレスの 128.32.137.3 である。
応答のサイズは UDP と IP のヘッダは含まずに 273 バイトである。
(queryの) op と response code(この場合は NoError)は、A レコードのクラ
ス(C_IN)と同様に省略されている。
.LP
次の例は \fIhelios\fP はドメインが存在しない、という response code
(NXDomain) で回答はなし、ネームサーバは一個、権威レコードもなし、という返答をしている。
`*' は \fIauthoritative answer\fP ビットが設定されていることを示す。
回答がないので、 type とクラスおよびデータは表示されない。 
.LP
ほかのフラグは`\-'(RA(再帰可)が設定されて\fIいない\fP)、`|'TC(まるめら
れたメッセージ)が設定されている。`question' セクションが一つでない場合
には、`[\fIn\fPq]'と出力する。
.LP
ネームサーバの応答はデフォルトの \fIsnaplen\fP である 68 バイトよりも大きくなりがちなので、
そのパケットを表示するのに十分なだけの情報を捉えきれないことがある。
ネームサービスの通信を厳密に解析したいときは、\fB\-s\fP フラグを利用して snaplen を拡張するべきである。
\fB\`-s 128\fP'くらいが妥当であろう。

.HD
SMB/CIFS 展開
.LP
tcpdump は UDP/137, UDP/138, TCP/139 に対する比較的大規模な SMB/CIFS/NBT デコード機能を持つ。
IPX と NetBEUI SMB をデコードする要素もある。

デフォルトでは比較的小規模なデコードが行われ、
-v オプションを用いると遥かに詳細なデコードが行われる。
-v オプション付きの場合、ひとつの SMB パケットが 1 画面以上の情報を出す場合もあるので、
本当に必要な場合のみ -v オプションをつけること。

UNICODE 文字列を含む SMB セッションをデコードする場合は、
環境変数 USE_UNICODE に 1 をセットしたほうがいいかもしれない。
UNICODE 文字列を自動検出するパッチは歓迎する。

SMB パケットの形式や all teフィールドが何を意味するかの情報は、
www.cifs.org か samba.org ミラーサイトの pub/samba/specs/ ディレクトリを参照のこと。
SMB パッチは Andrew Tridgell (tridge@samba.org) が書いた。

.HD
NFS 要求と回答
.LP
Sun NFS(Network File System)の要求と応答は次のように出力される:
.RS
.nf
.sp .5
\fIsrc.xid > dst.nfs: len op args\fP
\fIsrc.nfs > dst.xid: reply stat len op results\fP
.sp .5
\f(CW
sushi.6709 > wrl.nfs: 112 readlink fh 21,24/10.73165
wrl.nfs > sushi.6709: reply ok 40 readlink "../var"
sushi.201b > wrl.nfs:
	144 lookup fh 9,74/4096.6878 "xcolors"
wrl.nfs > sushi.201b:
	reply ok 128 lookup fh 9,74/4134.3150
\fR
.sp .5
.fi
.RE
一行目はホスト \fIsushi\fP が id \fI6709\fP でトランザクション要求を \fIwrl\fP に送信している (src ホストに続く数字は port 番号 \fIではなくて\fP トランザクション id である点に注意せよ)。
要求は UDP と IP のヘッダを除いて 112 バイトである。動作要求はファイルハンドル(\fIfh\fP) 21,24/10.731657119 に対する \fIreadlink\fP (シンボリックリンクの値を読む)である。
(この例では、幸運なことに、デバイスの major および minor 番号の対と 
inode 番号、generation 番号がファイルハンドルから抽出できている)
\fIWrl\fP はリンクの内容と `ok' を返答している。
.LP
三行目では \fIsushi\fP は \fIwrl\fP に対し ディレクトリファイル 9,74/4096.8678 から 
`\fIxcolors\fP' を探し出すように要求している。
出力されるデータは操作の種類によって依存していることに注意すること。
この出力形式は NFS プロトコル仕様とともに読んだ場合に自己説明になるよう意図された形式である。
.LP
-v(verbose) フラグが与えられている場合、追加の情報も出力される。例:
.RS
.nf
.sp .5
\f(CW
sushi.1372a > wrl.nfs:
	148 read fh 21,11/12.195 8192 bytes @ 24576
wrl.nfs > sushi.1372a:
	reply ok 1472 read REG 100664 ids 417/0 sz 29388
\fP
.sp .5
.fi
.RE
(\-v は IP ヘッダの TTL と ID、フラグメンテーションフィールドも表示する
が、この例では省略している)。一行目では、\fIsushi\fP は \fIwrl\fP に対して、 file 21,11/12.195 のバイトオフセット 24576 から 8192 バイト読み出し要求を出
している。\fIWrl\fP は `ok' を返している; 二行目に表示されているこのパ
ケットはフラグメント化された返答の一番目のパケットであるため、1472 バ
イトのみである(残りのバイトはその後のフラグメントとして続くが、それら
のフラグメントは NFS ヘッダも UDP ヘッダも持たないので、フィルタ条件式の指定次第で表示されないことがある)。
また \-v フラグがあたえられていることにより、いくつかのファイルの属性
も表示される(ファイルデータに付加して返答される): ファイルのタイプ
(``REG'' は普通のファイル)、ファイルのモード(八進で)、uid と gid、またファイルのサイズなど。
.LP
\-v フラグが複数与えられると(\-vvのこと)もっと詳細な情報が出力される。
.LP
NFS の要求はとても大きいので、snaplen を増加しないと十分な情報が表示で
きないかもしれないことに注意すること。
NFS の通信を監視する場合は `\fB\-s 192\fP' を試してみるとよい。
.LP
NFSの返答パケットは RPC操作によって識別することができない。しかしなが
ら、\fItcpdump\fP は ``最近の''要求を覚えておいて、返答がそのトランザ
クション IDに一致するか調べる。応答が対応する要求の近くに通信されていない場合はきちんと解析できないかもしれない。
.HD
AFS 要求と応答
.LP
Transarc AFS (Andrew File System) 要求と応答は以下のように表示される。
.HD
.RS
.nf
.sp .5
\fIsrc.sport > dst.dport: rx packet-type\fP
\fIsrc.sport > dst.dport: rx packet-type service call call-name args\fP
\fIsrc.sport > dst.dport: rx packet-type service reply call-name args\fP
.sp .5
\f(CW
elvis.7001 > pike.afsfs:
	rx data fs call rename old fid 536876964/1/1 ".newsrc.new"
	new fid 536876964/1/1 ".newsrc"
pike.afsfs > elvis.7001: rx data fs reply rename
\fR
.sp .5
.fi
.RE
最初の行で、ホスト elvis は RX パケットを pike に送信している。
これは fs (ファイルサーバ) サービスへの RX データパケットで、
RPC 呼び出しの開始である。
RPC 呼び出しはリネームで、古いディレクトリファイル ID は 536876964/1/1、
古いファイル名は`.newsrc.new'、
新しいディレクトリファイル ID は 536876964/1/1、
新しいファイル名は `.newsrc' である。
ホスト pike は リネーム呼び出しに対する RPC 応答パケット
(データパケットであり、中断パケットではないので成功を意味する)
を返信している。
.LP
一般に、全ての AFS RPC は少なくとも RPC 呼び出し名はデコードされる。
ほとんどの AFC RPC は少なくともいくつかの引数はデコードされる
(一般に `興味深い' 引数のみがデコードされる)。
.LP
表示フォーマットは自己説明的なものを目指しているが、
AFS と RX の動作に詳しくない人々にとってはおそらく便利ではないだろう。
.LP
-v (詳細) オプションが 2 回指定されると、追加情報が表示される。
これは RX 呼び出し ID、呼び出し番号、シーケンス番号、シリアル番号、RX パケットフラグなどである。
.LP
さらに -v オプションが指定されると、セキュリティインデックスとサービス ID が表示される。
.LP
中断パケットのエラーコードも表示される。
但し、Ubik ビーコンパケットは例外である。
(なぜなら、Ubik プロトコルにおける中断パケットは賛成票を意味するからである)。
.LP
AFS 要求は非常に大きく、
多くの引数は\fIsnaplen\fPを増やさないとおそらく表示されないことに注意すること。
AFS 通信を監視する場合は `\fB-s 256\fP' を試してみるとよい。
.LP
AFS 応答パケットは明示的に RPC 操作を識別しない。
代わりに、\fItcpdump\fPは``最近の''要求を覚えていて、
それを呼び出し番号とサービス ID を用いて応答と照合させる。
もし応答が対応する要求と結び付けられなかった場合、そのパケットはパーズできない。

.HD
KIP Appletalk (UDP 内 DDP)
.LP
UDP データグラム内に格納されたアップルトークの DDP パケットは取り出されて、
DDP パケットとして表示される(すなわちすべての UDP ヘッダ情報は捨てられる)。
.I /etc/atalk.names 
ファイルが アップルトークネットとノード番号を名前に変換するのに利用される。
ファイルの形式は下記の通り。
.RS
.nf
.sp .5
\fI番号		名前\fP

\f(CW1.254	ether
16.1		icsd-net
1.254.110	ace\fR
.sp .5
.fi
.RE
最初の二行はアップルトークネットワークに名前を与える。三行目は特定のホストの名前を与える(ホストはネットワーク番号の第三オクテットで識別される \- 
ネットワーク番号は二オクテットで \fIなければならず\fP、またホスト番
号は三オクテットで \fIなければならない\fP。番号と名前は空白文字で区切られる(blank か tab)。
.I /etc/atalk.names 
ファイルは空行とコメント行(`#'で始まる行)を含んでもよい。
.LP
アップルトークのアドレスは次の形式で表示される。
.RS
.nf
.sp .5
\fInet.host.port\fP

\f(CW144.1.209.2 > icsd-net.112.220
office.2 > icsd-net.112.220
jssmag.149.235 > icsd-net.2\fR
.sp .5
.fi
.RE
(
.I /etc/atalk.names
がない場合またはそれに適切なアップルトークのネット番号、ホスト番号が含まれない場合は、アドレスは数字で表示される)。
最初の例は ネットワーク 144.1 のノード 209 の NBP(DDP のポート番号 2 )からネットワーク icsd のノード 112 ポート番号220 番への送信を示す。
二番目も同様だが、ノード名(`office') がわかっている場合の例。
三行目はネットワーク jssmag のノード 149 の 235 番ポートから icsd-net の NBPポートへのブロードキャストを示す。
ブロードキャストアドレス(255)はホスト番号を伴わないネットワーク名だけの出
力で識別できることに注意すること \- /etc/atalk.names にノード名とネッ
トワーク名を記述しておくのはよい考えである)。
.LP
NBP(名前解決プロトコル)と ATP(アップルトークトランザクションプロトコル)パケットについては、その内容も解析される。
その他のプロトコルはプロトコル名(名前がわからなければ番号)とパケットのサイズが表示されるだけである。

\fBNBP パケット\fP は次の例のように表示される:
.RS
.nf
.sp .5
\s-2\f(CWicsd-net.112.220 > jssmag.2: nbp-lkup 190: "=:LaserWriter@*"
jssmag.209.2 > icsd-net.112.220: nbp-reply 190: "RM1140:LaserWriter@*" 250
techpit.2 > icsd-net.112.220: nbp-reply 190: "techpit:LaserWriter@*" 186\fR\s+2
.sp .5
.fi
.RE
一行目はネットワーク icsd の ホスト 112 から ネットワークjssmag へブロードキャストされるレーザライタを探す要求送信である。nbp の id は 190 。
二行目はその要求へのホスト jssmag.209 からの応答(id 番号が同じであることに注意)で、``RM1140''という名前のレーザライタを 250 番ポートに持っていることを答えている。
三行目は同じ要求に対する別の返答でホスト techpit が186番ポートに "tecpit" が登録されていることを答えている。

\fBATP パケット\fP は次のように表示される:
.RS
.nf
.sp .5
\s-2\f(CWjssmag.209.165 > helios.132: atp-req  12266<0-7> 0xae030001
helios.132 > jssmag.209.165: atp-resp 12266:0 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:1 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:2 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:3 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:4 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:5 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:6 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp*12266:7 (512) 0xae040000
jssmag.209.165 > helios.132: atp-req  12266<3,5> 0xae030001
helios.132 > jssmag.209.165: atp-resp 12266:3 (512) 0xae040000
helios.132 > jssmag.209.165: atp-resp 12266:5 (512) 0xae040000
jssmag.209.165 > helios.132: atp-rel  12266<0-7> 0xae030001
jssmag.209.133 > helios.132: atp-req* 12267<0-7> 0xae030002\fR\s+2
.sp .5
.fi
.RE
jssmga.209 はホスト helios に対して
id 12266 でトランザクションを開始し最大 8パケット(`<0-7>'と示す)を要求する。
行末の 16 進数字は要求に含まれる `userdata'のフィールドである。
.LP
helios は八個の 512 バイトのパケットを返答している。トランザクションid 
に続く `:数字' 表現はトランザクションにおけるパケットのシーケンス番号で、カッコに囲まれた数字は atp ヘッダを除いたパケットのデータ量である。パケット 7 番の `*' は EOM ビットが設定されていることを示す。
.LP
jssmag.209 はパケット 3 番とパケット 5 番の再送を要求している。helios 
はそれらを再送し、jssmag はトランザクションを終了する。そして、
jssmag.209 は次の要求を開始する。要求の `*' は XO (`一回だけ')は設定 \fIされていない\fP ことを示す。

.HD
IP フラグメント化(fragmentation)
.LP
インターネットデータグラムのフラグメント化されたものは次のように表示する。
.RS
.nf
.sp .5
\fB(frag \fIid\fB:\fIsize\fB@\fIoffset\fB+)\fR
\fB(frag \fIid\fB:\fIsize\fB@\fIoffset\fB)\fR
.sp .5
.fi
.RE
(最初の形式はまだ続くフラグメントがあることを示し、二番目の形式はそ
れが最後のフラグメントであることを示す)
.LP
\fIid\fP はフラグメントの id 。\fIsize\fP はフラグメントの IP ヘッダを除くサイズ(バイトで)。\fIoffset\fP はフラグメントのもともとのデータグラム内でのオフセット(バイトで)。
.LP
フラグメントの情報はフラグメント毎に表示される。最初のフラグメントには
上位プロトコルのヘッダを含み、フラグメント情報はプロトコル情報に続いて
表示される。二番目以降のフラグメントには上位プロトコルの情報を含まない
ので、フラグメント情報はソースおよびディスティネーションアドレスに続いて表示される。
以下の例は CSNET で接続された arizona.edu から 
lbl-rtsg.arpa への ftp 接続の一部を示すが、これには 576 バイトのデータグラムはあらわれていない:
.RS
.nf
.sp .5
\s-2\f(CWarizona.ftp-data > rtsg.1170: . 1024:1332(308) ack 1 win 4096 (frag 595a:328@0+)
arizona > rtsg: (frag 595a:204@328)
rtsg.1170 > arizona.ftp-data: . ack 1536 win 2560\fP\s+2
.sp .5
.fi
.RE
二つの注意点がある: 一つ目として、二行目で示されるアドレスにはポート
番号は含まれていない点に注意すること。
TCP プロトコルの情報は最初のフラグメントに含まれるため、
残りのフラグメントからは表示すべきポート番号やシーケンス番号がわからないためである。
二つ目は、一行目の TCP のシーケンス情報
には実際には 512 バイト(最初のフラグメントで 308 バイト、二番目のフラ
グメントで204 バイトの場合)のユーザデータが 308 バイトであるかのように
表示されている点である。シーケンスの漏れやパケットの ack の対応を調査
するとき、ここに悩まされることがあるかもしれない。
.LP
\fIフラグメント化禁止フラグ\fP の設定されたパケットの場合、行末に \fB(DF)\fPと表示する。 
.HD
時間表示
.LP
デフォルトでは全ての出力行の先頭にタイムスタンプがつく。タイムスタンプは現在の時刻を次の形式で表示し、
.RS
.nf
\fIhh:mm:ss.frac\fP
.fi
.RE
これは、kernel の時間情報同様に正確である。タイムスタンプは kernel が
パケットを確認した時点の時刻を反映している。イーサネットインターフェイス
が回線からパケットを取得した時点からカーネルが `新しいパケット' による
割り込みを受ける時点までの時間差は反映されていない。
.SH 関連項目
traffic(1C), nit(4P), bpf(4), pcap(3)
.SH 著者
原著者は:
.LP
Van Jacobson,
Craig Leres and
Steven McCanne, all of the
Lawrence Berkeley National Laboratory, University of California, Berkeley, CA.
.LP
最新版は tcpdump.org によって管理されている。
.LP
.RS
.I http://www.tcpdump.org/
.RE
.LP
IPv6/IPsec のサポートは WIDE/KAME プロジェクトによって追加された。
このプログラムは Eric Young の SSLeay ライブラリを特定の設定の元に使用している。
.SH バグ
問題点、バグ、質問、拡張のお願いなどは、以下のアドレスに送ってほしい。
.LP
.RS
tcpdump-workers@tcpdump.org
.RE
.LP
ソースコードの寄贈などは以下のアドレスへ送ってほしい。
.LP
.RS
patches@tcpdump.org
.RE
.LP
NIT は外へ出ていく通信は見ることができない。BPF はそれが可能である。後者の利用を推奨する。
.LP
用途によっては、IPフラグメントを再構築したり、上位プロトコルの長さを計算するくらいのことは必要となるだろう。
.LP
ネームサーバの逆引き要求は正確に表示できない。(空の)質問はむしろ回答の
中に含まれる要求として表示される。逆引き要求にはバグがふくまれていて、
それを修正するのは tcpdump ではなくてネームサービスの方であるべきと考
えている人もいる。
.LP
アップルの EtherTalk の DDP パケットは KIP DDP パケットのように容易に 
dump できるはずだが、行なわない。たとえ ethertalk を扱おうという気になっ
ても(なってないが)、LBLが ネットワーク上のethertalk へのアクセスを許さ
ないので、コードのテストができないのだ。
.LP
夏時間に切り替わるときにパケットトレースを行なっていると時間がずれてし
まう(時間の変更は無視される)。
.LP
FDDI ヘッダに対するフィルタの条件式はすべての FDDI パケットがイーサネット
のパケットをカプセル化しているものとみなして適用される。
これは、IP,ARP と DECNET PhaseIV については正しく動作するが、
ISO CLNS のようなプロトコルではうまくいかないだろう。
それゆえにフィルターは条件式に一致しないようなパケットをあやまって
あつかってしまうかもしれない。
.LP
.B "ip6 proto"
はヘッダチェインを追跡するべきだが、今のところそうはなっていない。
.B tcp
や
.B udp
もヘッダチェインを追跡するべきである。
.LP
\fBtcp[0]\fPのようなトランスポート層ヘッダに対する算術表現は、
IPv6 パケットに対してはうまく働かない。
IPv4 パケットに対してのみ働く。


