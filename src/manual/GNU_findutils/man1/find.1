.\"    This file documents the GNU utilities for finding files that match
.\" certain criteria and performing various operations on them.
.\" 
.\"    Copyright (C) 1994 Free Software Foundation, Inc.
.\" 
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided that
.\" the entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that this permission notice may be stated in a
.\" translation approved by the Foundation.
.\"
.\" Japanese Version Copyright (c) 1997 NAKANO Takeo all rights reserved.
.\" Translated Thu May 11 1997 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Modified Fri 14 Aug 1998 by NAKANO Takeo -- bug fixes.
.\"
.\"WORD		OPERATORS		演算子
.\"WORD		TESTS			判別式
.\"WORD		directory hierarchy	ディレクトリ階層
.\"WORD		expression		評価式
.\"WORD		directive		書式指定子
.\"WORD		permision mode		許可属性
.TH FIND 1L \" -*- nroff -*-
.SH 名前
find \- ディレクトリ階層下のファイルを検索する。
.SH 書式
.B find
[path...] [expression]
.SH 説明
このマニュアルページは GNU 版
.BR find
の使用法を記述したものである。
.B find
は与えられたファイル名以下のディレクトリツリーを検索し、
同じく与えられた評価式を左から右に向かって優先順位の高いものから評価する
(演算子のセクションを見よ)。
評価式の結果が確定すると (\fIand\fR の左項が偽だったり、
\fIor\fR の左項が真だった場合など) 評価は終了し、
引き続き次のファイル名が評価される。
.PP
`\-', `(', `)', `,', または `!' ではじまる最初の引き数は、
評価式の始まりであるとみなされる。
その前の引き数は検索するパスとなる。
パスが与えられない場合はカレントディレクトリ以下を検索する。
評価式が与えられない場合は `\-print' が評価式として用いられる。
.PP
.B find
は全てのファイルの処理に成功するとステータス 0 を返して終了する。
エラーがあった場合には 0 以上の値を返す。
.SH 評価式
評価式はオプション、判別式、及びアクションからなる。
オプションは特定のファイルのみでなく全体の処理に影響し、常に真を返す。
判別式は真または偽の値を返す。
アクションは付加的な作用を持ち、真または偽を返す。
評価式のそれぞれの要素は演算子によって区切られている。
演算子が省略された場合は \-and が指定されたものとされる。
\-prune 以外のアクションが評価式に含まれていない場合は、
評価式の結果が真となったファイルに対して \-print が実行される。
.SS オプション
全てのオプションは常に真を返す。また全てのオプションは常に効力を持ち、
式の評価がオプションの位置に到達したときにのみ実行される訳ではない。
従って記述を明確にするためには、
全てのオプションは評価式の先頭部にまとめて置くのが望ましい。
.IP \-daystart
\-amin、 \-atime、 \-cmin、 \-ctime、 \-mmin、 \-mtime の時間の基準を
24 時間前ではなく、コマンドを実行した日の 0 時にする。
.IP \-depth
ディレクトリ本体の前に、ディレクトリの内容を先に評価する。
.IP \-follow
シンボリックリンクの参照先を検索する。 \-noleaf は自動的に指定されたこ
とになる。
.IP "\-help, \-\-help"
.B find
のコマンドラインの使用方法の概要を表示して
終了する。
.IP "\-maxdepth \fIlevels\fR"
コマンドライン引き数から降りて検索するディレクトリレベルの最大値を指定
する (\fIlevels\fR は非負の整数)。 `\-maxdepth 0' はコマンドライン引
き数のみを評価し、アクションの対象にすることを意味する。
.IP "\-mindepth \fIlevels\fR"
\fIlevels\fR (非負整数) 未満のレベルのディレクトリには評価やアクショ
ンを行わない。 `\-mindepth 1' とすると、コマンドライン引き数で指定した
ファイルを除き、全てのファイルを処理する。
.IP \-mount
他のファイルシステムにあるディレクトリを探索しない。 \-xdev の別名であり、
他の版の
.BR find
との互換性のために用意された。
.IP "\-noleaf"
「ディレクトリのハードリンク数から 2 を引いたものが、
そのディレクトリに含まれるサブディレクトリである」とする最適化動作を行わない。
このオプションは Unix のディレクトリリンク方式に従わない
ファイルシステムを検索するときに必要となる
(例えば CD-ROM や MS-DOS ファイルシステム、 AFS ボリュームなど)。
通常の Unix ファイルシステムでは、
それぞれのディレクトリは最低二つのハードリンクを持っている
(ディレクトリ名のエントリと `.' エントリ)。
またサブディレクトリがある場合には、
それぞれのサブディレクトリ内にさらに `..' と言うエントリができる。
.B find
がディレクトリを調べる際、
そのディレクトリのハードリンクの数よりも
2 少ないエントリがサブディレクトリであることが判明したら、
残りのエントリはディレクトリではないものとされる
(ディレクトリツリーの `leaf (葉)' であるとみなされる)。
もしファイル名だけが必要な場合には、
そのファイルの内容は評価されない。
この最適化を用いると、検索の速度が非常に向上する。
.IP "\-version, \-\-version"
\fBfind\fR のバージョンを表示して終了する。
.IP \-xdev
他のファイルシステムにあるディレクトリは探索しない。
.SS 判別式
.P
数値の引き数を
.IP \fI+n\fP
と表わすと
.IR n
より大きいことを示し、
.IP \fI\-n\fP
と表わすと
.IR n
より小さいことを示す。
.IP \fIn\fP
はちょうど
.IR n
と等しいことを示す。
.IP "\-amin \fIn\fR"
ファイルが最後にアクセスされたのが \fIn\fR 分前であれば真。
.IP "\-anewer \fIfile\fR"
\fIfile\fR が修正された以降にアクセスされたファイルに対して真を返す。
\-follow がコマンドライン上で
\-anewer より前に指定されている場合に限り、
\-anewer は \-follow による影響を受ける。
.IP "\-atime \fIn\fR"
ファイルが最後にアクセスされたのが \fIn\fR*24 時間前であれば真。
.IP "\-cmin \fIn\fR"
ファイルのステータスが最後に変更されたのが \fIn\fR 分前であれば真。
.IP "\-cnewer \fIfile\fR"
\fIfile\fR が修正された以降にファイルステータスが変更されたファイルに
対して真を返す。
\-follow がコマンドライン上で
\-cnewer より前に指定されている場合に限り、
\-cnewer は \-follow による影響を受ける。
.IP "\-ctime \fIn\fR"
ファイルのステータスが最後に変更されたのが \fIn\fR*24 時間前であれば真。
.IP \-empty
ファイルが空で、通常のファイルかディレクトリならば真。
.IP \-false
つねに偽。
.IP "\-fstype \fItype\fR"
ファイルが置かれているファイルシステムが \fItype\fR ならば真。
用いることのできるファイルシステムは Unix のバージョンによって異なる。
あるバージョンの Unix では ufs や 4.2, 4.3, nfs, tmp, mfs, S51K, S52K
といったようなものが指定可能である。
\-printf を %F 書式指定子と共に用いれば、
どのようなファイルシステムを使っているかがわかる。
.IP "\-gid \fIn\fR"
ファイルのグループ ID 番号が \fIn\fR ならば真。
.IP "\-group \fIgname\fR"
ファイルの属するグループが \fIgname\fR ならば真 (ID 番号も指定可)。
.IP "\-ilname \fIpattern\fR"
\-lname と同じだが、大文字小文字を区別しない。
.IP "\-iname \fIpattern\fR"
\-name と同じだが、大文字小文字を区別しない。例えばパターン `fo*' も 
`F??' も `Foo', `FOO', `foo', `fOo' などにマッチする。
.IP "\-inum \fIn\fR"
ファイルの i-ノード番号が \fIn\fR ならば真。
.IP "\-ipath \fIpattern\fR"
\-path と同じだが、大文字小文字を区別しない。
.IP "\-iregex \fIpattern\fR"
\-regex と同じだが、大文字小文字を区別しない。
.IP "\-links \fIn\fR"
ファイルのリンク数が \fIn\fR ならば真。
.IP "\-lname \fIpattern\fR"
ファイルがシンボリックリンクであり、
そのリンク先がシェルのパターン \fIpattern\fR にマッチすれば真。
メタキャラクタは `/' や `.' を例外扱いしない。
.IP "\-mmin \fIn\fR"
ファイルのデータが最後に修正されたのが \fIn\fR 分前なら真。
.IP "\-mtime \fIn\fR"
ファイルのデータが最後に修正されたのが \fIn\fR*24 時間前なら真。
.IP "\-name \fIpattern\fR"
ディレクトリの部分を取り去ったファイル名が
シェルのパターン \fIpattern\fR にマッチすれば真。
メタキャラクタ (`*'、`?' および `[]') は、
ファイル名の先頭の `.' にはマッチしない。
あるディレクトリおよびそれ以下のファイルを無視するには \-prune を用いる。
\-path の説明にある例を参照のこと。
.IP "\-newer \fIfile\fR"
ファイル \fIfile\fR 以降に修正されたファイルに対して真を返す。
\-follow がコマンドライン上で
\-newer より前に指定されている場合に限り、
\-newer は \-follow による影響を受ける。
.IP \-nouser
ファイルのユーザー ID 番号に対応するユーザーがいなければ真。
.IP \-nogroup
ファイルのグループ ID 番号に対応するグループがなければ真。
.IP "\-path \fIpattern\fR"
ファイル名がシェルのパターン \fIpattern\fR にマッチすれば真。
メタキャラクタは `/' や `.' を例外扱いしない。従って例えば
.br
.in +1i
find . \-path './sr*sc'
.br
.in -1i
は './src/misc' というディレクトリを (実際に存在していれば) 表示する。
ディレクトリツリー全体を無視するためには、
一つ一つのファイルをチェックするより \-prune を用いる方が良い。
たとえば `src/emacs' ディレクトリおよびそれ以下のファイルをすべて無視し、
他のファイルを表示したいような場合には、以下のようにする。
.br
.in +1i
find . \-path './src/emacs' -prune -o -print
.br
.in -1i
.IP "\-perm \fImode\fR"
ファイルの許可属性が \fImode\fR
(8 進または文字による指定) とまったく同じであったら真。
文字の場合は許可属性 0 からの差分を指定しているものとみなされる。
.IP "\-perm \-\fImode\fR"
\fImode\fR で指定されている許可属性ビットのすべてが
ファイルでも立っていたら真。
.IP "\-perm +\fImode\fR"
\fImode\fR で指定されている許可属性ビットが
ファイルでどれか一つでも立っていたら真。
.IP "\-regex \fIpattern\fR"
ファイル名が正規表現 \fIpattern\fR にマッチすれば真。
このマッチは (すべてのパスを含む)
ファイル名全体に対してでなければならない。
例えば `./fubar3' というファイルにマッチさせるには、
正規表現 `.*bar.' や `.*b.*3' が使えるが、 `b.*r3' 
はマッチしない。
.IP "\-size \fIn\fR[bckw]"
ファイルが \fIn\fP 分の領域を使用していたら真。
デフォルトでは \fIn\fP の単位は 512 バイトのブロックとなる
(\fIn\fP の後に `b' が続いた場合も同様)。
後に続く文字が `c' ならば単位はバイト、 `k' ならばキロバイト、 
`w' ならば 2 バイトのワード。
サイズには間接ブロック (indirect block) の分は含まれない。
しかし穴空きファイル (sparse file) における、
実際には割り当てられていないブロックの分は含まれる。
.IP \-true
常に真。
.IP "\-type \fIc\fR"
\fIc\fR で表されるタイプのファイルならば真。 \fIc\fR としては以下がある:
.RS
.IP b
ブロックスペシャルファイル (バッファ付き)
.IP c
キャラクタスペシャルファイル (バッファ無し)
.IP d
ディレクトリ
.IP p
名前付きパイプ (FIFO)
.IP f
通常のファイル
.IP l
シンボリックリンク
.IP s
ソケット
.RE
.IP "\-uid \fIn\fR"
ファイル所有者のユーザー ID の数値が \fIn\fR ならば真。
.IP "\-used \fIn\fR"
ファイルが最後にアクセスされたときと、
属性が最後に変更されたときの差が \fIn\fR 日であれば真。
.IP "\-user \fIuname\fR"
ファイルの所有者がユーザー \fIuname\fR ならば真 (ID の数値も指定可能)。
.IP "\-xtype \fIc\fR"
ファイルがシンボリックリンク以外の場合は \-type と同じ。
シンボリックリンクに対しては以下のように判断される。
この判別式の前に \-follow が指定されていなかった場合は、
リンク先のファイルのタイプが \fIc\fR ならば真。 
\-follow が指定されていた場合は \fIc\fR が `l' ならば真。
つまりシンボリックリンクに対して、
\-xtype は \-type がチェックしない側をチェックする。
.SS アクション
.IP "\-exec \fIcommand\fR ;"
\fIcommand\fR を実行する。コマンドの戻り値が 0 ならば真。
.B find
のコマンドラインで指定されたこれ以降の引き数は、 `;' を含む引き数にいたるまで、
すべて \fIcommand\fR の引き数とみなされる。
文字列 `{}' は現在処理しているファイル名に置き換えられる。
これは \fIcommand\fR 引き数のどこにあってもよく、
単独で置かれていなくてもよい (単独で置かれていなければならないような
\fBfind\fR もある)。
これらの文字はシェルによって展開されないよう、 `\e' によってエスケープするか
引用符で囲む必要がある。
コマンドは \fBfind\fR を実行したディレクトリから実行される。
.IP "\-fls \fIfile\fR"
真を返す。 \-ls と同じ出力を \-fprint のように \fIfile\fR に出力する。
.IP "\-fprint \fIfile\fR"
真を返す。フルパスのファイル名をファイル file \fIfile\fR に出力する。
\fBfind\fR の実行時に \fIfile\fR が存在しない場合は新たに作成される。
すでに存在する場合は元の中身は捨てられる。
``/dev/stdout'' および ``/dev/stderr'' というファイル名は特別に扱われ、
それぞれ標準出力と標準エラー出力に結果が渡される。
.IP "\-fprint0 \fIfile\fR"
真を返す。 \-print0 と同じ出力を \-fprint のように \fIfile\fR 
に出力する。
.IP "\-fprintf \fIfile\fR \fIformat\fR"
真を返す。 \-printf と同じ出力を \-fprint のように \fIfile\fR 
に出力する。
.IP "\-ok \fIcommand\fR ;"
\-exec と似ているがまずユーザーに問い合わせを行い、
標準入力から回答を受け取る。
結果が `y' または `Y' で始まらない場合はコマンド実行は行なわず、
偽を返す。
.IP \-print
真を返す。ファイル名をフルパスで標準出力に表示し、
各ファイル名に改行文字を付加する。
.IP \-print0
真を返す。ファイル名をフルパスで標準出力に表示し、
各ファイル名にヌル文字を付加する。
このオプションを用いれば、 \fBfind\fR の出力を処理するプログラムにおいて
改行文字を含んだファイル名を正しく解釈できるようになる。
.IP "\-printf \fIformat\fR"
真を返す。 \fIformat\fR を標準出力に表示する。 `\e' はエスケープ文字、
`%' は書式指定文字として解釈される。
フィールドの幅と精度は C 言語の `printf' 関数のように指定できる。
\-print と異なり、 \-printf は文字列の最後に改行文字を付加しない。
エスケープ文字と書式指定子は以下の通り:
.RS
.IP \ea
ビジブルベル。
.IP \eb
バックスペース。
.IP \ec
このフォーマットのプリントをただちに停止し、出力バッファをフラッシュする。
.IP \ef
フォームフィード文字。
.IP \en
改行文字。
.IP \er
復帰文字。
.IP \et
水平タブ。
.IP \ev
垂直タブ。
.IP \e\e
バックスラッシュ文字 (`\e')。
.PP
文字 `\e' に `\e' 以外の文字が続いた場合は通常のキャラクタとして扱われる。
従って 2 文字とも表示される。
.IP %%
パーセント文字。
.IP %a
ファイルが最後にアクセスされた時間。 C の `ctime' 関数の戻り値と同じフォ
ーマットが用いられる。
.IP %A\fIk\fP
ファイルが最後にアクセスされた時間。
フォーマットは \fIk\fR で指定されたものが用いられる。
\fIk\fR には `@' か、あるいは
C の `strftime' 関数の書式指定子を用いることができる。
指定可能な値を以下にリストする。
一部のものは使えないシステムがあるかもしれない。
これはシステム間での `strftime' の非互換性による。
.RS
.IP @
Jan. 1, 1970, 00:00 GMT からの経過秒数。
.PP
時刻フィールド:
.IP H
時間 (00..23)
.IP I
時間 (01..12)
.IP k
時間 ( 0..23)
.IP l
時間 ( 1..12)
.IP M
分 (00..59)
.IP p
現在のロケールにおける AM または PM
.IP r
時間 (12 時間表示)  (hh:mm:ss [AP]M)
.IP S
秒 (00..61)
.IP T
時間 (24 時間表示)  (hh:mm:ss)
.IP X
現在のロケールによる時刻表示 (H:M:S)
.IP Z
タイムゾーン (JST など)。タイムゾーンを決定できない場合はなにも返さない。
.PP
日付フィールド:
.IP a
現在のロケールによる曜日名の短縮形 (Sun..Sat)
.IP A
現在のロケールによる曜日名のフル表示。長さは可変 (Sunday..Saturday)
.IP b
現在のロケールによる月名の短縮形 (Jan..Dec)
.IP B
現在のロケールによる月名のフル表示。長さは可変 (January..December)
.IP c
現在のロケールによる日付と時刻表示 (Sat Nov 04 12:02:33 EST 1989)
.IP d
その月何日目かの表示 (01..31)
.IP D
日付 (mm/dd/yy)
.IP h
b と同じ
.IP j
その年何日目かの表示 (001..366)
.IP m
月 (01..12)
.IP U
その年の何週目か (日曜日を週の始まりとする)  (00..53)
.IP w
曜日 (0..6)
.IP W
その年の何週目か (月曜日を週の始まりとする)  (00..53)
.IP x
現在のロケールによる日付表示 (mm/dd/yy)
.IP y
年の最後の２桁分 (00..99)
.IP Y
年 (1970...)
.RE
.IP %b
ファイルサイズを 512 バイト単位で表した数値 (切り上げ表示)。
.IP %c
ファイルのステータスが最後に変更された時間。
C の `ctime' 関数の戻り値と同じフォーマットが用いられる。
.IP %C\fIk\fP
ファイルのステータスが最後に変更された時間。
フォーマットには \fIk\fR で指定されたものが用いられる。
\fIk\fR の書式は %A と同じ。
.IP %d
ディレクトリツリー中のファイルの深さ。
0 ならばファイルはコマンドライン引き数であることになる。
.IP %f
ファイル名を前にあるディレクトリをすべて削除して表示したもの
(つまり最後の要素のみ)。
.IP %F
ファイルが置かれているファイルシステムのタイプ。
ここで表示された値は \-fstype に指定することができる。
.IP %g
ファイルのグループ名。名前が指定されていない場合はグループ ID 番号。
.IP %G
ファイルのグループ ID 番号。
.IP %h
フルパスから最後のファイル名を除いたディレクトリ部。
.IP %H
ファイルが属しているコマンドライン引き数。
.IP %i
ファイルの i-ノード番号 (10 進表示)。
.IP %k
ファイルのサイズを 1K ブロック単位で示した数値 (切り上げ表示)。
.IP %l
シンボリックリンクの参照先 (シンボリックリンクでない場合は空文字)。
.IP %m
ファイルの許可属性ビット (8 進表示)。
.IP %n
ファイルへのハードリンクの数。
.IP %p
ファイル名。
.IP %P
ファイル名を印字する。ただしコマンドライン引き数で指定された部分は表示
されない。
.IP %s
ファイルのサイズ (バイト単位)。
.IP %t
ファイルが最後に修正された時間を C の `ctime' 関数形式で現したもの。
.IP %T\fIk\fP
ファイルが最後に修正された時間を \fIk\fR で指定されたフォーマットで
現したもの。指定形式は %A と同じ。
.IP %u
ファイルのユーザー名。対応する名前が無い場合はユーザー ID の数値。
.IP %U
ファイルのユーザー ID の数値。
.PP
今までリストした以外の文字が `%' に続いた場合は無効。
ただし `%' の後に付いた文字は印字される。
.RE
.IP \-prune
同時に \-depth が指定されていない場合は常に真。ディレクトリを降りない。
.br
\-depth が指定されている場合は偽を返し、何もしない。
.IP \-ls
真を返す。現在のファイルを `ls \-dils' 形式で標準出力にリストする。
ブロックカウントは 1K 単位で行われる。
ただし環境変数 POSIXLY_CORRECT が設定されている場合は、
512 バイト単位のブロックが用いられる。
.SS 演算子
.P
優先順位の順にリストしてある。
.IP "( \fIexpr\fR )"
かっこの内部が先に評価される。
.IP "! \fIexpr\fR"
\fIexpr\fR が偽の場合真となる。
.IP "\-not \fIexpr\fR"
! \fIexpr\fR と同じ。
.IP "\fIexpr1 expr2\fR"
And (implied); \fIexpr1\fR が偽の場合は \fIexpr2\fR は評価されない。
.IP "\fIexpr1\fR \-a \fIexpr2\fR"
\fIexpr1 expr2\fR と同じ。
.IP "\fIexpr1\fR \-and \fIexpr2\fR"
\fIexpr1 expr2\fR と同じ。
.IP "\fIexpr1\fR \-o \fIexpr2\fR"
Or; \fIexpr1\fR が真の場合には \fIexpr2\fR は評価されない。
.IP "\fIexpr1\fR \-or \fIexpr2\fR"
\fIexpr1\fR \-o \fIexpr2\fR と同じ。
.IP "\fIexpr1\fR , \fIexpr2\fR"
List; 常に \fIexpr1\fR と \fIexpr2\fR の両方が評価される。
\fIexpr1\fR の値は捨てられ、全体の値は \fIexpr2\fR と等しくなる。
.SH 関連項目
.BR locate (1L),
.BR locatedb (5L),
.BR updatedb (1L),
.BR xargs (1L)
.br
.B Finding Files
(on-line in Info, or printed)

