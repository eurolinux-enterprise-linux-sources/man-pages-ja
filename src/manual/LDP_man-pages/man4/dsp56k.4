'\" t
.\" Copyright (c) 2000 lars brinkhoff <lars@nocrew.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Modified, Thu Jan 27 19:16:19 CET 2000, lars@nocrew.org
.\"
.\" Japanese Version Copyright (c) 2000 Yuichi SATO
.\"         all rights reserved.
.\" Translated Tue Jul 11 20:05:48 JST 2000
.\"         by Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\"
.\"WORD:	handshake	ハンドシェイク
.\"WORD:	device		デバイス
.\"WORD:	processer	プロセッサー
.\"WORD:	transmit	送信
.\"WORD:	recieve		受信
.\"WORD:	quantity	単位
.\"
.TH DSP56K 4 2000-03-01 "Linux" "Linux Programmer's Manual"
.SH 名前
dsp56k \- DSP56001 のインターフェース・デバイス
.SH 書式
.nf
#include <asm/dsp56k.h>
.sp
.BI "ssize_t read(int " fd ", void *" data ", size_t " length );
.BI "ssize_t write(int " fd ", void *" data ", size_t " length );

.BI "int ioctl(int " fd ", DSP56K_UPLOAD, struct dsp56k_upload *" program );
.BI "int ioctl(int " fd ", DSP56K_SET_TX_WSIZE, int " wsize );
.BI "int ioctl(int " fd ", DSP56K_SET_RX_WSIZE, int " wsize );
.BI "int ioctl(int " fd ", DSP56K_HOST_FLAGS, struct dsp56k_host_flags *" flags );
.BI "int ioctl(int " fd ", DSP56K_HOST_CMD, int " cmd );
.fi
.SH 設定
dsp56k デバイスは、メジャー番号 55、マイナー番号 0 の
キャラクター・デバイスである。
.SH 説明
Motorola DSP56001 は、Atari Falcon030 互換のコンピュータで使われている
フルプログラマブルな 24 ビットのデジタルシグナルプロセッサーである。
スペシャルファイル \fIdsp56k\fP は、DSP56001 の制御と
双方向ハンドシェイクホストポートでのデータの送受信のために使われる。
.PP
データストリームをシグナルプロセッサーに送信するためには、
デバイスに対して
.BR write (2)
を使うこと。
処理されたデータを受信するためには、
.BR read (2)
を使うこと。
ホスト側では、データは 8, 16, 24, 32 ビット単位で送受信できるが、
DSP56001 内では、24 ビット単位で扱われる。
.PP
次の
.BR ioctl (2)
コールが \fIdsp56k\fP デバイスを制御するために使われる。
.IP \fBDSP56K_UPLOAD\fP
DSP56001 をリセットし、プログラムをアップロードする。
.BR ioctl (2)
の 3 番目の引き数は、
構造体 \fIstruct dsp56k_binary\fP へのポインタでなければならない。
構造体のメンバー \fIbin\fP は DSP56001 バイナリプログラムを指し、
構造体のメンバー \fIlen\fP は 24 ビットワードで数えた
プログラムの長さに設定されていなければならない。
.IP \fBDSP56K_SET_TX_WSIZE\fP
送信ワードサイズを設定する。
設定できる値は 1 〜 4 の範囲で、このバイト数分だけ 1 度に DSP56001 に送信する。
このデータ単位は、DSP56001 本来の 24 ビットデータ形式に合わせるため、
ゼロのバイトで埋められたり、切り詰められたりする。
.IP \fBDSP56K_SET_RX_WSIZE\fP
受信ワードサイズを設定する。
設定できる値は 1 〜 4 の範囲で、
このバイト数分だけ 1 度に DSP56001 から受信する。
このデータ単位は、DSP56001 本来の 24 ビットデータ形式に合わせるため、
切り詰められたり、NULL バイト (\(aq\\0\(aq) で埋められたりする。
.IP \fBDSP56K_HOST_FLAGS\fP
ホストフラグを読み書きする。
ホストフラグは、一般的な目的で使うことのできるビットで、
ホストコンピュータと DSP56001 の両方から読むことができる。
ビット 0 と 1 は、ホストによって書き込むことができ、
ビット 2 と 3 は、DSP56001 によって書き込むことができる。

ホストフラグにアクセスするためには、
.BR ioctl (2)
の 3 番目の引き数が
構造体 \fIstruct dsp56k_host_flags\fP へのポインタでなければならない。
この構造体のメンバー \fIdir\fP のビット 0 または 1 が設定されると、
メンバー \fIout\fP の対応するビットの値がホストフラグに書き込まれる。
すべてのホストフラグの状態は、構造体のメンバー \fIstatus\fP の
下から 4 ビットとして返される。
.IP \fBDSP56K_HOST_CMD\fP
ホストコマンドを送信する。
送信できる値は 0 〜 31 の範囲で、DSP56001 で動作しているプログラムによって
処理されるユーザー定義コマンドである。
.SH ファイル
/dev/dsp56k
.\" .SH 著者
.\" Fredrik Noring <noring@nocrew.org>, lars brinkhoff <lars@nocrew.org>,
.\" Tomas Berndtsson <tomas@nocrew.org>.
.SH 関連項目
.IR linux/include/asm-m68k/dsp56k.h ,
.IR linux/drivers/char/dsp56k.c ,
.IR http://dsp56k.nocrew.org/ ,
DSP56000/DSP56001 Digital Signal Processor User's Manual
