.\" Copyright 1995 Robert K. Nichols (Robert.K.Nichols@att.com)
.\" Copyright 1999-2005 Kai Mテ、kisara (Kai.Makisara@kolumbus.fi)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Last Modified Tue Feb 10 15:09:29 JST 1998
.\"	by ISHIKAWA Mutsumi <ishikawa@linux.or.jp>
.\" Updated Sun Mar 12 2000 by NAKANO Takeo <nakano@st.seikei.ac.jp>
.\" Updated Sun Apr 24 2005 by NAKANO Takeo <nakano@st.seikei.ac.jp
.\"
.TH ST 4  2007-12-16 "Linux" "Linux Programmer's Manual"
.SH 名前
st \- SCSI テープデバイス
.SH 書式
.nf
.B #include <sys/mtio.h>
.sp
.BI "int ioctl(int " fd ", int " request " [, (void *)" arg3 "]);"
.BI "int ioctl(int " fd ", MTIOCTOP, (struct mtop *)" mt_cmd );
.BI "int ioctl(int " fd ", MTIOCGET, (struct mtget *)" mt_status );
.BI "int ioctl(int " fd ", MTIOCPOS, (struct mtpos *)" mt_pos );
.fi
.SH 説明
.B st
ドライバーは様々な SCSI テープデバイスのインターフェイスを提供する。
現在では、ドライバーは検出された全ての
\(lqシーケンシャルアクセス (sequential-access) \(rq タイプのデバイスへの
制御を行う。
.B st
ドライバーはメジャーデバイス番号 9 を用いる。
.PP
それぞれのデバイスは 8 つのマイナーデバイス番号を使う。
マイナー番号の低位側の 5 ビットは、検出された順に割り当てられる。
カーネル 2.6 では、
低位側 8 ビットよりも上位にあるビット群がこの 5 ビットに連結 (concatenate)
され、テーブ番号となる。
マイナー番号は、それぞれ 4 つの数字からなる二つのセットに
グループ分けされる。
基本 (自動巻き戻し) デバイス番号
.IR n 、
および \(lq非巻き戻し (no-rewind) \(rq デバイス番号
.RI ( n " + 128)."
である。
基本デバイス番号を用いてオープンされたデバイスには、
クローズする時に
.B REWIND
コマンドが送られる。
\(lq非巻き戻し\(rq デバイス番号を用いてオープンされた場合は
\s-1REWIND\s+1 コマンドは送られない
(自動巻き戻しデバイスをテープの位置決めに (例えば mt で) 用いても、
望む結果は得られない。テープは mt コマンドの後で巻き戻され、
次のコマンドはテープの先頭から始まってしまう)。
.PP
それぞれのグループで、異なった特性 (ブロックサイズ・圧縮・
密度など) のデバイスを定義するために 4 つのマイナー番号が利用できる。
システムが起動したときには、最初のデバイスだけが使える。
他の 3 つはデフォルトの特性が定義されて初めて使えるようになる (後述)。
(コンパイル時の定数を変更することによって、テープドライブの最大数と、
それぞれのドライブに割り当てられるマイナー番号の個数とを調整できる。
デフォルトの割り当てでは 32 台までのテープドライブを制御できる。
例えば 64 台までのテープドライブを、異なったオプションを持つ
二つのマイナー番号で制御するようにもできる。)
.PP
デバイスは普通次のように作られる:
.in +4n
.nf

mknod \-m 666 /dev/st0 c 9 0
mknod \-m 666 /dev/st0l c 9 32
mknod \-m 666 /dev/st0m c 9 64
mknod \-m 666 /dev/st0a c 9 96
mknod \-m 666 /dev/nst0 c 9 128
mknod \-m 666 /dev/nst0l c 9 160
mknod \-m 666 /dev/nst0m c 9 192
mknod \-m 666 /dev/nst0a c 9 224
.fi
.in
.PP
これらには対応するブロックデバイスは存在しない。
.PP
ドライバは内部バッファを使い、その大きさは少なくともテープの
1 ブロックを保持できるように取られる。 2.1.121 以前のカーネルでは、
バッファは連続する一つのブロックとして割り当てられる。この方法だと、
ブロックサイズの最大値はカーネルの割り当て可能な連続メモリブロックに
制限される。この制限は 32 ビットアーキテクチャでは 128 kB、
64 ビットアーキテクチャでは 256 kB である。これ以降のカーネルでは、
ドライバは必要に応じていくつかにわかれたバッファを割り当てる。
デフォルトでは 16 個までの部分に分割できる。すなわち
ブロックサイズの最大値は非常に大きい (128 kB のブロック 16 個の
割り当てに成功すれば 2 MB となる)。
.PP
ドライバの内部バッファのサイズはコンパイル時の定数で定義される。
これはカーネルの起動時オプションによって上書き可能である。
さらにドライバは実行時にも、必要に応じてより大きな一時バッファを
割り当てようとする。しかし実行時に大きな連続メモリブロックを
割り当てようとすると失敗することがあるので、 2.1.121
以前のカーネルでは、動的なバッファ割り当てはあまりあてにしないほうが良い
(これは kerneld や kmod によるドライバのデマンドロードに関しても当てはまる)。
.PP
ドライバはドライブのメーカやモデルを特定してサポートするわけではない。
システムが起動すると、テープデバイスのオプションがドライブの
ファームウェアによって定義される。例えば、
ドライブのファームウェアが固定長ブロックモードを選択すれば、
テープデバイスは固定長ブロックモードを使うことになる。このオプションは
.BR ioctl (2)
コールを明示的に使えば変更でき、
その変更はデバイスがクローズされて再びオープンされたときも残る。
.\"nakano: 逆か？
オプションの設定は、
自動巻き戻しデバイスと非巻き戻しデバイスの両方に影響する。
.PP
4 つのサブグループそれぞれのデバイスに対して異なるオプションを
与えることができる。オプションはデバイスがオープンされたときに
効力を発揮する。例えば、システム管理者はあるデバイスを
適当なブロックサイズの固定長ブロックモードで書き込むように定義し、
別のデバイスを可変長ブロックモードで書き込むようにできる (ドライブが
両方のモードをサポートしていれば)。
.PP
このドライバは、
.B テープのパーティション
をサポートしている (ドライブがサポートしている場合)。
(テープのパーティションはディスクパーティションとはなんの関係もない。
パーティション化されたテープは、一つのメディアに複数の論理テープが
存在するかのように見える。)
パーティションのサポートは
.BR ioctl (2)
によって有効にできる。
パーティションが変更されると、
テープの位置はそれぞれのパーティション内部で保存される。
パーティションの選択は
.BR ioctl (2)
で行う。
それ以降のテープ操作の対象は、そのパーティションになる。
パーティションの切り替えは、次のテープ操作と同時に行われ、
不必要なテープ移動をしなくてすむようになっている。
一つのテープにおけるパーティションの最大数は
コンパイル時の定数によって定義される (通常は 4)。
ドライバには、テープの 1 つまたは
2 つのパーティションをフォーマットできるような
.BR ioctl (2)
が用意されている。
.PP
通常、システムのデフォルトのテープデバイスに対するハードリンク
またはソフトリンクとして、デバイス
.I /dev/tape
が作成される。
.PP
カーネル 2.6.2 以降では、このドライバは sysfs ディレクトリ
.I /sys/class/scsi_tape
に、アタッチしたデバイスとそのデバイスに割当てたパラメータをエクスポートする。
.SS データ転送
このドライバは固定長ブロックモードと可変長ブロックモードの
両方をサポートしている (ドライブがサポートしていれば)。
固定長ブロックモードでは、ドライブは決まったサイズのブロックを
(複数個) 書き込む。このブロックサイズは
write システムコールのバイト数によらない。
可変長ブロックモードでは、
write コールごとに一つのテープブロックに書き込みが行われる。
したがってバイト数が対応するテープブロックのサイズを決める。
テープ上のブロックには、書き込みモードの情報は一切含まれない。
読み込みのときに重要なことは、テープのブロックサイズを受け入れる
コマンドを使うかどうかだけである。
.PP
可変長ブロックモードでは、読み込みバイト数はテープのブロックサイズと
必ずしも一致していなくても良い。バイト数がテープの次のブロックよりも
大きければ、ドライバはそのデータを返し、関数は実際のブロックサイズを返す。
ブロックサイズがバイト数よりも大きければ、要求された分のデータが
ブロックの先頭から読み込まれて返され、ブロックの残りは破棄される。
.PP
固定長ブロックモードでは、バッファリングが有効になっていれば
読み込みバイト数は任意の大きさでよい。バッファリングが無効の場合は、
テープのブロックサイズの整数倍でなければならない。 2.1.121 以前の
カーネルでは、バッファリングが有効な場合には
任意のバイト数の書き込みができる。その他の場合すべて
(2.1.121 以前のカーネルでバッファが無効な場合と、新しいカーネルの場合)
では、書き込みバイト数はテープブロックサイズの整数倍でなければならない。
.PP
2.6 カーネルでは、このドライバはユーザバッファとデバイス間で、
データの直接転送 (direct transfer) を試みる。
これが不可能な場合は、ドライバの内部バッファを用いる。
直接転送ができない理由としては、ユーザバッファのアラインメントが適切でない
(デフォルトは 512 バイトだが HBA ドライバによって変更されている可能性がある)、
ユーザバッファのページのどれかが SCSI アダプタから見えない、
などが考えられる。
.PP
テープをクローズする直前のテープ操作命令が書き込みであれば、
ファイルマークが自動的にテープへ書き込まれる。
.PP
読み込み時にファイルマークに出会うと、以下が実行される。
ファイルマークが見付かったときにバッファにデータが残っていると、
バッファのデータが返される。次の読み込み操作は 0 バイトを返す。
その次の読み込みは次のファイルからのデータを返す。
記録データの末尾は、読み込み操作が二回続けて
0 バイトを返して来るかたちで通知される。三回目の読み込みはエラーを返す。
.SS ioctl
ドライバは 3 つの
.BR ioctl (2)
要求をサポートしている。
.B st
ドライバによって認識されなかった要求は
.B SCSI
ドライバにわたされる。
以下の定義は
.I /usr/include/linux/mtio.h
による。
.SS "MTIOCTOP \(em テープ操作の実行"
.PP
この要求は
.I "(struct mtop *)"
型の引数をとる。全てのドライブが全ての操作をサポートしているわけではない。
ドライブが操作を拒否すると、ドライバは
.B EIO
エラーを返す。
.PP
.in +4n
.nf
/* Structure for MTIOCTOP \- mag tape op command: */
struct mtop {
    short   mt_op;       /* operations defined below */
    int     mt_count;    /* how many of them */
};
.fi
.in
.PP
通常のテープ利用のための磁気テープ操作:
.TP 14
.B MTBSF
.I mt_count
個のファイルマーク (filemark) 分の後方スペース (backward space)。
.TP
.B MTBSFM
.I mt_count
個のファイルマーク分の後方スペース。
テープの位置を最後のファイルマークの EOT 側に変更する。
.TP
.B MTBSR
.I mt_count
個のレコード (テープブロック) 分の後方スペース。
.TP
.B MTBSS
.I mt_count
個のセットマーク分の後方スペース。
.TP
.B MTCOMPRESSION
.I mt_count
が 0 以外なら、ドライブのデータ圧縮を有効にする。
0 なら圧縮を無効にする。このコマンドは MODE ページ 15 を用いる。
これはほとんどの DAT でサポートされている。
.TP
.B MTEOM
(ファイルを追加するために) メディアの記録部分の最後まで進める。
.TP
.B MTERASE
テープの内容を消去する。
2.6 カーネルでは、引数が 0 ならば short erase (テープが空だと印をつける)
を行う。それ以外の場合は long erase (全体を消去する) を行う。
.TP
.B MTFSF
.I mt_count
個のファイルマーク分の前方スペース (forward space)。
.TP
.B MTFSFM
.I mt_count
個のファイルマーク分の前方スペース。
テープの位置は最後のファイルマークの BOT 側変更される。
.TP
.B MTFSR
.I mt_count
個のレコード (テープブロック) 分の前方スペース。
.TP
.B MTFSS
.I mt_count
個のセットマーク分の前方スペース。
.TP
.B MTLOAD
SCSI ロードコマンドを実行する。 HP オートローダに限って利用できる。
.\"nakano: あってる？
.I mt_count
が定数
.B MT_ST_HPLOADER_OFFSET
とある数値の和である場合、
その数値がドライブに送られ、オートローダの制御に用いられる。
.TP
.B MTLOCK
テープドライブの扉をロックする。
.TP
.B MTMKPART
テープを 1 または 2 パーティションにフォーマットする。
.I mt_count
が 0 でなければ、これが最初のパーティションのサイズを与え、
二番目のパーティションがテープの残りになる。
.I mt_count
が 0 の場合は、テープは一つのパーティションとしてフォーマットされる。
このコマンドは、パーティションのサポートが有効にされた
ドライブでなければ使えない (以下の
.B MT_ST_CAN_PARTITIONS
を見よ)。
.TP
.B MTNOP
何も操作を行わない。\- 副次的な効果として、ドライバーのバッファ
をフラッシュする。
.B MTIOCGET
を使って状態を読み出す前にはこの操作を行うべきである。
.TP
.B MTOFFL
巻き戻し (rewind) を行い、ドライブをオフライン (off line) にする。
.TP
.B MTRESET
ドライブをリセットする。
.TP
.B MTRETEN
テープをリテンション (re-tension) する
(テープを最後まで巻いた後、最初まで巻き戻す)。
.TP
.B MTREW
巻き戻し。
.TP
.B MTSEEK
.I mt_count
で指定されたテープブロック番号をシークする。
この操作が行えるのは、 \s-1LOCATE\s+1 コマンド (デバイス固有のアドレス)
をサポートする SCSI-2 ドライブか、あるいは Tandberg
互換の SCSI-1 ドライブ (Tandberg, Archive, Viper, Wangtek,…) である。
デバイス固有のアドレスが利用されている場合は、ブロック番号は
以前に \s-1MTIOCPOS\s+1 によって返されたものにすべきである。
.TP
.B MTSETBLK
.I mt_count
の値をドライブのブロック長 (block length) としてセットする。
ブロック長を 0 にするとドライブは可変長ブロックサイズモードにセッ
トされる。
.TP
.B MTSETDENSITY
テープ密度 (tape density) を
.I mt_count
で示されるコードに変更する。ドライブでサポートされている密度コード
については、ドライブの文書に書いてあるだろう。
.TP
.B MTSETPART
アクティブなパーティションを第
.I mt_count
番目に切り替える。パーティションは 0 から数える。
このコマンドは、パーティションのサポートが有効にされた
ドライブでなければ使えない (以下の
.B MT_ST_CAN_PARTITIONS
を見よ)。
.TP
.B MTUNLOAD
SCSI unload コマンドを実行する (テープのイジェクトは行わない)。
.TP
.B MTUNLOCK
テープドライブの扉のロックを解除する。
.TP
.B MTWEOF
.I mt_count
個のファイルマークを書き込む。
.TP
.B MTWSM
.I mt_count
個のセットマークを書き込む。
.PP
デバイスオプションの設定のための (スーパーユーザによる) 磁気テープ操作:
.TP 8
.B MTSETDRVBUFFER
いろいろなドライブとドライバーのオプションを
.I mt_count
にエンコードされた各ビットに従って設定する。
オプションには、ドライブのバッファリングモード、
ブール値のドライバオプションの集合、
バッファの書き込み閾値 (デフォルトはブロックサイズと密度)、
タイムアウト値が含まれる (カーネル 2.1 以降)。
一回の操作で変えられるのは、上記のリストのどれか一つだけである
(複数のブール値はまとめて一つと勘定される)。
.IP
高位の4ビットがゼロである値は、
ドライブのバッファリングモードの設定に使われる。
バッファリングモードは以下の通り:
.RS 12
.IP 0 4
ドライブはライトコマンドに対し、
データブロックが実際に媒体に書き込まれるまで
.B GOOD
のステータスを返さない。
.IP 1
ドライブはライトコマンドに対し、
すべてのデータがドライブの内部バッファに転送されるとすぐに、
.B GOOD
のステータスを返すことができる。
.IP 2
ライトコマンドに対し、以下の 2 つの条件がそろった場合、
ドライブはすぐに
.B GOOD
ステータスを返す事ができる。
(a) すべてのデータがドライブの内部バッファに転送された。
(b) 別々のイニシエーターから来たバッファデータが、
すべて媒体へ問題なく書き込まれた。
.RE
.IP
書き込み閾値を制御するには、
.I mt_count
には、定数 
.B MT_ST_WRITE_THRESHOLD
とブロックカウントの論理和
(OR) をとった値を下位の 28ビットに含まねばならない。
このブロックカウントは 1024 バイトブロックを単位としたもので、テープの
物理ブロックサイズを単位としたものではない。
また、閾値はドライバの内部バッファ (上記の説明参照)
のサイズを越える事はできない。
.IP
ブール値のフラグを設定・解除するには、
.I mt_count
の値は
.BR MT_ST_BOOLEANS ,
.BR MT_ST_SETBOOLEANS ,
.BR MT_ST_CLEARBOOLEANS ,
.BR MT_ST_DEFBOOLEANS
のいずれか一つの値に、以下のオプションの任意の組み合わせに対して
論理和を取ったものを指定する。
.BR MT_ST_BOOLEANS を用いると、
オプションを対応するビットに対して定義されている値に設定できる。
.BR MT_ST_SETBOOLEANS を用いると、
オプションは選択的に設定され、
.BR MT_ST_DEFBOOLEANS を用いると
選択的に解除される。
.IP ""
テープデバイスのデフォルトのオプションは
.B MT_ST_DEFBOOLEANS
によって設定される。
アクティブでないテープデバイス (例: マイナー番号 が 32 や 160 のデバイス)
は、それらに対するデフォルトのオプションが最初に定義されたときに
アクティブになる。アクティブにされたデバイスは、
起動時にアクティブにされたデバイスから、
明示的に指定されなかったオプションを継承する。
.IP ""
ブール値のオプションは以下の通り:
.RS
.TP
.BR MT_ST_BUFFER_WRITES " (デフォルト: 真)"
固定長ブロックモードにおけるすべての書き込み操作をバッファリングする。
このオプションが偽であり、かつドライブが固定長ブロックサイズの時は、
すべての書き込み操作はブロックサイズの倍数の大きさで行わなければならない。
信頼性のあるマルチボリュームアーカイブを書き込むためには、
このオプションは偽に設定されていなければならない。
.BR MT_ST_ASYNC_WRITES " (デフォルト: 真)"
このオプションが真の時には、データがドライバのバッファに収まる時には
データがドライブに転送されるのを待たずに、すぐに書き込み操作が返って来る。
バッファがどのくらい空いたら次の SCSI write コマンドを発行できるかは、
書き込み閾値によって決まる。
ドライブが返すすべてのエラーは、次の操作まで保存される。
信頼性のあるマルチボリュームアーカイブを書き込むためには、
このオプションは偽に設定されていなければならない。
.TP
.BR MT_ST_READ_AHEAD " (デフォルト: 真)"
このオプションを指定すると、
ドライバは固定長ブロックモードで読み込みバッファリングと先読みをするようになる。
このオプションが偽であり、かつドライブが固定長ブロックサイズの時は、
すべての読み込み操作はブロックサイズの倍数の大きさで行わなければならない。
.TP
.BR MT_ST_TWO_FM " (デフォルト: 偽)"
このオプションはファイルがクローズされた時のドライバーの振舞いを変更する。
一つのファイルマークを書き込むのが通常の動作である。
このオプションが真の時には、
ドライバーは 2 つのファイルマークを書き込んで、
2 つめのファイルマークのところに戻る。
.IP
注意：
QICテープドライブはファイルマークに上書きすることができないので、
このオプションを真にしてはならない。
これらのドライブは記録データの末尾の検知に、
ファイルマークが 2つ続けてあるかではなく、
ブランクテープかどうかのテストを用いる。
現在の他のほとんどのドライブも、記録データの末尾を検知する。
2 つのファイルマークが必要になるのは、
他のシステムとテープをやりとりする場合である。
.TP
.BR MT_ST_DEBUGGING " (デフォルト: 偽)"
このオプションを真にすると、
ドライバはいろいろなデバッグ用メッセージを出すようになる
.RB ( DEBUG
を非ゼロに定義してドライバをコンパイルしている時のみ有効)。
.TP
.BR MT_ST_FAST_EOM " (デフォルト: 偽)"
このオプションを真にすると、
.B MTEOM
操作が直接ドライブに送られるようになる。
操作が早くなるはずだが、
ドライバが現在のファイル番号を見失うことになる
(これは通常なら
.B MTIOCGET
リクエストによって返される)。
.B MT_ST_FAST_EOM
が偽の時には、ドライバは
.B MTEOM
リクエストに応えるとき、前方にファイルを一つ一つ進めていく。
.TP
.BR MT_ST_AUTO_LOCK " (デフォルト: 偽)"
このオプションが真の時には、
デバイスがオープンされるとドライブの扉がロックされ、
クローズされるとアンロックされる。
.TP
.BR MT_ST_DEF_WRITES " (デフォルト: 偽)"
テープオプション (ブロックサイズ、モード、圧縮など)
があるドライブにリンクされたデバイスで変更されると、
その同じドライブにリンクされた他のデバイスでも変更されることがある
(そのデバイスの定義による)。このオプションは、
ドライバによる変更をいつ SCSI コマンドによって反映させるかと、
ドライブの自動検知機能がいつ信頼して良いのかを定義する。
このオプションを偽にしておくと、
デバイスの変更があるとドライバはすぐに SCSI コマンドを送る。
真にしておくと、 SCSI コマンドは書き込みが要求されるまで送られない。
後者の場合は、読み込みの際にドライブのファームウェアによって
テープ構造の検知が行える。また SCSI コマンドは、
テープが正しい指定に沿って書き込まれているかどうかの
確認のためだけに用いられる。
.TP
.BR MT_ST_CAN_BSR " (デフォルト: 偽)"
先読みを使うと、テープをクローズするときに、
場合によってはテープを正しい位置に逆戻ししなければならないことがある。
これには、レコードを越えて逆戻しする SCSI コマンドが用いられる。
古いドライブでは、このコマンド処理の信頼性が低いことがあるが、
このオプションを指定すると、
ドライバにこのコマンドの利用を禁止することができる。
先読みと固定長ブロックモードを用いていると、最終的な結果として、
デバイスのクローズ時にテープが正しい位置にならないことがある。
.\"nakano そうか？
2.6 カーネルでは、SCSI-3 をサポートしているドライブに対して、
この値のデフォルトは真となる。
.TP
.BR MT_ST_NO_BLKLIMS " (デフォルト: 偽)"
ドライブによっては
.B READ BLOCK LIMITS SCSI
コマンドを受けつけないことがある。
このオプションを用いると、ドライバはこのコマンドを用いない。
欠点は、指定したブロックサイズがドライブに受理されてしまうと、
ドライバのコマンド送信前チェックができなくなる点である。
.TP
.BR MT_ST_CAN_PARTITIONS " (デフォルト: 偽)"
このオプションは、一つのテープに複数パーティションを置くことを
サポートするかどうかを決める。
このオプションはドライブにリンクされた全てのデバイスに適用される。
.TP
.TP MT_ST_SCSI2LOGICAL " (デフォルト: 偽)"
このオプションは、
seek および tell 操作 (両者とも
.BR MTSEEK ・ MTIOCPOS
コマンドを伴い、テープ位置を変更するとき) の際に、
SCSI-2 の標準で定義されている論理ブロックアドレスを用いるかどうかを
ドライバに伝える。
.\"nakano both with の部分怪しい。
偽だとデバイス固有のアドレスが用いられる。
ドライブが論理アドレスをサポートしているときは、
このオプションをセットすることを強く勧める。
このモードではファイルマークもカウントするからである。
論理ブロックアドレスしかサポートしないドライブもいくつか存在している。
.TP
.BR MT_ST_SYSV " (デフォルト: 偽)"
このオプションが真になっていると、テープデバイスは
SystemV のルールを用いる。偽だと BSD のルールを用いる。
.\"nakano: semantics → ルール はちと違うか？
これらのルール間の最も大きな違いは、読み込みを行っていた
デバイスがクローズされたときの振舞いである。
System V のルールでは、テープは次のファイルマークを越えて移動する
(デバイスの利用時にこれが行われなかった場合)。
BSD のルールではテープ位置は変更されない。
.TP
.BR MT_NO_WAIT " (デフォルト: 偽)"
即時モード (immediate mode; コマンドの終了を待たない)
を、ある種のコマンド (rewind など) に対して有効にする。
.PP
例:
.in +4n
.nf

struct mtop mt_cmd;
mt_cmd.mt_op = MTSETDRVBUFFER;
mt_cmd.mt_count = MT_ST_BOOLEANS |
        MT_ST_BUFFER_WRITES | MT_ST_ASYNC_WRITES;
ioctl(fd, MTIOCTOP, mt_cmd);
.fi
.in
.RE
.IP ""
デバイスのデフォルトのブロックサイズは
.B MT_ST_DEF_BLKSIZE
によって設定でき、デフォルトの密度コードは
.B MT_ST_DEFDENSITY
によって設定できる。
これらのパラメータの値は操作コードと OR して与える。
.IP ""
2.1.x 以降のカーネルでは、タイムアウト値の設定は、
サブコマンド
.B MT_ST_SET_TIMEOUT
に秒単位のタイムアウト値を
OR して与えることによって行える。 long タイムアウト
(巻き戻しなど、長い時間がかかるコマンドに対して用いられる) は
.B MT_ST_SET_LONG_TIMEOUT
で設定できる。
カーネルのデフォルトは非常に長く、どのドライブでも
成功しているコマンドが決してタイムアウトしないようになっている。
したがって、ドライバはタイムアウトを待っているだけなのに、
刺さった (stuck した) ように見えることがある。これらのコマンドを使えば、
特定のドライブに対してもう少し実際的な値に設定することができる。
一つのデバイスに設定したタイムアウト値は、
それと同じドライブにリンクした全てのデバイスに適用される。
.IP ""
2.4.19 および 2.5.43 以降のカーネルでは、
このドライバはドライブのクリーニングが必要かどうかを示す
状態ビットをサポートする。
ドライブがクリーニング情報を返させるかどうかは、
.B MT_ST_SEL_CLN
サブコマンドによって設定できる。
この値が 0 だと、クリーニングビットは常に 0 となる。
値を 1 にすると、SCSI-3 標準で規定されている
TapeAlert データが用いられる (まだ実装されていない)
値としては 2 から 17 が予約されている。
低位側の 8 ビットが 18 以上だと、拡張状態データ (extended sense data)
が用いられる。第 9-16 ビットは注目すべきビットを選択するためのマスクを指定し、
第 17-23 ビットは探すべきビットパターンを指定する。
このビットパターンが 0 のときは、
マスク下のビット (群) がクリーニング要求を示す。パターンが 0 でなければ、
このパターンがマスク後の状態データバイトにマッチしなければならない。
.SS "MTIOCGET \(em ステータスの取得"
.PP
このリクエストは
.IR "(struct mtget *)"
という型の引数をとる。
.PP
.in +4n
.nf
/* structure for MTIOCGET \- mag tape get status command */
struct mtget {
    long     mt_type;
    long     mt_resid;
    /* the following registers are device dependent */
    long     mt_dsreg;
    long     mt_gstat;
    long     mt_erreg;
    /* The next two fields are not always used */
    daddr_t  mt_fileno;
    daddr_t  mt_blkno;
};
.fi
.in
.IP \fImt_type\fP 11
ヘッダファイル中には多くの
.I mt_type
の値が定義されているが、現行のドライバは汎用のタイプである
.B MT_ISSCSI1
(汎用 SCSI-1 テープ) および
.B MT_ISSCSI2
(汎用 SCSI-2 テープ) のみを返す。
.IP \fImt_resid\fP
現在のテープ位置番号。
.IP \fImt_dsreg\fP
ドライブのブロックサイズと密度の現在の設定を報告する
(下位 24 ビットがブロックサイズ、上位 8 ビットが密度)。
これらのフィールドは、
.BR MT_ST_BLKSIZE_SHIFT ,
.BR MT_ST_BLKSIZE_MASK ,
.BR MT_ST_DENSITY_SHIFT ,
.BR MT_ST_DENSITY_MASK
で定義されている。
.IP \fImt_gstat\fP
汎用の (デバイスに依存しない) ステータスを報告する。
これらのステータスビットをテストするためのマクロが
ヘッダファイルで定義されている。
.RS
.HP 4
\fBGMT_EOF\fP(\fIx\fP):
テープはファイルマークの直後に位置している。
.RB ( MTSEEK
操作の後では常に偽)
.HP
\fBGMT_BOT\fP(\fIx\fP):
テープは最初のファイルの先頭に位置している。
.RB ( MTSEEK
操作の後では常に偽)
.HP
\fBGMT_EOT\fP(\fIx\fP):
テープ操作はテープの物理的な終点に達した。
.HP
\s-1GMT_SM(\s+1\fIx\fP\s-1)\s+1:
テープは現在セットマークに位置している。
.RB ( MTSEEK
操作の後では常に偽)
.HP
\fBGMT_EOD\fP(\fIx\fP):
テープは記録データの末尾に位置している。
.HP
\fBGMT_WR_PROT\fP(\fIx\fP):
ドライブはライトプロテクトされている。
これはドライブによっては、
ドライブが現在のメディアタイプへの書き込みを
サポートしていない事を意味する場合もある。
.HP
\fBGMT_ONLINE\fP(\fIx\fP):
もっとも最近の
.BR open (2)
が、テープが入っていて操作の準備ができているドライブを検知した。
.HP
\fBGMT_D_6250\fP(\fIx\fP), \fBGMT_D_1600\fP(\fIx\fP), \fBGMT_D_800\fP(\fIx\fP):
この「汎用」のステータス情報は、
9-トラック \(12" テープドライブの場合にのみ、
現在の密度の設定を報告する。
.HP
\fBGMT_DR_OPEN\fP(\fIx\fP):
ドライブにテープが入っていない。
.HP
\fBGMT_IM_REP_EN\fP(\fIx\fP):
即時報告モード。 write コールが戻ったとき、
テープに対して物理的な書き込みが行われたかどうかを保証できない場合に、
このビットがセットされる。ドライバがデータをバッファリングせず、
ドライブもデータをバッファリングしない場合に限って、
この値は 0 にセットされる。
.HP
\fBGMT_CLN\fP(\fIx\fP):
ドライブがクリーニングを要求している。
カーネル 2.4.19 および 2.5.43 以降で実装された。
.RE
.IP \fImt_erreg\fP
.I mt_erreg
で定義されているフィールドは一つだけで、
下位の 16 ビットがエラーをリカバーした回数である
.RB ( MT_ST_SOFTERR_SHIFT
と
.B MT_ST_SOFTERR_MASK
で定義されている)。
ドライブの報告するエラーリカバー数と矛盾することがあるので、
この数はほとんどの場合維持されない
(ほとんどのドライブでは、デフォルトではソフトエラーを報告しない。
しかしこれは SCSI MODE SELECT コマンドによって変更できる)。
.IP \fImt_fileno\fP
(ゼロから数えた) 現在のファイル番号を報告する。
ファイル番号がわからない時 (例えば
.B MTBSS
や
.B MTSEEK
の後など) には \-1 にセットされる。
.IP \fImt_blkno\fP
現在のファイル中の(ゼロから数えた)ブロック番号を報告する。
ブロック番号がわからない時 (例えば
.BR MTBSF ,
.BR MTBSS ,
.BR MTSEEK
の後など) には \-1 にセットされる。
.PD
.SS "MTIOCPOS \(em テープ位置の取得"
.PP
このリクエストは
.I "(struct mtpos *)"
型の引数をとり、ドライブが保持している現在のテープブロック番号を報告する。
これは、
.B MTIOCGET
により返される
.I mt_blkno
と同じではない。
ドライブは
.B "READ POSITION"
コマンド (デバイス固有アドレス)
をサポートする SCSI-2ドライブか、
Tandberg 互換の SCSI-1 ドライブ
(Tandberg, Archive, Viper, Wangtek, ... ) でなければならない。
.PP
.in +4n
.nf
/* structure for MTIOCPOS \- mag tape get position command */
struct mtpos {
    long mt_blkno;    /* current block number */
};
.fi
.in
.SH 返り値
.TP 14
.TP
.B EACCES
書き込み保護されているテープに書き込みまたは消去を行おうとした。
(このエラーは
.BR open (2)
中には検知されない。)
.TP
.B EBUSY
デバイスがすでに使われているか、
ドライバがバッファを割当てられなかった。
.TP
.B EFAULT
コマンドの引数が、
呼びだしプロセスに属していないメモリ位置を指している。
.TP
.B EINVAL
.BR ioctl (2)
の引数が不正であるか、要求したブロックサイズが不正。
.TP
.B EIO 14
要求された操作が最後まで行えなかった。
.TP
.B ENOMEM
.BR read (2)
のバイト数が、テープにある次の物理ブロックより小さい
(2.2.18 および 2.4.0-test6 以前では、黙って余分のバイトを無視していた)。
.TP
.B ENOSPC
メディアの終点に達したため、書き込み操作が完了しなかった。
.TP
.B ENOSYS
不明な
.BR ioctl (2)。
.TP
.B ENXIO
オープンする時にテープデバイスが存在しなかった。
.TP
.B EOVERFLOW
ドライバの内部バッファより大きいサイズの可変長ブロックを
読み書きしようとした。
.TP
.B EROFS
ドライブに入っているテープがライトプロテクトされている場合に、
.B O_WRONLY
または
.B O_RDWR
で open を行おうとした。
.SH ファイル
.TP 12
.I /dev/st*
自動巻き戻しの SCSI テープデバイス。
.TP 12
.I /dev/nst*
巻き戻しをしない SCSI テープデバイス。
.\" .SH 著者
.\" このドライバは
.\" Dwayne Forsyth の書いたドライバをもとにして
.\" Kai M\(:akisara (Kai.Makisara@metla.fi) が書いた。
.\" 他にも何人かの人々がこのドライバに貢献してきた。
.SH 注意
.IP 1. 4
異なるシステムでデータを相互にやりとりする場合、
両方のシステムで物理的なテープブロックサイズを一致させる必要がある。
起動直後のドライブのパラメータは、大多数の OS がそのデバイスに対して
用いている値と異なっていることもよくある。多くのシステムは、
ドライブが対応していれば可変長ブロックモードを用いる。 DAT、
8mm ヘリカルスキャンドライブ、 DLT などの最近のドライブの
ほとんどは可変長ブロックモードに対応しているから。
これらのドライブは (少なくとも他のシステムとのデータ交換が
ある場合は)、 Linux でも可変長ブロックモードで使うほうが
良いかもしれない (つまりシステムの起動時のモード設定に
.B MTSETBLK
または
.B MTSETDEFBLK
を用いる)。
欠点としては、比較的大きなテープブロックサイズを用いなければ、
SCSI バス上で満足のいく転送速度が得られないことである。
.IP 2.
多くのプログラム
.RB ( tar (1)
など) では、
コマンドラインからユーザがブロック関連の値を指定できる。
この値によってテープ上の物理的なブロックサイズを決定できるのは、
可変長ブロックモードに限られることに注意。
.IP 3.
SCSI テープドライブを用いるには、基本の SCSI ドライバ、
SCSI アダプタのドライバ、 SCSI テープドライバのすべてが
カーネルに組み込まれているか、あるいはモジュールとしてロードされている
必要がある。 SCSI テープドライバがないと、
ドライブは認識されるが、
このページで記述されているテープのサポートは利用できない。
.IP 4.
ドライバはエラーメッセージをコンソールとログとに書き出す。
カーネル設定で verbose SCSI messages が有効にされていると、
SENSE コードが自動的にテキストに変換されて、
いくつかのメッセージに書きだされる。
.IP 5.
このドライバの内部バッファリングは、固定ブロックモードなら
.BR read (2)
や
.BR write (2)
のバイト数が小さくても良いスループットを出す。
直接転送ではこれは不可能なので、2.6 カーネルに移行したときに驚くかもしれない。
解決法としては、ソフトウェアにより大きな転送を行うよう伝える
(たいていはより大きなブロックを使わせる) ことである。
これが不可能なら、直接転送を無効にすることもできる。
.\" .SH 著作権
.\" Copyright \(co 1995 Robert K. Nichols.
.\" .br
.\" Copyright \(co 1999-2005 Kai M\(:akisara.
.\" .PP
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" Additional permissions are contained in the header of the source file.
.SH 関連項目
.BR mt (1)
.PP
カーネルソースの
.I drivers/scsi/README.st
や
.I Documentation/scsi/st.txt
(カーネル 2.6 以降) の各ファイルには、
ドライバに関するより新しい情報や、
その設定可能な範囲に関する内容が含まれている。
