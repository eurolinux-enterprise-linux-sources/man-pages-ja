.\" Hey Emacs! This file is -*- nroff -*- source.
.\" This man page was written by Jeremy Phelps <jphelps@notreached.net>.
.\" Notes added - aeb
.\" Redistribute and revise at will.
.\"
.\" Japanese Version Copyright (c) 2003  Akihiro MOTOKI
.\"         all rights reserved.
.\" Translated Tue Jul  8 00:28:17 JST 2003
.\"         by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	pseudo-terminal		擬似端末
.\"WORD:	pts			擬似端末
.\"
.TH PTS 4 2002-10-09 "Linux" "Linux Programmer's Manual"
.SH 名前
ptmx and pts \- 擬似端末のマスタとスレーブ
.SH 説明
ファイル \fI/dev/ptmx\fP は、メジャーナンバー (major number) 5、
マイナーナンバー (minor number) 2 を持つキャラクタ・ファイルであり、
通常、モードは 0666 で、所有者.グループは root.root である。
このファイルは、擬似端末 (pseudo-terminal) のマスタとスレーブの
ペアを作成するために使用される。
.PP
プロセスが \fI/dev/ptmx\fP をオープンすると、そのプロセスには
擬似端末マスタ (pseudo-terminal master; PTM) へのファイル・
ディスクリプタが返され、
.I /dev/pts
ディレクトリに擬似端末スレーブ (pseudo-terminal slave; PTS)
デバイスが作成される。
\fI/dev/ptmx\fP をオープンして得られるファイル・ディスクリプタは
それぞれ独立の PTM であり、対応する PTS を各々持つ。
PTS のパス名は、PTM のファイル・ディスクリプタを
.BR ptsname (3)
に渡すと知ることができる。
.PP
擬似端末スレーブをオープンする前に、必ず、マスタのファイル・ディスクリプタを
引き数として
.BR grantpt (3)
と
.BR unlockpt (3)
を呼び出さなければならない。
.PP
擬似端末のマスタとスレーブの両方がオープンされた後は、スレーブは、
プロセスに対して、実端末 (real terminal) と全く同じインタフェースを提供する。
.PP
スレーブに書かれたデータはマスタ・ディスクリプタに対する入力として扱われ、
マスタに書かれたデータはスレーブに対する入力として扱われる。
.PP
実例をあげると、擬似端末は
.BR xterm (1)
のような端末エミュレータを実装するのに使用されている。
端末エミュレータでは、擬似端末のマスタから読み込まれたデータは、
アプリケーションにとって実端末のデータと全く同じもののように見える。
また、
.BR sshd (8)
のようなリモート・ログイン用のプログラムの実装では、
擬似端末マスタから読み込まれたデータは、ネットワークを経由して、
端末や端末エミュレータに接続されているクライアント・プログラムに送信される。
.PP
擬似端末は、
.RB ( su (1)
や
.BR passwd (1)
のような) 通常はパイプからの入力を拒否するプログラムに、
入力を送信するためにも使用できる。
.SH ファイル
.IR /dev/ptmx ,
.I /dev/pts/*
.SH 備考
(Unix98 pty naming と呼ばれる) 上記の機能の Linux でのサポートは、
通常
.I /dev/pts
にマウントされるはずの
.I devpts
ファイルシステムを通して実現されている、
.LP
この Unix98 スキームが導入される前は、マスタ擬似端末は
.IR /dev/ptyp0 ", ..."
、スレーブ擬似端末は
.IR /dev/ttyp0 ", ..."
と呼ばれており、あらかじめたくさんのデバイス・ノードを割り当てて
おく必要があった。
.SH 関連項目
.BR getpt (3),
.BR grantpt (3),
.BR ptsname (3),
.BR unlockpt (3),
.BR pty (7)
