.\" Copyright (C) 2004 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2005 Yuichi SATO
.\"         all rights reserved.
.\" Translated Wed Jan 26 07:21:01 JST 2005
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH SET_TID_ADDRESS 2 2004-09-10 "Linux" "Linux Programmer's Manual"
.SH 名前
set_tid_address \- スレッド ID へのポインタを設定する
.SH 書式
.nf
.B #include <linux/unistd.h>
.sp
.BI "long set_tid_address(int *" tidptr );
.fi
.SH 説明
カーネルは各プロセスについて
.I set_child_tid
と
.I clear_child_tid
という 2 つの値を保持する。
これらはデフォルトでは NULL である。
.SS set_child_tid
プロセスが
.B CLONE_CHILD_SETTID
フラグを指定した
.BR clone (2)
によって開始された場合、
.I set_child_tid
は
.I child_tidptr
に設定される。
これは
.BR clone (2)
のシステムコールの 5 番目の引き数である。
.LP
.I set_child_tid
が設定された場合、一番最初に新しいプロセスが行うことは、
このアドレスに自身の PID を書き込むことである。
.SS clear_child_tid
プロセスが
.B CLONE_CHILD_CLEARTID
フラグを指定した
.BR clone (2)
によって開始された場合、
.I clear_child_tid
は
.I child_tidptr
に設定される。
これは
.BR clone (2)
のシステムコールの 5 番目の引き数である。
.LP
システムコール
.BR set_tid_address ()
は呼び出し元プロセスの
.I clear_child_tid
の値を
.I tidptr
に設定する。
.LP
.I clear_child_tid
が設定されているときにプロセスが終了すると、
そのプロセスは他のプロセスまたはスレッドとメモリを共有しているので、
このアドレスに 0 が書き込まれ、
.I futex(child_tidptr, FUTEX_WAKE, 1, NULL, NULL, 0);
の呼び出しが実行される
(つまり、この futex で待っている 1 つのプロセスを起こす (wake))。
エラーは無視される。
.SH 返り値
.BR set_tid_address ()
は常に現在のプロセスの PID を返す。
.SH エラー
.BR set_tid_address ()
は常に成功する。
.SH バージョン
この呼び出しは Linux 2.5.48 以降で存在する。
ここで書かれた詳細は Linux 2.5.49 以降で有効である。
.SH 準拠
このシステムコールは Linux 独自である。
.SH 関連項目
.BR clone (2),
.BR futex (2)
