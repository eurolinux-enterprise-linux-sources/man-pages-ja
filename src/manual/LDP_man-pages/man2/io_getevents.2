.\" Copyright (C) 2003 Free Software Foundation, Inc.
.\" This file is distributed according to the GNU General Public License.
.\" See the file COPYING in the top level source directory for details.
.\"
.\" Japanese Version Copyright (c) 2003 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Mar  8 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD:	completion queue	完了キュー
.\"
.\" .de Sh \" Subsection
.\" .br
.\" .if t .Sp
.\" .ne 5
.\" .PP
.\" \fB\\$1\fP
.\" .PP
.\" ..
.\" .de Sp \" Vertical space (when we can't use .PP)
.\" .if t .sp .5v
.\" .if n .sp
.\" ..
.\" .de Ip \" List item
.\" .br
.\" .ie \\n(.$>=3 .ne \\$3
.\" .el .ne 3
.\" .IP "\\$1" \\$2
.\" ..
.TH IO_GETEVENTS 2 2008-07-04 "Linux" "Linux Programmer's Manual"
.SH 名前
io_getevents \- 完了キューから非同期 I/O イベントを読み出す
.SH 書式
.nf
.\" .ad l
.\" .hy 0
.B #include <linux/time.h>
.B #include <libaio.h>
.\" #include <linux/aio.h>
.sp
.\" .HP 19
.BI "int io_getevents(aio_context_t " ctx_id ", long " min_nr ", long " nr ,
.BI "                 struct io_event *" events \
", struct timespec *" timeout );
.\" .ad
.\" .hy
.sp
\fI\-laio\fP とリンクする。
.fi
.SH 説明
.PP
.BR io_getevents ()
は、少なくとも \fImin_nr\fP の、最大 \fInr\fP 個の
イベントを、 \fIctx_id\fP で指定された AIO (非同期 I/O) コンテキストの
完了キューから読み出そうとする。
\fItimeout\fP はイベント読み出しの待ち時間の合計を指定する。
タイムアウトに NULL を指定した場合、少なくとも \fImin_nr\fP 個のイベントが
読み出されるまで待つことを意味する。
注意点を以下にあげる:
\fItimeout\fP は相対的な指定である。
NULL でない場合更新されることもありえる。
呼び出し元の動作は停止する。
.SH 返り値
成功すると、
.BR io_getevents ()
は読み出したイベント数を返す。
イベントが一つも読み出されなかった場合は 0 が返され、
\fItimeout\fP 時間が経過した場合は \fImin_nr\fP 未満の値が返される。
失敗時の返り値については、「注意」の節を参照すること。
.SH エラー
.TP
.B EFAULT
\fIevents\fP または \fItimeout\fP が無効なポインタである。
.TP
.B EINVAL
\fIctx_id\fP が無効である。もしくは、\fImin_nr\fP または \fInr\fP が
範囲外の値である。
.TP
.B EINTR
シグナルハンドラにより割り込まれた。
.BR signal (7)
参照。
.TP
.B ENOSYS
.BR io_getevents ()
がこのアーキテクチャでは実装されていない。
.SH バージョン
.PP
非同期 I/O システム・コールは 2002年8月に Linux 2.5 で初めて登場した。
.SH 準拠
.PP
.BR io_getevents ()
は Linux 固有であり、移植を想定したプログラムで
使用すべきではない。
.SH 注意
glibc はこのシステムコール用のラッパー関数を提供していない。

.I libaio
で
.BR io_getevents ()
用に提供されているラッパー関数は、エラーの通知が通常の C ライブラリの
慣習にしたがっておらず、エラーの場合には負のエラー番号
(エラーの節に列挙されている値の一つを負にしたもの) が返り値となる。
.BR syscall (2)
経由でシステムコールを起動すると、返り値は通常のエラー通知の慣習に
したがってものとなり、エラーの場合には \-1 が返り、
.I errno
にエラーを示す (正の) 値が設定される。
.SH 関連項目
.PP
.BR io_cancel (2),
.BR io_destroy (2),
.BR io_setup (2),
.BR io_submit (2),
.BR time (7)
.\" .SH 注
.\" .PP
.\" 非同期 I/O システム・コールは Benjamin LaHaise が書いた。
.\" .SH 著者
.\" Kent Yoder.
