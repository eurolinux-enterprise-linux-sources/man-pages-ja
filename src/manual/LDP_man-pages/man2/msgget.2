.\" Copyright 1993 Giorgio Ciucci <giorgio@crcc.it>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provflags the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Added correction due to Nick Duffek <nsd@bbc.com>, aeb, 960426
.\" Modified Wed Nov  6 04:00:31 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified, 8 Jan 2003, Michael Kerrisk, <mtk.manpages@gmail.com>
.\"	Removed EIDRM from errors - that can't happen...
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\" Modified, 11 Nov 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Language and formatting clean-ups
.\"	Added notes on /proc files
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-02-23, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Modified 2003-07-03, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2005-03-04, Akihiro MOTOKI
.\"
.\"WORD:	message			メッセージ
.\"WORD:	queue			キュー
.\"WORD:	identifier		識別子
.\"WORD:	argument		引き数
.\"WORD:	owner			所有者
.\"WORD:	group			グループ
.\"WORD:	other			他人
.\"WORD:	initialize		初期化
.\"WORD:	effective user ID	実効ユーザーID
.\"WORD:	effective group ID	実効グループID
.\"WORD:	current time		現在時刻
.\"WORD:	destruction		破棄
.\"WORD:	policy			方針
.\"
.TH MSGGET 2 2004-05-27 "Linux" "Linux Programmer's Manual"
.SH 名前
msgget \- メッセージ・キュー識別子を取得する
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <sys/ipc.h>
.B #include <sys/msg.h>

.BI "int msgget(key_t " key ", int " msgflg );
.fi
.SH 説明
.BR msgget ()
システムコールは
.I key
引き数の値に対応するメッセージ・キューの識別子を返す。
.I key
の値が
.B IPC_PRIVATE
の場合、または
.I key
が
.B IPC_PRIVATE
でなくても、
.I key
に対応するメッセージ・キューが存在せず、
.I msgflg
に
.B IPC_CREAT
が指定されている場合、
新しいメッセージ・キューが作成される。
.PP
.I msgflg
に
.B IPC_CREAT
と
.B IPC_EXCL
の両方が指定された場合、
.I key
に対応するメッセージ・キューが既に存在すると、
.BR msgget ()
は失敗し、
.I errno
に
.B EEXIST
が設定される。
(これは
.BR open (2)
に
.B O_CREAT | O_EXCL
を指定した場合の動作と同じである)
.PP
メッセージ・キューの作成時に、
.I msgflg
引き数の下位 9 ビットは、
そのメッセージ・キューのアクセス許可の定義として使用される。
これらの許可ビットは
.BR open (2)
の引き数
.I mode
と同じ形式で同じ意味である。
や
.BR creat (2)
システム・コールのアクセス許可パラメータと同じ形式で、同じ意味を持つ。
(但し、実行 (execute) 許可は使用されない。)
.PP
新規のメッセージ・キューを作成する際、
.BR msgget ()
システム・コールはメッセージ・キューのデータ構造体
.I msqid_ds
を以下のように初期化する
.RI ( msqid_ds
については
.BR msgctl (2)
を参照):
.IP
.I msg_perm.cuid
と
.I msg_perm.uid
に呼び出し元プロセスの実効 (effective) ユーザーID を設定する。
.IP
.I msg_perm.cgid
と
.I msg_perm.gid
に呼び出し元プロセスの実効 (effective) グループID を設定する。
.IP
.I msg_perm.mode
の下位 9 ビットは
.I msgflg
の下位 9 ビットを設定する。
.IP
.IR msg_qnum ,
.IR msg_lspid ,
.IR msg_lrpid ,
.IR msg_stime ,
.I msg_rtime
に 0 を設定される。
.IP
.I msg_ctime
に現在の時刻を設定する。
.IP
.I msg_qbytes
に、システムで決められたメッセージ・キューの最大サイズ
.B MSGMNB
を設定する。
.PP
メッセージ・キューがすでに存在する場合は、アクセス許可の検査と、
破棄 (destruction) マークがないかの確認が行われる。
.SH 返り値
成功した場合、返り値はメッセージ・キュー識別子 (非負の整数) となる。
失敗した場合は \-1 が返され、
.I errno
にそのエラーが示される。
.SH エラー
失敗した場合、
.I errno
に以下の値のいずれか一つが設定される:
.TP
.B EACCES
.I key
に対応するメッセージ・キューは存在するが、
呼び出し元プロセスはそのキューに対するアクセス許可がなく、
.B CAP_IPC_OWNER
ケーパビリティも持っていない。
.TP
.B EEXIST
.I key
に対応するメッセージ・キューが存在し、
.I msgflg
に
.B IPC_CREAT
と
.B IPC_EXCL
が指定されていた。
.TP
.B ENOENT
.I key
に対応するメッセージ・キューが存在せず、
.I msgflg
に
.B IPC_CREAT
が指定されていなかった。
.TP
.B ENOMEM
メッセージ・キューを作成しようとしたが、新しいデータ構造体を作成
するのに十分なメモリがシステムに存在しない。
.TP
.B ENOSPC
メッセージ・キューを作成しようとしたが、作成すると
システム全体のメッセージ・キュー数の最大値
.RB ( MSGMNI )
を超えてしまう。
.SH 準拠
SVr4, POSIX.1-2001.
.SH 注意
.B IPC_PRIVATE
はフラグではなく、
.I key_t
型である。
この特別な値が
.I key
として使用された場合、
.BR msgget ()
システムコールは
.I msgflg
の下位 9 ビット以外の全てを無視して
(成功した場合は) 新しいメッセージ・キューを作成する。
.PP
.BR msgget ()
システムコールに影響を及ぼすメッセージ・キューの資源の
システムとしての制限を以下に示す:
.TP
.B MSGMNI
システム全体のメッセージ・キュー数の最大値: 方針依存
(Linux では、この制限値は
.I /proc/sys/kernel/msgmni
経由で参照したり、変更したりできる)。
.SS Linux での注意
Linux 2.3.20 までは、削除が予定されているメッセージ・キューに対して
.BR msgget ()
を行うと
.B EIDRM
がエラーとして返されるようになっていた。
.SH バグ
.B IPC_PRIVATE
という名前を選んだのはおそらく失敗であろう。
.B IPC_NEW
の方がより明確にその機能を表しているだろう。
.SH 関連項目
.BR msgctl (2),
.BR msgrcv (2),
.BR msgsnd (2),
.BR ftok (3),
.BR capabilities (7),
.BR mq_overview (7),
.BR svipc (7)
