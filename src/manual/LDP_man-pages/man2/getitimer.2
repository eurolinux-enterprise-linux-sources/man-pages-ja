.\" Copyright 7/93 by Darren Senn <sinster@scintilla.santa-clara.ca.us>
.\" Based on a similar page Copyright 1992 by Rick Faith
.\" May be freely distributed
.\" Modified Tue Oct 22 00:22:35 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" 2005-04-06 mtk, Matthias Lang <matthias@corelatus.se>
.\" 	Noted MAX_SEC_IN_JIFFIES ceiling
.\"
.\" Japanese Version Copyright (c) 1997 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated 1997-02-22, HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\" Updated 2005-04-23, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-09-11, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2006-07-23, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2007-10-14, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2009-04-13, Akihiro MOTOKI, LDP v3.20
.\"
.\" WORD:	timer	タイマー
.\" WORD:	jiffies	jiffy
.\"
.TH GETITIMER 2 2009-03-15 "Linux" "Linux Programmer's Manual"
.SH 名前
getitimer, setitimer \- インターバル・タイマーの値を取得または設定する
.SH 書式
.nf
.B #include <sys/time.h>
.sp
.BI "int getitimer(int " which ", struct itimerval *" curr_value );
.br
.BI "int setitimer(int " which ", const struct itimerval *" new_value ,
.BI "              struct itimerval *" old_value );
.fi
.SH 説明
システムは 1 個のプロセスにつき 3 個のインターバル・タイマーを提供する。
それぞれのタイマーは別々の時間領域で減少する。
どのタイマーも満了するとプロセスにシグナルが送られ、
タイマーは (設定によっては) 再び開始される。
.TP 1.5i
.B ITIMER_REAL
実時間 (real time) で減少し、満了すると
.B SIGALRM
が送られる。
.TP
.B ITIMER_VIRTUAL
プロセスが実行されている間のみ減少し、満了すると
.B SIGVTALRM
が送られる。
.TP
.B ITIMER_PROF
プロセスが実行されていて、
かつシステムがそのプロセスのために処理を行なっている間に減少する。
多くの場合、このタイマーは
.B ITIMER_VIRTUAL
と組み合わされて、アプリケーションがカーネル空間とユーザー空間で
どれだけの時間を過ごしたかをプロファイルするのに使用される。
満了すると
.B SIGPROF
が送られる。
.LP
タイマーの値は以下の構造体によって定義される:
.PD 0
.in +4n
.nf

struct itimerval {
    struct timeval it_interval; /* next value */
    struct timeval it_value;    /* current value */
};

struct timeval {
    long tv_sec;                /* seconds */
    long tv_usec;               /* microseconds */
};
.fi
.in
.PD
.LP
.BR getitimer ()
関数は、
.I which
で指定されたタイマー
.RB ( ITIMER_REAL ,
.BR ITIMER_VIRTUAL ,
.B ITIMER_PROF
のどれか) の現在の設定を、
.I curr_value
で指定された構造体に格納する。
.I it_value
要素にはタイマーの残り時間が設定される。タイマーがオフの場合は
ゼロが設定される。同様に
.I it_interval
には初期値が設定される。

.BR setitimer ()
関数は指定されたタイマーに
.I new_value
の値を設定する。
.I old_value
が NULL 以外の場合、タイマーの古い値が
.I old_value
に格納される。
.LP
タイマーは
.I it_value
からゼロへ向けて減っていき、シグナルを生成し、
.I it_interval
に初期化される。
タイマーがゼロに設定された場合
.RI ( it_value
がゼロか、タイマーが満了した時に
.I it_interval
がゼロの場合) は停止する。
.LP
タイマーの期間は
.I tv_sec
と
.I tv_usec
の両方により決定される。
.LP
要求した時間がくる前にタイマーが満了することはないが、
逆にある (短い) 時間だけ満了が遅れることはある。
どれだけ遅れるかはシステムの時間分解能とシステムの負荷に依存する
.RB ( time (7)
参照; 但し、バグの項も参照のこと)。
タイマーが満了するとシグナルが生成され、タイマーは初期化される。
プロセスがアクティブな時
.RB ( ITIMER_VIRTUAL
の場合には常にそうである) にタイマーが満了した場合、生成されたシグナルは
すぐに配送される。それ以外の場合は、システムの負荷により少しの時間だけ
遅れて配送される。
.SH 返り値
成功した場合はゼロが返る。エラーの場合は \-1 が返り、
.I errno
が適切に設定される。
.SH エラー
.TP
.B EFAULT
.IR new_value ,
.IR old_value ,
.I curr_value
が有効なポインターでない。
.TP
.B EINVAL
.I which
が
.BR ITIMER_REAL ,
.BR ITIMER_VIRTUAL ,
.B ITIMER_PROF
のどれでもない。
または (Linux 2.6.22 以降で)
.I new_value
で指定された構造体の
.I tv_usec
フィールドの一つが 0 以上 999999 以下の範囲に入らない値である。
.SH 準拠
POSIX.1-2001, SVr4, 4.4BSD (このコールは 4.2BSD で始めて現われた).
POSIX.1-2008 では、
.BR getitimer ()
と
.BR setitimer ()
は廃止予定とされており、
代わりに POSIX タイマー API
.RB ( timer_gettime (2),
.BR timer_settime (2)
など) を使うことが推奨されている。
.SH 注意
.BR fork (2)
で作成された子プロセスは、
親プロセスのインターバル・タイマーを継承しない。
.BR execve (2)
の前後ではインターバル・タイマーは保存される。

POSIX.1 では、
.BR setitimer ()
と、
.BR alarm (2),
.BR sleep (3),
.BR usleep (3)
という 3 つのインタフェースとの相互の影響については規定していない。
.SH バグ
シグナルの生成と配送は別個のものであり、
前述のシグナルのそれぞれについて一つだけがプロセスのために
待機する。
非常に重い負荷の下では、
.B ITIMER_REAL
タイマーでは、時間切れにより生成された一つ前のシグナルが配送される前に、
次の時間切れが起こる場合がある。
そのような場合、 2 個めのイベントに対するシグナルは失われてしまう。

バージョン 2.6.16 より前の Linux カーネルでは、
タイマーの値は jiffy で表現される。
要求が jiffy 表現で
.RI ( include/linux/jiffies.h
で定義されている)
.B MAX_SEC_IN_JIFFIES
を越える値をタイマーに設定しようとするものの場合、
タイマーは暗黙にこの上限値に切り詰められる。
Linux/i386 の場合 (Linux 2.6.13 以降では jiffy は 0.004 秒) の場合、
これはタイマーの上限値がおよそ 99.42 日になることを意味する。
Linux 2.6.16 以降では、カーネルは時間に関する内部表現として
異なる表現を使うようになっており、この上限はなくなった。

(i386 を含む) いくつかのシステムでは、
バージョン 2.6.12 以前の Linux カーネルは
ある種の状況では 1 jiffy 早くタイマーが終了してしまうというバグがあった。
このバグはカーネル 2.6.12 で修正された。
.\" 4 Jul 2005: It looks like this bug may remain in 2.4.x.
.\"	http://lkml.org/lkml/2005/7/1/165

POSIX.1-2001 では
.BR setitimer ()
は
.I tv_usec
の値が 0 から 999999 の範囲外である場合には失敗するべきだとしている。
しかし、2.6.21 以前のカーネルの Linux ではエラーにならず、
対応する秒数の分だけそのタイマーの秒の値が暗黙に調整される。
カーネル 2.6.22 以降では、この標準非準拠の動作は修正され、
.I tv_usec
の値が不適切な場合には
.B EINVAL
エラーとなる。
.\" Bugzilla report 25 Apr 2006:
.\" http://bugzilla.kernel.org/show_bug.cgi?id=6443
.\" "setitimer() should reject non-canonical arguments"
.SH 関連項目
.BR gettimeofday (2),
.BR sigaction (2),
.BR signal (2),
.BR timer_create (2),
.BR timerfd_create (2),
.BR time (7)
