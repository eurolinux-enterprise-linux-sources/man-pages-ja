.\" Copyright (c) 2002 Andries Brouwer <aeb@cwi.nl>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2007-10-23 mtk Added intro paragraph about section, plus a paragraph
.\"     about exit status values.
.\"
.\" Japanese Version Copyright (c) 2002 Akihiro MOTOKI, all rights reserved.
.\" Translated Mon Mar  5 2003 by Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.\"WORD introduction 紹介
.\"WORD tree	木
.\"
.TH INTRO 1 2007-11-15 "Linux" "Linux User's Manual"
.SH 名前
intro \- ユーザーコマンドの紹介
.SH 説明
マニュアルの 1 章は、ユーザーコマンドやツールの説明について説明している。
例えば、ファイル操作ツール、シェル、コンパイラ、ウェブブラウザ、
ファイルやイメージのビューアやエディタ、などである。

すべてのコマンドは終了時にステータス値を返す。
この値を検査することで (例えば、ほとんどのシェルでは変数
.I $?
に最後に実行したコマンドのステータスが保持される)、
そのコマンドが成功して完了したかどうかを知ることができる。
伝統的に、終了ステータス 0 は成功を示すのに使われ、非 0 の値は
そのコマンドが成功しなかったことを示す
(終了ステータスの詳細は
.BR wait (2)
に書かれている)。
非 0 の終了ステータスは 1 から 255 の範囲の値をとることができ、
いくつかのコマンドではコマンドが失敗した理由を示すために
複数の非 0 のステータス値が使用されている。
.SH 備考
Linux は Unix の一種であり、大雑把にいえば、
Unix 上のユーザコマンドはすべて Linux 上でも全く同じ動作をする
(FreeBSD や他のの多くの Unix 風のシステムでも同様である)。
.LP
Linux には GUI (グラフィカル・ユーザ・インタフェース) が用意されており、
何かをポイントしたり、クリックしたり、ドラッグしたりでき、うまくいけば
最初にたくさんの文書を読まなくても目的の作業ができてしまうこともある。
伝統的な Unix 環境は CLI (コマンド・ライン・インタフェース) であり、
コマンドを打ち込んで、コンピュータに何をすべきか教えてやる。
CLI は GUI よりも速く強力だが、どのコマンドが何をするのか知っている必要
がある。CLI を使い始めるために必要最小限のコマンドを以下に述べる。
.SS ログイン
作業を開始するためには、ます最初にログインしなければならないだろう。
すなわち、ユーザ名とパスワードを入力しなければならない。詳しくは
.BR login (1)
を参照のこと。
.I login
プログラムは (コマンド・インタープリタである)
.I "シェル (shell)"
を起動する。グラフィカル・ログインの場合は、メニューやアイコンがある
スクリーンが表示され、マウスをクリックするとウィンドウが開いて
シェルが起動されることだろう。詳しくは
.BR xterm (1)
を参照のこと。
.SS シェル
コマンドは、コマンド・インタープリタである
.I シェル
に対して入力する。
.I シェル
は、組み込みコマンドではなく普通のプログラムであり、好みのものに変更する
ことができる。各人にはそれぞれ好みのシェルがある。標準のシェルは
.I sh
と呼ばれる。
.BR ash (1),
.BR bash (1),
.BR csh (1),
.BR zsh (1),
.BR chsh (1)
を参照のこと。
.LP
セッションの例を以下に示す。

.RS
.nf
.BI "knuth login: " aeb
.BI "Password: " ********
.BI "% " date
Tue Aug  6 23:50:44 CEST 2002
.BI "% " cal
	  August 2002
Su Mo Tu We Th Fr Sa
             1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31

.BI "% " ls
bin  tel
.BI "% " "ls \-l"
total 2
drwxrwxr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-rw\-r\-\-   1 aeb         37 Aug  6 23:52 tel
.BI "% " "cat tel"
maja    0501\-1136285
peter   0136\-7399214
.BI "% " "cp tel tel2"
.BI "% " "ls \-l"
total 3
drwxr\-xr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:52 tel
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:53 tel2
.BI "% " "mv tel tel1"
.BI "% " "ls \-l"
total 3
drwxr\-xr\-x   2 aeb       1024 Aug  6 23:51 bin
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:52 tel1
\-rw\-r\-\-r\-\-   1 aeb         37 Aug  6 23:53 tel2
.BI "% " "diff tel1 tel2"
.BI "% " "rm tel1"
.BI "% " "grep maja tel2"
maja    0501\-1136285
.BI "% "
.fi
.RE

ここで Control-D を打つとセッションが終了する。
ここで、
.B "% "
はコマンド・プロンプトである。コマンド・プロンプトはシェル独特のやり方で、
シェルが次のコマンドを受け付けられる状態になっていることを示している。
プロンプトは、柔軟にカスタマイズ
することができ、ユーザ名、マシン名、カレント・ディレクトリ、時刻などを
プロンプトに含めることができる。
PS1="What next, master? " と設定すると、
プロンプトはそのように変更されるだろう。
.LP
例にあるように、
.I date
という日付と時刻を表示するコマンドや、
.I cal
というカレンダを表示するコマンドもある。
.LP
.I ls
コマンドはカレント・ディレクトリの内容をリスト表示する、つまり
ディレクトリ内にどんなファイルがあるかを教えてくれる。
.I \-l
オプションをつけて実行すると、詳細表示が行われ、
ファイルの所有者、サイズ、日付などが表示される。
上の例では、"tel" ファイルは、サイズが 37 バイトで、所有者は aeb で、
所有者は読み書きができ、他の人は読み出しだけができることが分かる。
ファイルの所有者と権限 (permission) は、それぞれ
.I chown
コマンドと
.I chmod
コマンドで変更できる。
.LP
.I cat
コマンドはファイルの内容を表示する。
(コマンド名は "concatenate and print" (連結して印字する) に由来している。
引数として与えられた全てのファイルの内容が連結され、「標準出力」
に送られる。上の例では、標準出力は端末のスクリーンである。)
.LP
.I cp
コマンドはファイルのコピーを行う (その名前は "copy" に由来する)。
一方、
.I mv
コマンドは単純にファイル名の変更を行う
(その名前は "move" に由来する)。
.LP
.I diff
コマンドは 2 つのファイルの違いを表示する。
上の例では、二つのファイルに違いがないので、何も出力されていない。
.LP
.I rm
コマンドはファイルを削除する。ファイルはなくなってしまうので
注意して使用すること! ゴミ箱に相当するものはなく、
削除はそのファイルが完全に失われることを意味する。
.LP
.I grep
コマンドは、指定された文字列を一つ以上のファイルから探す
(コマンド名は "g/re/p" に由来している)。
上の例では、Maja の電話番号が見つかっている。
.SS パス名とカレント・ディレクトリ
ファイルはファイル階層という大きな木の中にある。それぞれのファイルには
.I "パス名 (pathname)"
があり、パス名は (/ と呼ばれる) 木の根からの経路を示すものである。
上の例では、完全なパス名は /home/aeb/tel のようになる。
いつも完全なパス名を使うのは不便なので、カレント・ディレクトリにある
ファイル名は、ファイル名の最後の部分だけに省略することができる。
したがって、カレント・ディレクトリが "/home/aeb" の時は、 "/home/aeb/tel"
を "tel" に省略して書くことができる。
.LP
.I pwd
コマンドはカレント・ディレクトリを表示する。
.LP
.I cd
コマンドはカレント・ディレクトリを変更する。
"cd /"、"pwd"、"cd"、"pwd" と順に実行してみるとよい。
.SS ディレクトリ
.I mkdir
コマンドはディレクトリを新規に作成する。
.LP
.I rmdir
コマンドは空であればディレクトリを削除し、
空でなければエラーメッセージを表示する。
.LP
.I find
コマンドは、指定された名前やその他の属性を持つファイルを探す
(書式はかなり変わっている)。例えば、"find . \-name tel" を実行すると、
"tel" という名前のファイルの検索をカレント・ディレクトリから開始する。
(カレント・ディレクトリは "." で表す)。"find / \-name tel" としても
同じことを行うが、検索は木の根 (/) から開始される。
数 GB のディスクに対して検索をかけると時間がかかるので、
そのようなときは
.BR locate (1)
を使った方がいいかもしれない。
.SS ディスクとファイルシステム
.I mount
コマンドは、(フロッピーや CDROM などの) ディスク上のファイルシステムを
大きなファイルシステム階層に接続する。逆に
.I umount
コマンドは切り離しを行う。
.I df
コマンドを実行すると、ディスクの未使用量がどの程度かを表示する。
.SS プロセス
Unix システムでは、多くのユーザプロセスとシステムプロセスが同時に実行される。
対話的に実行できるプロセスは
.I foreground
で実行されており、そうでないものは
.I background
で実行されている。
コマンド
.I ps
により、どのプロセスが実行されているかやプロセスが持っている番号
(プロセス番号) を表示できる。
コマンド
.I kill
を使うことで、プロセスを取り除くことができる。
オプションなしで実行されると、「いなくなって下さい」というやさしい要求
を行う。"kill \-9" に続けてプロセス番号を指定すると、指定したプロセスを
直ちに削除する。
foreground プロセスは多くの場合 Control-C をタイプすることで
殺すことができる。
.SS 情報の探し方
非常にたくさんのコマンドがあり、
それぞれのコマンドにはたくさんのオプションがある。
伝統的には、コマンドの説明は (このドキュメントもそうだが)
.I "man ページ"
に書かれている。例えば "man kill" コマンドを実行すると、"kill" コマンドの
使い方に関する説明が表示される。(同様に "man man" は "man" コマンドに
ついての説明を表示する。)
.I man
プログラムはテキストを
.I pager
に渡して表示を行う。
.I pager
として
.I less
が使われることが多い。
次のページに進むにはスペース・キーを、終了するには q を押す。
.LP
ドキュメントでは、他の man ページへの参照は
.BR man (1)
のように名前とセクション番号で示すのが一般的である。
man ページは簡潔に書かれており、詳細を忘れたときに素早く情報を見つける
ことができる。例や説明とともに入門向けの記載もあるので、初めての人にとっても
役に立つものである。
.LP
多くの GNU/FSF ソフトウェアには info ファイルが付属している。
"info info" とタイプすると、"info" プログラムの使い方の紹介が表示される。
.LP
特集記事については HOWTO で扱われることが多い。
.I /usr/share/doc/howto/en
を見るといいだろう。
HTML ファイルがあった場合はブラウザを使って表示すればよい。
.\"
.\" Actual examples? Separate section for each of cat, cp, ...?
.\" gzip, bzip2, tar, rpm
.SH 関連項目
.BR standards (7)
