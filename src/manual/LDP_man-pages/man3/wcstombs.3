.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Japanese Version Copyright (c) 1999 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Tue Jan 11 00:55:41 JST 2000
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH WCSTOMBS 3  1999-07-25 "GNU" "Linux Programmer's Manual"
.SH 名前
wcstombs \- ワイド文字列をマルチバイト文字列に変換する
.SH 書式
.nf
.B #include <stdlib.h>
.sp
.BI "size_t wcstombs(char *" dest ", const wchar_t *" src ", size_t " n );
.fi
.SH 説明
\fIdest\fP が NULL ポインタでない場合、
.BR wcstombs ()
関数は
ワイド文字列 \fIsrc\fP を \fIdest\fP から始まるマルチバイト文字列に
変換する。\fIdest\fP には最大で \fIn\fP バイトが書き込まれる。
変換は初期状態で開始される。変換は以下の3つの理由により停止する。
.PP
1. (現在のロケールにおける)マルチバイト列で表現できないワイド文字に
遭遇した場合。この場合には
.I (size_t)\ \-1
が返される。
.PP
2. 長さ制限によって強制停止させられた場合。この場合には \fIdest\fP に
書き込まれたバイト数が返される。しかしこの時点でのシフト状態は失われる。
.PP
3. ワイド文字列が終端の L\(aq\\0\(aq を含めて完全に変換された場合。
この場合には変換は初期状態で終り、終端の \(aq\\0\(aq バイトを除いて
\fIdest\fP に書き込まれたバイト数を返す。
.PP
プログラマーは \fIdest\fP に最低でも \fIn\fP バイトの空きがあることを
保証しなければならない。
.PP
\fIdest\fP が NULL の場合、\fIn\fP は無視される。上記と同様に変換が行
なわれるが変換結果のバイト列はメモリには書き込まれない。
また長さの上限が存在しない。
.PP
上記の 2. の場合を避けるために、プログラマーは \fIn\fP が
\fIwcstombs(NULL,src,0)+1\fP 以上であることを保証しなければならない。
.SH 返り値
.BR wcstombs ()
関数は生成したマルチバイト列のバイト数を返す。終端の
ナル文字は含まない。もし変換できないワイド文字に遭遇した場合には
.I (size_t)\ \-1
を返す。
.SH 準拠
C99.
.SH 注意
.BR wcstombs ()
の動作は現在のロケールの
.B LC_CTYPE
カテゴリに依存している。
.PP
.BR wcsrtombs ()
関数は同じ機能のためのスレッド・セーフな
インターフェースを提供する。
.SH 関連項目
.BR wcsrtombs (3)
