.\" Copyright 2000 Sam Varshavchik <mrsam@courier-mta.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References: RFC 2553
.\"
.\" Japanese Version Copyright (c) 2001 NAKANO Takeo all rights reserved.
.\" Translated Sun Jan 14 2001 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Tue Nov 26 2002 by Kentaro Shirakata <argrath@ub32.org>
.\"
.\"WORD:	null pointer	ヌル・ポインター
.\"
.TH GETIPNODEBYNAME 3 2007-11-15 "Linux" "Linux Programmer's Manual"
.SH 名前
getipnodebyname, getipnodebyaddr, freehostent \- ネットワークホストの名前とアドレスの取得
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <sys/socket.h>
.B #include <netdb.h>
.sp
.BI "struct hostent *getipnodebyname(const char *" name ", int " af ,
.BI "                                int " flags ", int *" error_num );
.sp
.BI "struct hostent *getipnodebyaddr(const void *" addr ", size_t " len ,
.BI "                                int " af ", int *" "error_num" );
.sp
.BI "void freehostent(struct hostent *" "ip" );
.fi
.SH 説明
これらの関数は非推奨である (glibc では利用できない)。
代わりに
.BR getaddrinfo (3)
と
.BR getnameinfo (3)
を使うこと。
.LP
.BR getipnodebyname ()
と
.BR getipnodebyaddr ()
は、ネットワークホストの名前とアドレスを返す。
これらの関数は、以下の構造体へのポインタを返す。
.sp
.in +4n
.nf
struct  hostent {
    char  *h_name;
    char **h_aliases;
    int    h_addrtype;
    int    h_length;
    char **h_addr_list;
};
.fi
.in
.PP
これらの関数は、 IPv4 ネットワークアドレスファミリにしかアクセスできない
.BR gethostbyname (3)
や
.BR gethostbyaddr (3)
を置き換えるものである。
.BR getipnodebyname ()
関数と
.BR getipnodebyaddr ()
関数は複数のネットワークアドレスファミリーにアクセス可能になっている。
.PP
これらの関数は、
.B gethostby
の関数群と異なり、動的に割り当てられたメモリへのポインタを返す。
呼び出し元がこれらの
.I hostent
構造体を必要としなくなった後は、
.BR freehostent ()
関数を用いれば動的な割り当てメモリを解放できる。
.SS getipnodebyname() の引き数
.BR getipnodebyname ()
関数は
.I name
引き数で指定されたホストのネットワークアドレスを引く。
.I af
引き数には以下の値のいずれかを指定する。
.TP
.B AF_INET
.I name
引き数は、ドットで 4 つに区切られた IPv4 アドレスか、
IPv4 ネットワークホストの名前へのポインタである。
.TP
.B AF_INET6
.I name
引き数は、16 進の IPv6 アドレスか、
IPv6 ネットワークホストの名前へのポインタである。
.PP
.I flags
パラメータには追加のオプションを指定する。
複数のフラグを指定するには、それらの論理 OR をとって指定すればよい。
オプションをひとつも指定したくないときには、
.I flags
に 0 を設定する必要がある。
.TP
.B AI_V4MAPPED
このフラグは
.B AF_INET6
と共に用いられ、IPv6 アドレスの代わりに IPv4 アドレスを問い合わせる。
問い合わせる IPv4 アドレスは IPv6 アドレスにマップされる。
.TP
.B AI_ALL
このフラグは
.B AI_V4MAPPED
と共に用いられ、IPv4 アドレスと IPv6 アドレスの両方を問い合わせる。
見つかった IPv4 アドレスは、すべて IPv6 アドレスにマップされる。
.TP
.B AI_ADDRCONFIG
このフラグは
.B AF_INET6
と共に用いられ、
IPv6 が割り当てられたネットワークインターフェースが
システムにひとつもなければ IPv6 アドレスの問い合わせを行わず、
IPv4 が割り当てられたネットワークインターフェースが
システムにひとつもなければ IPv4 アドレスの問い合わせを行わないように要求する。
このフラグは単独でも、あるいは
.B AI_V4MAPPED
フラグと共にでも用いることができる。
.TP
.B AI_DEFAULT
このフラグは
.BR (AI_ADDRCONFIG | AI_V4MAPPED)
と等価である。
.SS "getipnodebyaddr() の引き数"
.BR getipnodebyaddr ()
関数は、ネットワークアドレスが
.I addr
引き数で指定されたホストの名前を引く。
.I af
引き数には以下の値のいずれかを指定する。
.TP
.B AF_INET
.I addr
引き数は
.I struct in_addr
へのポインターであり、
.I len
引き数は
.I sizeof(struct in_addr)
に設定しなければならない。
.TP
.B AF_INET6
.I addr
引き数は
.I struct in6_addr
へのポインターであり、
.I len
引き数は
.I sizeof(struct in6_addr)
に設定しなければならない。
.SH 返り値
エラーが起こるとヌル・ポインターが返され、
.I error_num
に以下にリストされたエラーコードのいずれかが設定される。
.TP
.B HOST_NOT_FOUND
ホスト名またはネットワークアドレスが見つからなかった。
.TP
.B NO_ADDRESS
ドメインネームサーバーは
そのネットワークアドレスまたはネットワーク名を認識したが、
返事が返ってこなかった。原因としては、
例えば IPv4 アドレスしか持たないネットワークホストに対して
IPv6 の情報の問い合わせが行われた (およびその逆) などが考えられる。
.TP
.B NO_RECOVERY
ドメインネームサーバーから恒久的な失敗 (permanent failure)
を意味する返事が返された。
.TP
.B TRY_AGAIN
ネームサーバーから一時的な失敗 (temporary failure)
を意味する返事が返された。次にはもうちょっと運が必要かも。
.PP
問い合わせに成功すると、
.I hostent
構造体へのポインタが返される。
この構造体は以下のフィールドからなる。
.TP
.I h_name
これはこのネットワークホストのオフィシャルな名前である。
.TP
.I h_aliases
これは、そのホストのオフィシャルでない別名へのポインターの配列である。
配列はヌル・ポインターで終端する。
.TP
.I h_addrtype
これは
.BR getipnodebyname ()
または
.BR getipnodebyaddr ()
に与えられた
.I af
引き数のコピーである。
.I af
引き数が
.B AF_INET
なら
.I h_addrtype
は常に
.B AF_INET
になり、
.I af
引き数が
.B AF_INET6
なら
.I h_addrtype
も常に
.B AF_INET6
になる。
.TP
.I h_length
このフィールドは、
.I h_addrtype
が
.B AF_INET
なら
.I sizeof(struct in_addr)
に、
.I h_addrtype
が
.B AF_INET6
なら
.I sizeof(struct in6_addr)
に設定される。
.TP
.I h_addr_list
これはひとつ以上のポインターの配列で、
それぞれのポインターは、
そのネットワークホストに対応するネットワークアドレス構造体を指す。
この配列はヌル・ポインターで終端する。
.SH 準拠
RFC\ 2553.
.\" POSIX.1-2001 にはない。
.SH 注意
これらの関数は glibc 2.1.91-95 に存在したが、再び削除された。
いくつかの Unix 風システムはこれらの関数に対応しているが、
これらの関数は全て推奨されない。
.SH 関連項目
.BR getaddrinfo (3),
.BR getnameinfo (3),
.BR inet_ntop (3),
.BR inet_pton (3)
