.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2005 Yuichi SATO all rights reserved.
.\" and Copyright (c) 2008 Akihiro MOTOKI
.\" Translated Tue Feb  1 07:25:51 JST 2005
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated 2008-09-16, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH SCALB 3 2009-03-15 "" "Linux Programmer's Manual"
.SH 名前
scalb, scalbf, scalbl \- 浮動小数点数に整数である基数の累乗を掛ける (廃止予定)
.SH 書式
.B #include <math.h>
.sp
.BI "double scalb(double " x ", double " exp );
.br
.BI "float scalbf(float " x ", double " exp );
.br
.BI "long double scalbl(long double " x ", double " exp );
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.ad l
.BR scalb ():
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 500
.br
.BR scalbf (),
.BR scalbl ():
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600
.ad b
\fI\-lm\fP でリンクする。
.SH 説明
これらの関数は最初の引き数
.I x
に
.B FLT_RADIX
の
.I exp
乗を掛ける
.RB ( FLT_RADIX
はおそらく 2 である)。つまり、以下の式の値を返す。
.nf

    x * FLT_RADIX ** exp
.fi

.B FLT_RADIX
の定義は
.I <float.h>
をインクルードすることで得られる。
.\" /usr/include ではなく、gcc の lib にある。
.SH 返り値
成功すると、これらの関数は \fIx\fP * \fBFLT_RADIX\fP ** \fIexp\fP を返す。

.I x
か
.I exp
が NaN の場合、NaN が返される。

.I x
が正の無限大 (負の無限大) で
.I exp
が負の無限大でない場合、正の無限大 (負の無限大) が返される。

.I x
が +0 (\-0) で
.I exp
が正の無限大でない場合、+0 (\-0) が返される。

.I x
がゼロで
.I exp
が正の無限大の場合、領域エラー (domain error) が発生し、
NaN が返される。

.I x
が無限大で
.I exp
が負の無限大の場合、領域エラー (domain error) が発生し、
NaN が返される。

結果がオーバーフローする場合、
範囲エラー (range error) が発生し、
各関数はそれぞれ
.BR HUGE_VAL ,
.BR HUGE_VALF ,
.BR HUGE_VALL
を返す。符号は
.I x
と同じになる。

結果がアンダーフローする場合、範囲エラーが発生し、
各関数は 0 を返す。符号は
.I x
と同じになる。
.SH エラー
これらの関数を呼び出した際にエラーが発生したかの判定方法についての情報は
.BR math_error (7)
を参照のこと。
.PP
以下のエラーが発生する可能性がある。
.TP
領域エラー (domain error): \fIx\fP が 0 で \fIexp\fP が正の無限大、\
または \fIx\fP が正の無限大で \fIexp\fP が負の無限大
.\" .I errno
.\" is set to
.\" .BR EDOM .
不正 (invalid) 浮動小数点例外
.RB ( FE_INVALID )
が上がる。
.TP
範囲エラー (range error)、オーバーフロー
.\" .I errno
.\" is set to
.\" .BR ERANGE .
オーバーフロー浮動小数点例外
.RB ( FE_OVERFLOW )
が上がる。
.TP
範囲エラー (range error)、アンダーフロー
.\" .I errno
.\" is set to
.\" .BR ERANGE .
アンダーフロー浮動小数点例外
.RB ( FE_UNDERFLOW )
が上がる。
.PP
これらの関数は
.I errno
を設定しない。
.\" FIXME . Is it intentional that these functions do not set errno?
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6803
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6804
.SH 準拠
.BR scalb ()
は POSIX.1-2001 で規定されているが、廃止予定とされている。
POSIX.1-2008 では
.BR scalb ()
の仕様は削除されており、代わりに
.BR scalbln (3),
.BR scalblnf (3),
.BR scalblnl (3)
の使用が推奨されている。
.BR scalb ()
関数は 4.3BSD に由来する。

.BR scalbf ()
と
.BR scalbl ()
は標準化されていない。
それにも関わらず、
.BR scalbf ()
はいくつかの他のシステムに存在する。
.\" Looking at header files: scalbf() is present on the
.\" BSDs, Tru64, HP-UX 11, Irix 6.5; scalbl() is on HP-UX 11 and Tru64.
.SH 関連項目
.BR ldexp (3),
.BR scalbln (3)
