.\" Hey Emacs! This file is -*- nroff -*- source.
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2003-11-15 by aeb
.\"
.\" Japanese Version Copyright (c) 1997 HIROFUMI Nishizuka
.\"	all rights reserved.
.\" Translated 1997-12-19, HIROFUMI Nishizuka <nishi@rpts.cl.nec.co.jp>
.\" Updated & Modefied 1999-02-26, Shouichi Saito
.\" Updated & Modified 2004-06-05, Yuichi SATO <ysato444@yahoo.co.jp>
.\" Updated & Modified 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2008-12-24, Akihiro MOTOKI, LDP v3.14
.\"
.TH GETGRNAM 3 2009-03-30 "" "Linux Programmer's Manual"
.SH 名前
getgrnam, getgrnam_r, getgrgid, getgrgid_r \- グループファイルエントリの取り出し
.SH 書式
.nf
.B #include <sys/types.h>
.B #include <grp.h>
.sp
.BI "struct group *getgrnam(const char *" name );
.sp
.BI "struct group *getgrgid(gid_t " gid );
.sp
.BI "int getgrnam_r(const char *" name ", struct group *" grp ,
.br
.BI "          char *" buf ", size_t " buflen ", struct group **" result );
.sp
.BI "int getgrgid_r(gid_t " gid ", struct group *" grp ,
.br
.BI "          char *" buf ", size_t " buflen ", struct group **" result );
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.ad l
.in
.sp
.BR getgrnam_r (),
.BR getgrgid_r ():
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _BSD_SOURCE ||
_SVID_SOURCE || _POSIX_SOURCE
.ad b
.SH 説明
.BR getgrnam ()
関数は、グループ名
.I name
にマッチするグループ・データベースのエントリを
要素毎に分解し、各要素を格納した構造体へのポインタを返す
(パスワード・データベースの例:
ローカルのグループファイル
.IR /etc/group ,
NIS, LDAP)。
.PP
.BR getgrgid ()
関数は、グループ ID
.I uid
にマッチするグループ・データベースのエントリを
要素毎に分解し、各要素を格納した構造体へのポインタを返す。
.PP
.BR getgrnam_r ()
と
.BR getgrgid_r ()
関数は (上記の関数と) 同じ情報を取得するが、
取得した
.I group
構造体を
.I grp
が指す領域に格納する。
この
.I group
構造体には文字列へのポインタが含まれ、
これらの文字列はサイズ
.I buflen
のバッファ
.I buf
に格納される。
成功した場合
.I *gbufp
には結果へのポインタが格納される。
エントリが見つからなかった場合やエラーが発生した場合には
.I *result
には NULL が入る。
.PP
\fIgroup\fP 構造体は、\fI<grp.h>\fP で以下のように定義されている:
.sp
.in +4n
.nf
struct group {
    char   *gr_name;       /* グループ名 */
    char   *gr_passwd;     /* グループのバスワード */
    gid_t   gr_gid;        /* グループ ID */
    char  **gr_mem;        /* グループのメンバ */
};
.fi
.in
.PP
.I buf
に最大必要なサイズは、
.BR sysconf (3)
に引き数
.B _SC_GETGR_R_SIZE_MAX
を指定して実行することで分かる。
.SH 返り値
.BR getgrnam ()
と
.BR getgrgid ()
関数は、
.I group
構造体へのポインタを返す。
マッチするエントリが見つからなかった場合や、
エラーが発生した場合は NULL を返す。
エラーが起こった場合、
.I errno
が適切に設定される。
呼び出しの後で
.I errno
をチェックしたい場合は、
呼び出しの前に (この値を) 0 に設定しておくべきである。
.LP
返り値は静的な領域を指しており、その後の
.BR getgrent (3),
.BR getgrgid (),
.BR getgrnam ()
の呼び出しで上書きされるかもしれない。
(返されたポインタを
.BR free (3)
に渡さないこと。)
.LP
成功すると、
.BR getgrnam_r ()
と
.BR getgrgid_r ()
は 0 を返し、
.I *result
に
.I grp
を設定する。
マッチするグループ・エントリが見つからなかった場合には、
0 を返し、
.I *result
に NULL を設定する。
エラーの場合、エラー番号を返し、
.I *result
に NULL を設定する。
.SH エラー
.TP
.BR 0 " または " ENOENT " または " ESRCH " または " EBADF " または " EPERM " または ... "
指定された
.I name
または
.I gid
が見つからなかった。
.TP
.B EINTR
シグナルがキャッチされた。
.TP
.B EIO
I/O エラー。
.TP
.B EMFILE
呼び出したプロセスにおいて、
既に最大数
.RB ( OPEN_MAX )
のファイルがオープンされている。
.TP
.B ENFILE
システム上で既に最大数のファイルがオープンされている。
.TP
.B ENOMEM
.\" POSIX にはない
.I group
構造体を割り当てるためのメモリが不十分。
.\" グループ情報構造体を割り当てるため、またはバッファを割り当てるための
.TP
.B ERANGE
与えられたバッファ空間が不十分である。
.SH ファイル
.TP
.I /etc/group
ローカルのグループ・データベースファイル
.SH 準拠
SVr4, 4.3BSD, POSIX.1-2001.
.SH 注意
上記の「返り値」以下の記述は POSIX.1-2001 に拠る。
この標準は「(エントリが) 見つからないこと」をエラーとしていないので、
そのような場合に
.I errno
がどのような値になるかを定めていない。
そのため、エラーを認識することは不可能である。
POSIX に準拠して、エントリが見つからない場合は
.I errno
を変更しないようにすべきである、と主張する人もいるかもしれない。
様々な Unix 系のシステムで試してみると、そのような場合には
0, ENOENT, EBADF, ESRCH, EWOULDBLOCK, EPERM といった様々な値が返される。
他の値が返されるかもしれない。
.\" より正確には:
.\" AIX 5.1 は ESRCH を返す。
.\" OSF1 4.0g は EWOULDBLOCK を返す。
.\" libc, glibc (バージョン 2.6 まで), Irix 6.5 は ENOENT を返す。
.\" glibc (バージョン 2.7 以降) は 0 を返す。
.\" FreeBSD 4.8, OpenBSD 3.2, NetBSD 1.6 は EPERM を返す。
.\" SunOS 5.8 は EBADF を返す。
.\" Tru64 5.1b, HP-UX-11i, SunOS 5.7 は 0 を返す。
.SH 関連項目
.BR endgrent (3),
.BR fgetgrent (3),
.BR getgrent (3),
.BR getpwnam (3),
.BR setgrent (3),
.BR group (5)
