.\"  Copyright 2003 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\"  Distributed under GPL
.\"  this is the 3rd type of interface for cryptographic routines
.\"  1. encrypt() expects a bit field
.\"  2. cbc_crypt() byte values
.\"  3. xencrypt() a hexstring
.\"  to bad to be true :(
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Wed Sep 15 01:02:11 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH XCRYPT 3 2003-04-04 "" "Linux Programmer's Manual"
.SH 名前
xencrypt, xdecrypt, passwd2des \- RFS パスワード暗号化
.SH 書式
.B "#include <rpc/des_crypt.h>"
.sp
.BI "void passwd2des(char " *passwd ", char *" key ");"
.sp
.BI "int xencrypt(char *" secret ", char *" passwd ");"
.sp
.BI "int xdecrypt(char *" secret ", char *" passwd ");"
.SH 説明
関数
.BR passwd2des ()
は任意の長さの文字列
.I passwd
をとり、長さ 8 の文字配列
.I key
を埋める。
配列
.I key
は DES キーとして使うのに適している。
この配列の各バイトのビット 0 は奇数パリティである。
ここで説明されている残りの 2 つの関数は、
この関数を使い、引き数
.I passwd
を DES キーに変換する。
.LP
.BR xencrypt ()
関数は
.\" (アルファベット 0123456789abcdefABCDEF で表される)
16 進数で与えられた ASCII 文字列
.I secret
をとる。
この長さは 16 の倍数でなければならない。
そして
.BR passwd2des ()
によって
.I passwd
から導き出された DES キーを使い、
.I secret
を暗号化する。
その結果は
.\" (アルファベット 0123456789abcdef で表される)
16 進数文字列として
.I secret
に再び同じ長さで出力される。
.LP
.BR xdecrypt ()
関数は逆の操作を行う。
.SH 返り値
関数
.BR xencrypt ()
と
.BR xdecrypt ()
は、成功した場合に 1 を返し、失敗した場合に 0 を返す。
.SH バージョン
これらのルーチンは libc 4.6.27 以降と glibc 2.1 以降に存在する。
.SH バグ
上記のインクルードファイルにプロトタイプがない。
.SH 関連項目
.BR cbc_crypt (3)
