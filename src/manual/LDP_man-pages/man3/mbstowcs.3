.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single Unix specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\" Japanese Version Copyright (c) 1999 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Tue Jan 11 00:56:04 JST 2000
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH MBSTOWCS 3 1999-07-25 "GNU" "Linux Programmer's Manual"
.SH 名前
mbstowcs \- マルチバイト文字列をワイド文字列に変換する
.SH 書式
.nf
.B #include <stdlib.h>
.sp
.BI "size_t mbstowcs(wchar_t *" dest ", const char *" src ", size_t " n );
.fi
.SH 説明
\fIdest\fP が NULL ポインターでなければ
.BR mbstowcs ()
関数は
マルチバイト文字列 \fI*src\fP を \fIdest\fP から始まるワイド文字列に
変換する。\fIdest\fP には最大で \fIn\fP 文字のワイド文字が
書き込まれる。変換は初期状態で開始され、
以下の三つのいずれかの条件で停止する:
.IP 1. 3
不正なマルチバイト列に遭遇した。この場合には
.I (size_t)\ \-1
を返す。
.IP 2.
\fIn\fP 文字の L\(aq\\0\(aq 以外のワイド文字を \fIdest\fP に格納した場合。
この場合は \fI*src\fP が次に変換されるマルチバイト列を指すようにして、
\fIdest\fP に書き込まれたワイド文字の数を返す。しかしこの指している
場所のシフト状態は失われる。
.IP 3.
マルチバイト文字列が終端の \(aq\\0\(aq まで含めて完全に変換された場合。
この場合は終端の L\(aq\\0\(aq 文字を除いて
\fIdest\fP に書き込まれた文字数を返す。
.PP
プログラマーは \fIdest\fP に最低でも \fIn\fP ワイド文字を書き込むこ
とができる空間があることを保証しなければならない。
.PP
\fIdest\fP が NULL の場合、\fIn\fP は無視され、上記と同様の変換が
行われるが、変換されたワイド文字はメモリに書き込まれず、変換先の上限
が存在しない。
.PP
上記の 2. の場合を避けるためにプログラマーは \fIn\fP が
\fImbstowcs(NULL,src,0)+1\fP 以上であることを保証すべきである。
.SH 返り値
.BR mbstowcs ()
関数はワイド文字列に変換完了したワイド文字の数を返す。
終端のナルワイド文字は含まない。不正なマルチバイト列に遭遇した場合には
.I (size_t)\ \-1
を返す。
.SH 準拠
C99.
.SH 注意
.BR mbstowcs ()
の動作は現在のロケールの
.B LC_CTYPE
カテゴリに依存している。
.PP
.BR mbsrtowcs (3)
関数は同じ機能のより良いインターフェースを提供する。
.SH 関連項目
.BR mbsrtowcs (3)
