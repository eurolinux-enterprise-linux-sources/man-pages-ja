.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 1997 HORIMOTO Masafumi
.\"         all rights reserved.
.\" Translated 1997-09-10, HORIMOTO Masafumi
.\" Updated & Modified 2001-10-27, Yuichi SATO <ysato@h4.dion.ne.jp>
.\" Updated & Modified 2001-12-09, Yuichi SATO
.\" Updated & Modified 2005-09-06, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\" Updated 2007-06-18, Akihiro MOTOKI, LDP v2.57
.\"
.TH EXIT 3  2007-06-12 "Linux" "Linux Programmer's Manual"
.SH 名前
exit \- プロセスの正常終了
.SH 書式
.nf
.B #include <stdlib.h>
.sp
.BI "void exit(int " status );
.fi
.SH 説明
.BR exit ()
関数は、プロセスを正常に終了させ、
\fIstatus & 0377\fP という値を親プロセスへ返す
.RB ( wait (2)
を参照)。
.LP
.BR atexit (3)
や
.BR on_exit (3)
によって
登録された全ての関数は、それらが登録された順番と逆順にコールされる。
(登録された関数の中で
.BR atexit (3)
or
.BR on_exit (3)
を使って
exit 処理中に実行される追加の関数を登録することができる;
新規に登録された関数は、この後で実行される関数リストの先頭に
追加される。)
これらの関数の一つが返らなかった場合
(例えば、その関数が
.BR _exit (2)
を呼び出したり、シグナルで自分自身を kill した場合)、
残りの関数はどれも呼び出されず、それ以降の exit 処理
(特に
.BR stdio (3)
ストリームのフラッシュなど) は中止される。
ある関数が
.BR atexit (3)
や
.BR on_exit (3)
を使って複数回登録されていた場合、
その関数は登録されたのと同じ回数だけ呼び出される。
.LP
オープン中の
.BR stdio (3)
ストリームは全てフラッシュされて、クローズされる。
.BR tmpfile (3)
によって作成されたファイルは削除される。
.LP
C 標準では
.B EXIT_SUCCESS
と
.B EXIT_FAILURE
という 2つの定数が
定義されている。それぞれ正常終了と異常終了を示すもので、
.BR exit ()
として渡すことができる。
.SH 返り値
.BR exit ()
関数は返らない。
.SH 準拠
SVr4, 4.3BSD, POSIX.1-2001, C89, C99.
.SH 注意
.LP
.BR atexit (3)
や
.BR on_exit (3)
を使って登録された関数の中で
.BR exit ()
か
.BR longjmp (3)
が呼び出された場合、
何が起こるかは未定義である。
.LP
.B EXIT_SUCCESS
と
.B EXIT_FAILURE
を使うと、0 や (1 や \-1 といった) 0 以外の値を使うのに比べて
(Unix 以外の環境に) 移植するのがいくらか簡単になる。
特に VMS は別の方式を用いている。
.LP
BSD は終了コードを標準化しようとしている;
.I <sysexits.h>
を参照すること。
.LP
.BR exit ()
の後、親プロセスに終了ステータスが渡されなければならない。
終了ステータスの渡し方には 3 つの場合がある。
親プロセスが
.B SA_NOCLDWAIT
を設定した場合、
または
.B SIGCHLD
ハンドラを
.B SIG_IGN
に設定した場合、
ステータスは破棄される。
親プロセスが子プロセスの終了を待っている場合、
親プロセスに終了ステータスが伝えられる。
どちらの場合でも exit のプロセスは直ちに終了する。
「終了ステータスを関知せず終了も待たない」
ということを親プロセスが指示していない場合、
exit プロセスは (終了ステータスを表す 1 バイトのみを保持する)
「ゾンビ」プロセスになる。
これにより、後から
.BR wait (2)
関数を呼び出すことで、
親プロセスは終了ステータスを知ることができる。
.LP
.B SIGCHLD
シグナルのサポートが実装されている場合、
このシグナルは親プロセスに送られる。
親プロセスが
.B SA_NOCLDWAIT
を設定した場合、
.B SIGCHLD
シグナルが送られるかどうかは定義されていない。
.LP
そのプロセスがセッションのリーダーで、
そのプロセスの制御端末がそのセッションの制御端末である場合、
この制御端末のフォアグラウンドプロセスグループにある
各プロセスに
.B SIGHUP
シグナルが送られ、端末がセッションから切り離される。
これにより新しい制御プロセスを取得することができる。
.LP
プロセスが終了することにより、プロセスグループが孤立して、
そのグループのメンバーのうちのどれかが停止した場合、
プロセスグループの各プロセスに対して
.B SIGHUP
シグナルが送られ、続いて
.B SIGCONT
シグナルが送られる。
.SH 関連項目
.BR _exit (2),
.BR wait (2),
.BR atexit (3),
.BR on_exit (3),
.BR tmpfile (3)
