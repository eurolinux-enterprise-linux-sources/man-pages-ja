.\"  Copyright 2002 walter harms (walter.harms@informatik.uni-oldenburg.de)
.\"  Distributed under GPL
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Fri Aug 20 03:27:22 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.TH GETTTYENT 3 2002-07-18  "GNU" "Linux Programmer's Manual"
.SH 名前
getttyent, getttynam, setttyent, endttyent \- ttys ファイルのエントリを取得する
.SH 書式
.B "#include <ttyent.h>"
.sp
.B "struct ttyent *getttyent(void);"
.sp
.BI "struct ttyent *getttynam(const char *" name );
.sp
.B "int setttyent(void);"
.sp
.B "int endttyent(void);"
.SH 説明
これらの関数はファイル
.B _PATH_TTYS
(例えば
.IR /etc/ttys )
へのインタフェースを提供する。

関数
.BR setttyent ()
はファイルをオープンする。
また既にオープンされている場合は、巻き戻す。

関数
.BR endttyent ()
はファイルをクローズする。

関数
.BR getttynam ()
は指定された端末名についてファイルを検索する。
この関数は (以下で説明されている)
.I ttyent
構造体へのポインタを返す。

関数
.BR getttyent ()
は (もし必要であれば) ファイル
.B _PATH_TTYS
をオープンし、最初のエントリを返す。
ファイルが既にオープンされている場合は、次のエントリを返す。
.I ttyent
構造体は以下の通りである。
.in +4n
.nf

struct ttyent {
    char *ty_name;     /* 端末デバイス名 */
    char *ty_getty;    /* 実行するコマンド。通常は getty */
    char *ty_type;     /* termcap のための端末タイプ */
    int   ty_status;   /* 状態フラグ */
    char *ty_window;   /* ウィンドウマネージャを起動するコマンド */
    char *ty_comment;  /* コメントフィールド */
};
.fi
.in

.I ty_status
は以下のいずれか値をとることができる。
.br
.nf

#define TTY_ON     0x01  /* ログインを有効にする (ty_getty プログラムを開始する) */
#define TTY_SECURE 0x02  /* ユーザ ID 0 でのログインを許可する */
.fi
.SH 準拠
POSIX.1-2001 にはない。
BSD 系に存在し、おそらく他のシステムにもあるだろう。
.SH 注意
Linux では、ファイル
.I /etc/ttys
と上で説明した関数は使われていない。
.SH 関連項目
.BR ttyname (3),
.BR ttyslot (3)
