.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\"	Single UNIX Specification, Version 2
.\" Modified Thu Apr  8 15:00:12 1993, David Metcalfe
.\" Modified Sat Jul 24 18:44:45 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Feb 14 21:47:50 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Mon Oct 11 11:11:11 1999 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Wed Nov 10 00:02:26 1999 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Sun May 20 22:17:20 2001 by Andries Brouwer (aeb@cwi.nl)
.\"
.\" Japanese Version Copyright (c) 1997 HIROFUMI Nishizuka
.\"	all rights reserved.
.\" Translated 1997-12-19, HIROFUMI Nishizuka <nishi@rpts.cl.nec.co.jp>
.\" Updated 2000-06-18, Kentaro Shirakata <argrath@ub32.org>
.\" Updated 2005-11-19, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>
.\"
.TH PUTENV 3  2007-07-26 "GNU" "Linux Programmer's Manual"
.SH 名前
putenv \- 環境変数の変更または追加
.SH 書式
.nf
.B #include <stdlib.h>
.sp
.BI "int putenv(char *" string );
.\" Not: const char *
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR putenv ():
_SVID_SOURCE || _XOPEN_SOURCE
\"O .SH DESCRIPTION
.SH 説明
.BR putenv ()
関数は、環境変数の追加または値の変更を行う。
引数 \fIstring\fP は \fIname\fP=\fIvalue\fP という形式を取る。
\fIname\fP が環境に存在しない場合は \fIstring\fP が環境に追加される。
\fIname\fP が環境に存在する場合は \fIname\fP の値は \fIvalue\fP に変更される。
\fIstring\fP が指している文字列は環境の一部となるので、
文字列を変更すると環境も変更される。
.SH 返り値
.BR putenv ()
関数は、成功した場合 0 を、
エラーが発生した場合 0 以外を返す。
.SH エラー
.TP
.B ENOMEM
新しい環境を割り当てるのに十分な空きがない。
.SH 準拠
SVr4, POSIX.1-2001, 4.3BSD.
.SH 注意
.BR putenv ()
はリエントラントであることを求められていない。
libc4, libc5, glibc 2.0 ではリエントラントではない。
glibc 2.1 ではリエントラントである。
.LP
libc4, libc5, glibc に関する説明:
もし引数  \fIstring\fP が \fIname\fP 単独で、
\(aq=\(aq 文字を含んでいない場合、環境変数 \fIname\fP は環境から除去される。
もし
.BR putenv ()
が新しい \fIenviron\fP 配列を確保しなければならない時、
以前の \fIenviron\fP 配列も
.BR putenv ()
によって確保されたものならば、
それは解放される。
環境変数そのものに割り当てられた古い記憶領域が解放されることはない。
.LP
libc4 と libc5 と glibc 2.1.2 では SUSv2 に準拠している。
.BR putenv ()
で与えられたポインタ \fIstring\fP が使われる。
この文字列は環境の一部となり、後で変更すると環境も変わる。
(従って、
.BR putenv ()
を自動変数を引数として呼び出し、
\fIstring\fPが環境の一部のままで呼び出した関数から return するとエラーになる)
しかし、glibc 2.0-2.1.1 では異なり、文字列のコピーが使われる。
これはメモリリークを引き起こすだけでなく、 SUSv2 に違反している。
これは glibc2.1.2 で修正された。
.LP
4.4BSD バージョンでは、glibc 2.0 と同様にコピーを使う。
.LP
SUSv2 ではプロトタイプから \fIconst\fP が取り除かれており、
glibc 2.1.3 もそのようになっている。
.SH 関連項目
.BR clearenv (3),
.BR getenv (3),
.BR setenv (3),
.BR unsetenv (3),
.BR environ (7)
