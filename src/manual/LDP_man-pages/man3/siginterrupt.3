.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Jul 25 10:40:51 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Apr 14 16:20:34 1996 by Andries Brouwer (aeb@cwi.nl)
.\"
.\" Japanese Version Copyright (c) 1998 HANATAKA Shinya
.\"         all rights reserved.
.\" Translated Sun May 24 13:44:00 JST 1998
.\"         by HANATAKA Shinya <hanataka@abyss.rim.or.jp>
.\"
.TH SIGINTERRUPT 3 2009-03-15 "" "Linux Programmer's Manual"
.SH 名前
siginterrupt \- シグナルでシステム・コールに割り込むことを許す
.SH 書式
.nf
.B #include <signal.h>
.sp
.BI "int siginterrupt(int " sig ", int " flag );
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件
.RB ( feature_test_macros (7)
参照):
.in
.sp
.BR siginterrupt ():
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500
.SH 説明
.BR siginterrupt ()
関数は、システム・コールがシグナル \fIsig\fP
によって割り込まれた後、再実行の際の振る舞いを変更する。
\fIflag\fP 引き数が偽 (0) ならば、システム・コールが指定した
シグナル \fIsig\fP によって割り込まれた後に、そのシステム・コールは
再実行される。これは Linux においてデフォルトの動作である。一方、
.BR signal (2)
関数で新しいシグナル・ハンドラーを指定した場合は
デフォルトでシステム・コールは中断される。
.PP
\fIflag\fP 引き数が真 (1) でデータの転送が全く行なわれていないならば、
シグナル \fIsig\fP でシステム・コールは中断されて、\-1 が返され、
\fIerrno\fP に
.B EINTR
が設定される。
.PP
\fIflag\fP 引き数が真 (1) でデータの転送が開始されていれば、
システム・コールは中断され、それまでに実際に転送されたデータ
の量が返される。
.SH 返り値
.BR siginterrupt ()
関数は成功した場合 0 を返す。
シグナル番号 \fIsig\fP が不正な場合は \-1 を返す。
.SH エラー
.TP
.B EINVAL
指定したシグナル番号が不正である。
.SH 準拠
4.3BSD, POSIX.1-2001.
POSIX.1-2008 は、
.BR siginterrupt ()
を廃止予定としている。
代わりに、
.BR sigaction (2)
に
.B SA_RESTART
フラグを指定して使うことを推奨している。
.SH 関連項目
.BR signal (2)
