.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Japanese Version Copyright (c) 2004 Yuichi SATO
.\"         all rights reserved.
.\" Translated Thu Dec 16 03:35:45 JST 2004
.\"         by Yuichi SATO <ysato444@yahoo.co.jp>
.\"
.\"WORD:	feature test macro	機能テストマクロ
.\"
.TH POSIXOPTIONS 7 2007-12-21 "" "Linux Programmer's Manual"
.SH 名前
POSIX 標準の選択可能な部分
.SH 説明
POSIX 標準 (以下の情報は POSIX.1-2001 の抜粋) は
互換システムの動作とインタフェースのセットを記述している。
しかし、多くのインタフェースは選択可能であり、
コンパイル時にインタフェースが使用可能かをテストする機能テストマクロと、
実行時にテストする関数
.BR sysconf (3),
.BR fpathconf (3),
.BR pathconf (3),
.BR confstr (3)
がある。
シェルスクリプトでは
.BR getconf (1)
を使うことができる。
詳細は
.BR sysconf (3)
を参照すること。
.LP
POSIX 省略形の名前・オプション・オプションを調べるための
.BR sysconf ()
引き数の名前・(可能ならば) 非常に短い説明を記述する。
より正確な詳細は POSIX 標準自身に書かれている。
POSIX 標準は今日では Web で自由にアクセスできる。
.SS "ADV - _POSIX_ADVISORY_INFO - _SC_ADVISORY_INFO"
以下のアドバイスの関数が存在する。
.br
.nf
.in +4

.IR posix_fadvise (),
.IR posix_fallocate (),
.IR posix_memalign (),
.IR posix_madvise ().
.br
.in -4
.fi
.SS "AIO - _POSIX_ASYNCHRONOUS_IO - _SC_ASYNCHRONOUS_IO"
ヘッダ
.I <aio.h>
が存在する。
以下の関数が存在する。
.br
.nf
.in +4

.IR aio_cancel (),
.IR aio_error (),
.IR aio_fsync (),
.IR aio_read (),
.IR aio_return (),
.IR aio_suspend (),
.IR aio_write (),
.IR lio_listio ().
.br
.in -4
.fi
.SS "BAR - _POSIX_BARRIERS - _SC_BARRIERS"
このオプションは
.B _POSIX_THREADS
と
.B _POSIX_THREAD_SAFE_FUNCTIONS
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR pthread_barrier_destroy (),
.IR pthread_barrier_init (),
.IR pthread_barrier_wait (),
.IR pthread_barrierattr_destroy (),
.IR pthread_barrierattr_init ().
.in -4
.br
.fi
.\" .SS "BE"
.\" バッチ環境
.\" .SS "CD"
.\" C による開発
.SS "--- - POSIX_CHOWN_RESTRICTED"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、
root だけがファイル所有者の変更を許され、
root 以外はファイルのグループを
自分が所属するグループの 1 つに設定することだけができる。
これは以下の関数に影響する。
.br
.nf
.in +4n

.IR chown (),
.IR fchown ().
.\" lchown() はどうなのか?
.in -4
.br
.fi
.SS "CS - _POSIX_CLOCK_SELECTION - _SC_CLOCK_SELECTION"
このオプションは
.B _POSIX_TIMERS
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR pthread_condattr_getclock (),
.IR pthread_condattr_setclock (),
.IR clock_nanosleep ().

.in -4
.br
.fi
.B CLOCK_REALTIME
が関数
.IR clock_settime ()
で変更された場合、絶対時間に関係する全てのタイマのセットに影響する。
.SS "CPT - _POSIX_CPUTIME - _SC_CPUTIME"
clockID CLOCK_PROCESS_CPUTIME_ID がサポートされている。
このクロックの初期値は、各プロセス毎に 0 となる。
このオプションは
.B _POSIX_TIMERS
オプションを暗黙の内に指定する。
関数
.IR clock_getcpuclockid ()
が存在する。
.\" .SS "FD"
.\" Fortran による開発
.\" .SS "FR"
.\" Fortran ランタイム
.SS "--- - _POSIX_FILE_LOCKING - _SC_FILE_LOCKING"
このオプションは削除された。XPG6 最終版にはない。
.SS "FSC - _POSIX_FSYNC - _SC_FSYNC "
関数
.IR fsync ()
が存在する。
.SS "IP6 - _POSIX_IPV6 - _SC_IPV6"
Internet Protocol Version 6 がサポートされている。
.SS "--- - _POSIX_JOB_CONTROL - _SC_JOB_CONTROL"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、
システムは POSIX 方式のジョブ制御を実装しており、
以下の関数が存在する。
.br
.nf
.in +4

.IR setpgid (),
.IR tcdrain (),
.IR tcflush (),
.IR tcgetpgrp (),
.IR tcsendbreak (),
.IR tcsetattr (),
.IR tcsetpgrp ().
.in -4
.fi
.SS "MF - _POSIX_MAPPED_FILES - _SC_MAPPED_FILES"
共有メモリがサポートされている。
インクルードファイル
.I <sys/mman.h>
が存在する。
以下の関数が存在する。
.br
.nf
.in +4n

.IR mmap (),
.IR msync (),
.IR munmap ().
.in -4
.br
.fi
.SS "ML - _POSIX_MEMLOCK - _SC_MEMLOCK"
共有メモリがコア内にロックできる。
以下の関数が存在する。
.br
.nf
.in +4n

.IR mlockall (),
.IR munlockall ().
.in -4
.br
.fi
.SS "MR/MLR - _POSIX_MEMLOCK_RANGE - _SC_MEMLOCK_RANGE"
より詳細に、範囲をコア内にロックできる。
以下の関数が存在する。
.br
.nf
.in +4n

.IR mlock (),
.IR munlock ().
.in -4
.br
.fi
.SS "MPR - _POSIX_MEMORY_PROTECTION - _SC_MEMORY_PROTECTION"
関数
.IR mprotect ()
が存在する。
.SS "MSG - _POSIX_MESSAGE_PASSING - _SC_MESSAGE_PASSING"
インクルードファイル
.I <mqueue.h>
が存在する。
以下の関数が存在する。
.br
.nf
.in +4

.IR mq_close (),
.IR mq_getattr (),
.IR mq_notify (),
.IR mq_open (),
.IR mq_receive (),
.IR mq_send (),
.IR mq_setattr (),
.IR mq_unlink ().
.br
.in -4
.fi
.SS "MON - _POSIX_MONOTONIC_CLOCK - _SC_MONOTONIC_CLOCK"
.B CLOCK_MONOTONIC
がサポートされている。
このオプションは
.B _POSIX_TIMERS
オプションを暗黙の内に指定する。
影響を受ける関数は以下の通り。
.nf
.in +4

.IR aio_suspend (),
.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR timer_create ().
.in -4
.fi
.SS "--- - _POSIX_MULTI_PROCESS - _SC_MULTI_PROCESS"
このオプションは削除された。XPG6 最終版にはない。
.\" .SS "MX"
.\" IEC 60559 浮動小数点数オプション。
.SS "--- - _POSIX_NO_TRUNC"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、
.B NAME_MAX
より長いパス名の構成要素は切り詰められないが、エラーになる。
この設定は構成要素のパス接頭辞に依存する場合もある。
.SS "PIO - _POSIX_PRIORITIZED_IO - _SC_PRIORITIZED_IO"
このオプションは非同期 I/O の優先度が指定できることを表す。
これは以下の関数に影響する。
.br
.nf
.in +4

.IR aio_read (),
.IR aio_write ().
.in -4
.fi
.SS "PS - _POSIX_PRIORITY_SCHEDULING - _SC_PRIORITY_SCHEDULING"
インクルードファイル
.I <sched.h>
が存在する。
以下の関数が存在する。
.br
.nf
.in +4

.IR sched_get_priority_max (),
.IR sched_get_priority_min (),
.IR sched_getparam (),
.IR sched_getscheduler (),
.IR sched_rr_get_interval (),
.IR sched_setparam (),
.IR sched_setscheduler (),
.IR sched_yield ().

.in -4
.fi
.B _POSIX_SPAWN
も有効な場合は、以下の関数が存在する。
.br
.nf
.in +4

.IR posix_spawnattr_getschedparam (),
.IR posix_spawnattr_getschedpolicy (),
.IR posix_spawnattr_setschedparam (),
.IR posix_spawnattr_setschedpolicy ().
.in -4
.fi
.SS "RS - _POSIX_RAW_SOCKETS"
raw ソケットがサポートされている。
影響を受ける関数は以下の通り。
.br
.nf
.in +4n

.IR getsockopt (),
.IR setsockopt ().
.in -4
.br
.fi
.SS "--- - _POSIX_READER_WRITER_LOCKS - _SC_READER_WRITER_LOCKS"
このオプションは
.B _POSIX_THREADS
オプションを暗黙の内に指定する。
逆に POSIX.1-2001 では
.B _POSIX_THREADS
オプションはこのオプションを暗黙の内に指定する。
以下の関数が存在する。
.nf
.in +4

.IR pthread_rwlock_destroy (),
.IR pthread_rwlock_init (),
.IR pthread_rwlock_rdlock (),
.IR pthread_rwlock_tryrdlock (),
.IR pthread_rwlock_trywrlock (),
.IR pthread_rwlock_unlock (),
.IR pthread_rwlock_wrlock (),
.IR pthread_rwlockattr_destroy (),
.IR pthread_rwlockattr_init ().
.in -4
.fi
.SS "RTS - _POSIX_REALTIME_SIGNALS - _SC_REALTIME_SIGNALS"
リアルタイムシグナルがサポートされている。
以下の関数が存在する。
.br
.nf
.in +4

.IR sigqueue (),
.IR sigtimedwait (),
.IR sigwaitinfo ().
.br
.in -4
.fi
.SS "--- - _POSIX_REGEXP - _SC_REGEXP"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、
POSIX 正規表現がサポートされ、以下の関数が存在する。
.br
.nf
.in +4

.IR regcomp (),
.IR regerror (),
.IR regexec (),
.IR regfree ().
.br
.in -4
.fi
.SS "--- - _POSIX_SAVED_IDS - _SC_SAVED_IDS"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、
プロセスは保存 (saved) set-user-ID と保存 set-group-ID を持つ。
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR exec (),
.IR kill (),
.IR seteuid (),
.IR setegid (),
.IR setgid (),
.IR setuid ().
.br
.in -4
.fi
.\" .SS "SD"
.\" Software 開発
.SS "SEM - _POSIX_SEMAPHORES - _SC_SEMAPHORES"
インクルードファイル
.I <semaphore.h>
が存在する。
以下の関数が存在する。
.br
.nf
.in +4

.IR sem_close (),
.IR sem_destroy (),
.IR sem_getvalue (),
.IR sem_init (),
.IR sem_open (),
.IR sem_post (),
.IR sem_trywait (),
.IR sem_unlink (),
.IR sem_wait ().
.br
.in -4
.fi
.SS "SHM - _POSIX_SHARED_MEMORY_OBJECTS - _SC_SHARED_MEMORY_OBJECTS"
以下の関数が存在する。
.br
.nf
.in +4

.IR mmap (),
.IR munmap (),
.IR shm_open (),
.IR shm_unlink ().
.br
.in -4
.fi
.SS "--- - _POSIX_SHELL - _SC_SHELL"
このオプションが有効な場合 (POSIX.1-2001 では常に有効)、関数
.IR system ()
が存在する。
.SS "SPN - _POSIX_SPAWN - _SC_SPAWN"
このオプションは、例えば MMU が存在しないなどの理由によって、
.IR fork ()
を使用することが難しいか不可能という状況で、
プロセス生成をサポートすることを表す。
.B _POSIX_SPAWN
が有効な場合、インクルードファイル
.I <spawn.h>
と、以下の関数が存在する。
.br
.nf
.in +4

.IR posix_spawn (),
.IR posix_spawn_file_actions_addclose (),
.IR posix_spawn_file_actions_adddup2 (),
.IR posix_spawn_file_actions_addopen (),
.IR posix_spawn_file_actions_destroy (),
.IR posix_spawn_file_actions_init (),
.IR posix_spawnattr_destroy (),
.IR posix_spawnattr_getsigdefault (),
.IR posix_spawnattr_getflags (),
.IR posix_spawnattr_getpgroup (),
.IR posix_spawnattr_getsigmask (),
.IR posix_spawnattr_init (),
.IR posix_spawnattr_setsigdefault (),
.IR posix_spawnattr_setflags (),
.IR posix_spawnattr_setpgroup (),
.IR posix_spawnattr_setsigmask (),
.IR posix_spawnp ().

.in -4
.br
.fi
.B _POSIX_PRIORITY_SCHEDULING
も有効な場合、以下の関数が存在する。
.br
.nf
.in +4

.IR posix_spawnattr_getschedparam (),
.IR posix_spawnattr_getschedpolicy (),
.IR posix_spawnattr_setschedparam (),
.IR posix_spawnattr_setschedpolicy ().
.in -4
.fi
.SS "SPI - _POSIX_SPIN_LOCKS - _SC_SPIN_LOCKS"
このオプションは
.B _POSIX_THREADS
と
.B _POSIX_THREAD_SAFE_FUNCTIONS
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR pthread_spin_destroy (),
.IR pthread_spin_init (),
.IR pthread_spin_lock (),
.IR pthread_spin_trylock (),
.IR pthread_spin_unlock ().
.in -4
.br
.fi
.SS "SS - _POSIX_SPORADIC_SERVER - _SC_SPORADIC_SERVER"
スケジューリングポリシー
.B SCHED_SPORADIC
がサポートされている。
このオプションは
.B _POSIX_PRIORITY_SCHEDULING
オプションを暗黙の内に指定する。
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR sched_setparam (),
.IR sched_setscheduler ().
.in -4
.br
.fi
.SS "SIO - _POSIX_SYNCHRONIZED_IO - _SC_SYNCHRONIZED_IO"
影響を受ける関数は以下の通り。
.IR open (),
.IR msync (),
.IR fsync (),
.IR fdatasync ().
.SS "TSA - _POSIX_THREAD_ATTR_STACKADDR - _SC_THREAD_ATTR_STACKADDR"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_attr_getstack (),
.IR pthread_attr_getstackaddr (),
.IR pthread_attr_setstack (),
.IR pthread_attr_setstackaddr ().
.in -4
.br
.fi
.SS "TSS - _POSIX_THREAD_ATTR_STACKSIZE - _SC_THREAD_ATTR_STACKSIZE"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_attr_getstack (),
.IR pthread_attr_getstacksize (),
.IR pthread_attr_setstack (),
.IR pthread_attr_setstacksize ().
.in -4
.br
.fi
.SS "TCT - _POSIX_THREAD_CPUTIME - _SC_THREAD_CPUTIME"
clockID CLOCK_THREAD_CPUTIME_ID がサポートされている。
このオプションは
.B _POSIX_TIMERS
オプションを暗黙の内に指定する。
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_getcpuclockid (),
.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR timer_create ().
.in -4
.br
.fi
.SS "TPI - _POSIX_THREAD_PRIO_INHERIT - _SC_THREAD_PRIO_INHERIT"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_mutexattr_getprotocol (),
.IR pthread_mutexattr_setprotocol ().
.in -4
.br
.fi
.SS "TPP - _POSIX_THREAD_PRIO_PROTECT - _SC_THREAD_PRIO_PROTECT"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_mutex_getprioceiling (),
.IR pthread_mutex_setprioceiling (),
.IR pthread_mutexattr_getprioceiling (),
.IR pthread_mutexattr_getprotocol (),
.IR pthread_mutexattr_setprioceiling (),
.IR pthread_mutexattr_setprotocol ().
.in -4
.br
.fi
.SS "TPS - _POSIX_THREAD_PRIORITY_SCHEDULING - _SC_THREAD_PRIORITY_SCHEDULING"
このオプションが有効な場合、1 つのプロセス内の個々のスレッドを
個々の優先度または個々のスケジューラ (またはその両方) で実行できる。
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_attr_getinheritsched (),
.IR pthread_attr_getschedpolicy (),
.IR pthread_attr_getscope (),
.IR pthread_attr_setinheritsched (),
.IR pthread_attr_setschedpolicy (),
.IR pthread_attr_setscope (),
.IR pthread_getschedparam (),
.IR pthread_setschedparam (),
.IR pthread_setschedprio ().
.in -4
.br
.fi
.SS "TSH - _POSIX_THREAD_PROCESS_SHARED - _SC_THREAD_PROCESS_SHARED"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR pthread_barrierattr_getpshared (),
.IR pthread_barrierattr_setpshared (),
.IR pthread_condattr_getpshared (),
.IR pthread_condattr_setpshared (),
.IR pthread_mutexattr_getpshared (),
.IR pthread_mutexattr_setpshared (),
.IR pthread_rwlockattr_getpshared (),
.IR pthread_rwlockattr_setpshared ().
.in -4
.br
.fi
.SS "TSF - _POSIX_THREAD_SAFE_FUNCTIONS - _SC_THREAD_SAFE_FUNCTIONS"
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR readdir_r (),
.IR getgrgid_r (),
.IR getgrnam_r (),
.IR getpwnam_r (),
.IR getpwuid_r (),
.IR flockfile (),
.IR ftrylockfile (),
.IR funlockfile (),
.IR getc_unlocked (),
.IR getchar_unlocked (),
.IR putc_unlocked (),
.IR putchar_unlocked (),
.IR rand_r (),
.IR strerror_r (),
.IR strtok_r (),
.IR asctime_r (),
.IR ctime_r (),
.IR gmtime_r (),
.IR localtime_r ().
.in -4
.br
.fi
.SS "TSP - _POSIX_THREAD_SPORADIC_SERVER - _SC_THREAD_SPORADIC_SERVER"
このオプションは
.B _POSIX_THREAD_PRIORITY_SCHEDULING
オプションを暗黙の内に指定する。
影響を受ける関数は以下の通り。
.br
.nf
.in +4

.IR sched_getparam (),
.IR sched_setparam (),
.IR sched_setscheduler ().
.in -4
.br
.fi
.SS "THR - _POSIX_THREADS - _SC_THREADS"
POSIX スレッドの基本サポートが使用可能である。
以下の関数が存在する。
.br
.nf
.in +4

.IR pthread_atfork (),
.IR pthread_attr_destroy (),
.IR pthread_attr_getdetachstate (),
.IR pthread_attr_getschedparam (),
.IR pthread_attr_init (),
.IR pthread_attr_setdetachstate (),
.IR pthread_attr_setschedparam (),
.IR pthread_cancel (),
.IR pthread_cleanup_push (),
.IR pthread_cleanup_pop (),
.IR pthread_cond_broadcast (),
.IR pthread_cond_destroy (),
.IR pthread_cond_init (),
.IR pthread_cond_signal (),
.IR pthread_cond_timedwait (),
.IR pthread_cond_wait (),
.IR pthread_condattr_destroy (),
.IR pthread_condattr_init (),
.IR pthread_create (),
.IR pthread_detach (),
.IR pthread_equal (),
.IR pthread_exit (),
.IR pthread_getspecific (),
.IR pthread_join (),
.IR pthread_key_create (),
.IR pthread_key_delete (),
.IR pthread_mutex_destroy (),
.IR pthread_mutex_init (),
.IR pthread_mutex_lock (),
.IR pthread_mutex_trylock (),
.IR pthread_mutex_unlock (),
.IR pthread_mutexattr_destroy (),
.IR pthread_mutexattr_init (),
.IR pthread_once (),
.IR pthread_rwlock_destroy (),
.IR pthread_rwlock_init (),
.IR pthread_rwlock_rdlock (),
.IR pthread_rwlock_tryrdlock (),
.IR pthread_rwlock_trywrlock (),
.IR pthread_rwlock_unlock (),
.IR pthread_rwlock_wrlock (),
.IR pthread_rwlockattr_destroy (),
.IR pthread_rwlockattr_init (),
.IR pthread_self (),
.IR pthread_setcancelstate (),
.IR pthread_setcanceltype (),
.IR pthread_setspecific (),
.IR pthread_testcancel ().
.in -4
.br
.fi
.SS "TMO - _POSIX_TIMEOUTS - _SC_TIMEOUTS"
以下の関数が存在する。
.br
.nf
.in +4

.IR mq_timedreceive (),
.IR mq_timedsend (),
.IR pthread_mutex_timedlock (),
.IR pthread_rwlock_timedrdlock (),
.IR pthread_rwlock_timedwrlock (),
.IR sem_timedwait (),
.IR posix_trace_timedgetnext_event ().
.in -4
.br
.fi
.SS "TMR - _POSIX_TIMERS - _SC_TIMERS"
以下の関数が存在する。
.br
.nf
.in +4

.IR clock_getres (),
.IR clock_gettime (),
.IR clock_settime (),
.IR nanosleep (),
.IR timer_create (),
.IR timer_delete (),
.IR timer_gettime (),
.IR timer_getoverrun (),
.IR timer_settime ().
.in -4
.br
.fi
.SS "TRC - _POSIX_TRACE - _SC_TRACE"
POSIX トレーシング (tracing) が使用可能である。
以下の関数が存在する。
.br
.nf
.in +4

.IR posix_trace_attr_destroy (),
.IR posix_trace_attr_getclockres (),
.IR posix_trace_attr_getcreatetime (),
.IR posix_trace_attr_getgenversion (),
.IR posix_trace_attr_getmaxdatasize (),
.IR posix_trace_attr_getmaxsystemeventsize (),
.IR posix_trace_attr_getmaxusereventsize (),
.IR posix_trace_attr_getname (),
.IR posix_trace_attr_getstreamfullpolicy (),
.IR posix_trace_attr_getstreamsize (),
.IR posix_trace_attr_init (),
.IR posix_trace_attr_setmaxdatasize (),
.IR posix_trace_attr_setname (),
.IR posix_trace_attr_setstreamsize (),
.IR posix_trace_attr_setstreamfullpolicy (),
.IR posix_trace_clear (),
.IR posix_trace_create (),
.IR posix_trace_event (),
.IR posix_trace_eventid_equal (),
.IR posix_trace_eventid_get_name (),
.IR posix_trace_eventid_open (),
.IR posix_trace_eventtypelist_getnext_id (),
.IR posix_trace_eventtypelist_rewind (),
.IR posix_trace_flush (),
.IR posix_trace_get_attr (),
.IR posix_trace_get_status (),
.IR posix_trace_getnext_event (),
.IR posix_trace_shutdown (),
.IR posix_trace_start (),
.IR posix_trace_stop (),
.IR posix_trace_trygetnext_event ().
.in -4
.br
.fi
.SS "TEF - _POSIX_TRACE_EVENT_FILTER - _SC_TRACE_EVENT_FILTER"
このオプションは
.B _POSIX_TRACE
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR posix_trace_eventset_add (),
.IR posix_trace_eventset_del (),
.IR posix_trace_eventset_empty (),
.IR posix_trace_eventset_fill (),
.IR posix_trace_eventset_ismember (),
.IR posix_trace_get_filter (),
.IR posix_trace_set_filter (),
.IR posix_trace_trid_eventid_open ().
.in -4
.br
.fi
.SS "TRI - _POSIX_TRACE_INHERIT - _SC_TRACE_INHERIT"
トレースされているプロセスの子プロセスのトレースをサポートする。
このオプションは
.B _POSIX_TRACE
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR posix_trace_attr_getinherited (),
.IR posix_trace_attr_setinherited ().
.in -4
.br
.fi
.SS "TRL - _POSIX_TRACE_LOG - _SC_TRACE_LOG"
このオプションは
.B _POSIX_TRACE
オプションを暗黙の内に指定する。
以下の関数が存在する。
.br
.nf
.in +4

.IR posix_trace_attr_getlogfullpolicy (),
.IR posix_trace_attr_getlogsize (),
.IR posix_trace_attr_setlogfullpolicy (),
.IR posix_trace_attr_setlogsize (),
.IR posix_trace_close (),
.IR posix_trace_create_withlog (),
.IR posix_trace_open (),
.IR posix_trace_rewind ().
.in -4
.br
.fi
.SS "TYM - _POSIX_TYPED_MEMORY_OBJECTS - _SC_TYPED_MEMORY_OBJECT"
以下の関数が存在する。
.br
.nf
.in +4

.IR posix_mem_offset (),
.IR posix_typed_mem_get_info (),
.IR posix_typed_mem_open ().
.in -4
.br
.fi
.SS "--- - _POSIX_VDISABLE"
常に存在する (たぶん 0 である)。
変更可能な特殊制御文字を設定する値。
これにより特殊制御文字が無効であることを表す。
.SH "XOPEN 拡張"
.BR _XOPEN_CRYPT ,
.BR _XOPEN_LEGACY ,
.BR _XOPEN_REALTIME ,
.BR _XOPEN_REALTIME_THREADS ,
.BR _XOPEN_UNIX .
.\" 記述される予定である。
.SH 関連項目
.BR sysconf (3),
.BR standards (7)
