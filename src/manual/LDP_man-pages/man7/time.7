.\" Copyright (c) 2006 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2008-06-24, mtk: added some details about where jiffies come into
.\"     play; added section on high-resolution timers.
.\"
.\" Japanese Version Copyright (c) 2006 Yuichi SATO
.\"         all rights reserved.
.\" Translated 2006-07-23 by Yuichi SATO <ysato444@yahoo.co.jp>, LDP v2.36
.\" Updated 2007-05-04, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v2.44
.\" Updated 2008-08-10, Akihiro MOTOKI <amotoki@dd.iij4u.or.jp>, LDP v3.05
.\"
.TH TIME 7 2009-02-10 "Linux" "Linux Programmer's Manual"
.SH 名前
time \- 時間とタイマの概要
.SH 説明
.SS "実時間 (real time) とプロセス時間"
\fI実時間\fRは、特定の時点から計った時間と定義される。
特定の時点とは、過去の標準的な時点
(下記の紀元 (Epoch) とカレンダ時刻の説明を参照) や、
プロセスの一生における何らかの時点 (例えば、開始時) である
.RI ( "経過時間" )。

\fIプロセス時間\fRは、プロセスによって使われた総 CPU 時間と定義される。
多くの場合、\fIユーザ\fR時間と\fIシステム\fR時間に分けられる。
ユーザ CPU 時間は、コードをユーザモードで実行するのに使った時間である。
システム CPU 時間は、そのプロセスのために
カーネルがシステムモードで実行するのに使った時間である
(例えば、システムコールを実行するのに使った時間)。
.BR time (1)
コマンドはプログラムの実行に費された総 CPU 時間を計るのに使用される。
プログラムは、自身が費した総 CPU 時間を
.BR times (2),
.BR getrusage (2),
.BR clock (3)
を使って計ることができる。
.SS ハードウェアクロック
多くのコンピュータが (電池で駆動される) ハードウェアクロックを持っている。
カーネルは起動時にソフトウェアクロックを初期化するために
ハードウェアクロックを読み込む。
より詳しい情報は、
.BR rtc (4)
と
.BR hwclock (8)
を参照すること。
.SS "ソフトウェアクロック, HZ, Jiffy"
タイムアウトを設定したり (例えば
.BR select (2),
.BR sigtimedwait (2))、
.\" semtimedop(), mq_timedwait(), io_getevents(), poll() は同じ futex であり、
.\" したがっって sem_timedwait() は高精度タイマを使用しているようである。
CPU 時間を計測したり (例えば
.BR getrusage (2)) する様々なシステムコールの精度は
.I ソフトウェアクロック
の分解能 (resolution) に制限される。
ソフトウェアクロックとは、カーネルが管理する
.I jiffy
単位で時間を計測するクロックのことである。
jiffy の大きさはカーネル定数
.I HZ
の値で決定される。

.I HZ
の値はカーネルのバージョンとハードウェアプラットフォームで異なる。
i386 の場合は以下の通りである:
2.4.x とそれより前のカーネルでは、HZ は 100 であったので、
jiffy の値は 0.01 秒になっていた。
2.6.0 以降では、HZ は 1000 に増やされたので、jiffy の値は 0.001 秒である。
カーネル 2.6.13 以降では、HZ の値はカーネル設定パラメータになり、
100, 250 (デフォルト), 1000 という値にできる。
それぞれ jiffy の値は 0.01, 0.004, 0.001 秒になる。
カーネル 2.6.20 以降では、300 も利用できるようになっている。
300 は一般的な映像フレームレートの公倍数である (PAL, 25HZ; NTSC, 30HZ)。

.BR times (2)
システムコールは特殊なケースであり、
このシステムコールはカーネル定数
.I USER_HZ
で定義された粒度で時間を報告する。
ユーザ空間のアプリケーションは
.I sysconf(_SC_CLK_TCK)
を使ってこの定数の値を知ることができる。
.\" glibc gets this info with a little help from the ELF loader;
.\" see glibc elf/dl-support.c and kernel fs/binfmt_elf.c.
.\"
.SS "高精度タイマ"
Linux 2.6.21 より前では、タイマやスリープ関連のシステムコールの精度も
jiffy のサイズにより制限されていた。

Linux 2.6.21 以降では、Linux は高精度タイマ (high-resolution timers; HRTs)
をサポートしており、
.B CONFIG_HIGH_RES_TIMERS
で制御できる。
高精度タイマをサポートしているシステムでは、タイマとスリープ関連のシステムコール
の精度はもはや jiffy に制約されることはなく、
ハードウェアが許す限りの精度となる
(最近のハードウェアではマイクロ秒単位の精度が一般的である)。
高精度タイマがサポートされているかは、
.BR clock_getres (2)
を呼び出して分解能を確認するか、
.I /proc/timer_list
内の "resolution" エントリを参照するかで判断できる。

高精度タイマはすべてのハードウェアアーキテクチャでサポートされている
訳ではない (対応しているアーキテクチャは x86, arm, powerpc である)。
.SS "紀元"
Unix システムは時刻を \fI紀元\fR からの秒数で表現する。
紀元は 1970 年 1 月 1 日の朝 0:00:00 UTC で定義される。

プログラムは \fIカレンダ時刻\fR を
.BR gettimeofday (2)
を使って計ることができる。
この関数は紀元からの経過時間を (秒とマイクロ秒で) 返す。
.BR time (2)
は同様の情報を提供するが、最も近い秒の精度しかない。
システム時刻は
.BR settimeofday (2)
で変更できる。
.SS "要素別の時刻"
ライブラリ関数の中には
.I tm
型の構造体を使うものがある。
この構造体は\fI要素別の時刻\fRを表し、
時刻の値を別々の要素 (年・月・日・時・分・秒など) に分けて格納する。
この構造体は
.BR ctime (3)
に記述されており、カレンダ時刻を要素別の時刻に変換する
関数についても記述されている。
要素別の時刻を表示可能な文字列に変換する関数については、
.BR ctime (3),
.BR strftime (3),
.BR strptime (3)
に記述されている。
.SS "タイマのスリープと設定"
様々なシステムコールと関数により、指定された一定の時間、
プログラムはスリープ (実行を停止) することが可能である。
.BR nanosleep (2),
.BR clock_nanosleep (2),
.BR sleep (3)
を参照すること。

様々なシステムコールにより、プロセスは将来のある時点で
有効期間が終了するタイマを設定できる。
またオプションとして繰り返し間隔が指定できるものもある。
.BR alarm (2),
.BR getitimer (2),
.BR timerfd_create (2),
.BR timer_create (2)
を参照すること。
.SH 関連項目
.BR date (1),
.BR time (1),
.BR adjtimex (2),
.BR alarm (2),
.BR clock_gettime (2),
.BR clock_nanosleep (2),
.BR getitimer (2),
.BR getrlimit (2),
.BR getrusage (2),
.BR gettimeofday (2),
.BR nanosleep (2),
.BR stat (2),
.BR time (2),
.BR timer_create (2),
.BR timerfd_create (2),
.BR times (2),
.BR utime (2),
.BR adjtime (3),
.BR clock (3),
.BR clock_getcpuclockid (3),
.BR ctime (3),
.BR pthread_getcpuclockid (3),
.BR sleep (3),
.BR strftime (3),
.BR strptime (3),
.BR timeradd (3),
.BR usleep (3),
.BR rtc (4),
.BR hwclock (8)
