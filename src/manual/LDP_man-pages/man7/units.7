'\" t
.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Japanese Version Copyright (c) 2002 NAKANO Takeo all rights reserved.
.\" Translated Wed 2 Jan 2002 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH UNITS 7 2001-12-22 "Linux" "Linux Programmer's Manual"
.SH 名前
units, kilo, kibi, mega, mebi, giga, gibi \- 10 進および 2 進の接頭語
.SH 説明
.SS 10 進の接頭語
SI 単位系では 10 の累乗を示す接頭語を用いる。
キロメートルは 1000 メートル、メガワットは 1000000 ワットである。
次に標準的な接頭語を示す。
.RS
.TS
l l l.
接頭語	名前	値
y	ヨクト(yocto)	10^-24 = 0.000000000000000000000001
z	ゼプト(zepto)	10^-21 = 0.000000000000000000001
a	アト(atto)	10^-18 = 0.000000000000000001
f	フェムト(femto)	10^-15 = 0.000000000000001
p	ピコ(pico)	10^-12 = 0.000000000001
n	ナノ(nano)	10^-9  = 0.000000001
u	マイクロ(micro)	10^-6  = 0.000001
m	ミリ(milli)	10^-3  = 0.001
c	センチ(centi)	10^-2  = 0.01
d	デシ(deci)	10^-1  = 0.1
da	デカ(deka)	10^ 1  = 10
h	ヘクト(hecto)	10^ 2  = 100
k	キロ(kilo)	10^ 3  = 1000
M	メガ(mega)	10^ 6  = 1000000
G	ギガ(giga)	10^ 9  = 1000000000
T	テラ(tera)	10^12  = 1000000000000
P	ペタ(peta)	10^15  = 1000000000000000
E	エクサ(exa)	10^18  = 1000000000000000000
Z	ゼタ(zetta)	10^21  = 1000000000000000000000
Y	ヨタ(yotta)	10^24  = 1000000000000000000000000
.TE
.RE
.sp
マイクロの記号はギリシャ文字のμであるが、
ASCII でテキストが記述されていて、ギリシャ文字が使えない場合は
u と書かれることが多い。
.sp
.RS
http://physics.nist.gov/cuu/Units/prefixes.html
.RE
.sp
も参考にしてほしい。
.SS 2 進の接頭語
2 進の接頭語は 10 進の接頭語と似ているが、後ろに \(aqi\(aq が付く
(また "Ki" については大文字の \(aqK\(aq) で始まる)。
名前は、だいたい同じくらいの 10 進接頭語の最初の音節に、
2 進数であることを意味する "bi" を足したものになる。
.RS
.TS
l l l.
接頭語	名前	値
Ki	キビ(kibi)	2^10 = 1024
Mi	メビ(mebi)	2^20 = 1048576
Gi	ギビ(gibi)	2^30 = 1073741824
Ti	テビ(tebi)	2^40 = 1099511627776
Pi	ペビ(pebi)	2^50 = 1125899906842624
Ei	エクシビ(exbi)	2^60 = 1152921504606846976
.TE
.RE
.sp
.RS
http://physics.nist.gov/cuu/Units/binary.html
.RE
.sp
も参考にしてほしい。
.SS 考察
これらの 2 進の接頭語が導入される前は、
k=1000 と K=1024 のように使うのが割に良く知られた習慣だった
(b=ビット、B=バイト の関係に似ている)。
残念ながら M は最初から大文字なので、
2 進であることを示すためにさらに大文字にすることはできなかった。

当初はこのことはあまり大きな問題ではなかった。
なぜならメモリモジュールやディスクは 2 の累乗になるものだったので、
皆そのようなところでは「キロバイト」を 1024 バイト、
「メガバイト」を 1048576 バイトであるとみなしていたからである。
最初は接頭語の「キロ」とか「メガ」を曖昧に援用していたのだが、
そのうちコンピュータに関連する話題では、こちらが「実際の意味」になっていった。
しかしその後ディスクのテクノロジーが代わり、
ディスクサイズは任意の数値をとるようになった。
どっちつかずの時期がしばらく続いたあと、
ディスクのメーカーすべてが、標準を使うことに合意した。
すなわち k=1000, M=1000k, G=1000M である。

状況はひどくなった。14.4k モデムでは k=1000,
1.44MB フロッピーでは M=1024000 になった。
1998 年に、IEC は上記のような 2 進用の接頭語を承認し、
これによって両者をはっきり区別することが可能になった。

したがって今日では、MB=1000000B で、MiB = 1048576B なのである。

フリーソフトウェアの世界でも、
プログラムたちはゆっくりとこれらに準拠してきている。
Linux カーネルは、ブートすると次のようなメッセージを出す。
.sp
.RS
.nf
hda: 120064896 sectors (61473 MB) w/2048KiB Cache
.fi
.RE
.sp
MB はメガバイトで、KiB はキビバイトである。
